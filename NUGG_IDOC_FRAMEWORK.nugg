<?xml version="1.0" encoding="utf-16"?>
<nugget name="IDOC_FRAMEWORK">
 <DOMA DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASKLEN="0000" DDTEXT="Configurable logic for IDoc processing" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150600" OUTPUTSTYLE="00"/>
 <DOMA DOMNAME="ZBC_IDOC_LOGIC_TYPE" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" VALEXI="X" MASKLEN="0000" DDTEXT="IDoc logic type" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150600" OUTPUTSTYLE="00">
  <dd07v DOMNAME="ZBC_IDOC_LOGIC_TYPE" VALPOS="0001" DDLANGUAGE="E" DOMVALUE_L="MATNR" DDTEXT="Material conversion"/>
  <dd07v DOMNAME="ZBC_IDOC_LOGIC_TYPE" VALPOS="0002" DDLANGUAGE="E" DOMVALUE_L="KUNNR" DDTEXT="Customer conversion"/>
  <dd07v DOMNAME="ZBC_IDOC_LOGIC_TYPE" VALPOS="0003" DDLANGUAGE="E" DOMVALUE_L="UOM" DDTEXT="UOM conversion"/>
  <dd07v DOMNAME="ZBC_IDOC_LOGIC_TYPE" VALPOS="0004" DDLANGUAGE="E" DOMVALUE_L="DUPLICATE" DDTEXT="Duplicate check"/>
 </DOMA>
 <DTEL ROLLNAME="ZBC_CUST_CONV" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="09" SCRLEN2="13" SCRLEN3="25" DDTEXT="Customer conversion logic" REPTEXT="Customer conversion logic" SCRTEXT_S="Cust conv" SCRTEXT_M="Custcode conv" SCRTEXT_L="Customer conversion logic" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_DUPE_CHECK" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="10" SCRLEN2="15" SCRLEN3="21" DDTEXT="Duplicate check logic" REPTEXT="Duplicate check logic" SCRTEXT_S="Dup check" SCRTEXT_M="Duplicate check" SCRTEXT_L="Duplicate check logic" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_IDOC_CLASS" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="21" DDTEXT="IDoc Processing Class" REPTEXT="IDoc Processing Class" SCRTEXT_S="IDoc Class" SCRTEXT_M="IDoc Class" SCRTEXT_L="IDoc Processing Class" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150600" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_IDOC_LOGIC_CONFIG" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" DDTEXT="Configurable logic for IDoc processing" REPTEXT="IDoc configurable logic" SCRTEXT_S="Logic" SCRTEXT_M="IDoc logic" SCRTEXT_L="IDoc configurable logic" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_IDOC_LOGIC_TYPE" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_TYPE" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="IDoc logic type" REPTEXT="IDoc logic type" SCRTEXT_S="Type" SCRTEXT_M="Logic type" SCRTEXT_L="IDoc logic type" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" VALEXI="X" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_MATNR_CONV" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="08" SCRLEN2="13" SCRLEN3="25" DDTEXT="Material conversion logic" REPTEXT="Material conversion logic" SCRTEXT_S="Mat conv" SCRTEXT_M="Material conv" SCRTEXT_L="Material conversion logic" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015" REFKIND="D">
  <tpara/>
 </DTEL>
 <DTEL ROLLNAME="ZBC_UOM_CONV" DDLANGUAGE="E" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DDTEXT="UOM conversion logic" REPTEXT="UOM conversion logic" SCRTEXT_S="UOM conv" SCRTEXT_M="UOM conversion" SCRTEXT_L="UOM conversion logic" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150602" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" DECIMALS="000000" OUTPUTLEN="000015" REFKIND="D">
  <tpara/>
 </DTEL>
 <TABL TABNAME="ZBC_IDOC_CFG" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="IDoc framework config table" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20140326" AS4TIME="161003" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="2">
  <dd09l TABNAME="ZBC_IDOC_CFG" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" AS4USER="ENGSWEEY" AS4DATE="20140326" AS4TIME="161003" BUFALLOW="X"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="DIRECT" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="EDI_DIRECT" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" NOTNULL="X" DOMNAME="EDI_DIRECT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="10" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Direction for IDoc" REPTEXT="Directn" SCRTEXT_S="Direction" DOMNAME3L="EDI_DIRECT" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESTYP" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="EDI_MESTYP" CHECKTABLE="EDMSG" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" NOTNULL="X" DOMNAME="EDI_MESTYP" ROUTPUTLEN="000000" MEMORYID="MES" HEADLEN="30" SCRLEN1="10" SCRLEN2="14" SCRLEN3="18" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" ENTITYTAB="EDMSG" MASK="  CHARE" MASKLEN="0000" DDTEXT="Message Type" REPTEXT="Message Type" SCRTEXT_S="Messg.Type" SCRTEXT_M="Message Type" SCRTEXT_L="Message Type" DOMNAME3L="EDI_MESTYP" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESCOD" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="EDI_MESCOD" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="EDI_MESCOD" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical Message Variant" REPTEXT="Message Variant" SCRTEXT_S="Msg. Var." SCRTEXT_M="Message Variant" SCRTEXT_L="Message Variant" DOMNAME3L="EDI_MESCOD" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESFCT" DDLANGUAGE="E" POSITION="0005" KEYFLAG="X" ROLLNAME="EDI_MESFCT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="EDI_MESFCT" ROUTPUTLEN="000000" HEADLEN="28" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical message function" REPTEXT="Message function" SCRTEXT_S="Msg.funct." SCRTEXT_M="Mess. function" SCRTEXT_L="Message function" DOMNAME3L="EDI_MESFCT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_CFG" FIELDNAME="IDOC_CLASS" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZBC_IDOC_CLASS" CHECKTABLE="SEOCLASS" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="15" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc Processing Class" REPTEXT="IDoc Processing Class" SCRTEXT_S="IDoc Class" SCRTEXT_M="IDoc Class" SCRTEXT_L="IDoc Processing Class" DOMNAME3L="SEOCLSNAME" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd05m TABNAME="ZBC_IDOC_CFG" FIELDNAME="IDOC_CLASS" FORTABLE="ZBC_IDOC_CFG" FORKEY="IDOC_CLASS" CHECKTABLE="SEOCLASS" CHECKFIELD="CLSNAME" PRIMPOS="0001" DOMNAME="SEOCLSNAME" DATATYPE="CHAR" LENG="000030"/>
  <dd05m TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_CFG" FORKEY="MESTYP" CHECKTABLE="EDMSG" CHECKFIELD="MSGTYP" PRIMPOS="0001" DOMNAME="EDI_MESTYP" DATATYPE="CHAR" LENG="000030"/>
  <dd08v TABNAME="ZBC_IDOC_CFG" FIELDNAME="IDOC_CLASS" DDLANGUAGE="E" CHECKTABLE="SEOCLASS" FRKART="KEY" CARD="CN" CARDLEFT="1"/>
  <dd08v TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESTYP" DDLANGUAGE="E" CHECKTABLE="EDMSG" FRKART="KEY" CARD="CN" CARDLEFT="1"/>
 </TABL>
 <TABL TABNAME="ZBC_IDOC_OPTIONS" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="IDoc framework processing options" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20140429" AS4TIME="144723" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="2">
  <dd09l TABNAME="ZBC_IDOC_OPTIONS" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" AS4USER="ENGSWEEY" AS4DATE="20140429" AS4TIME="144723" BUFALLOW="X"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DIRECT" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="EDI_DIRECT" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" NOTNULL="X" DOMNAME="EDI_DIRECT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="10" SCRLEN2="00" SCRLEN3="00" DTELMASTER="D" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Direction for IDoc" REPTEXT="Directn" SCRTEXT_S="Direction" DOMNAME3L="EDI_DIRECT" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="EDI_MESTYP" CHECKTABLE="ZBC_IDOC_CFG" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" NOTNULL="X" DOMNAME="EDI_MESTYP" ROUTPUTLEN="000000" MEMORYID="MES" HEADLEN="30" SCRLEN1="10" SCRLEN2="14" SCRLEN3="18" DTELMASTER="D" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" ENTITYTAB="EDMSG" MASK="  CHARE" MASKLEN="0000" DDTEXT="Message Type" REPTEXT="Message Type" SCRTEXT_S="Messg.Type" SCRTEXT_M="Message Type" SCRTEXT_L="Message Type" DOMNAME3L="EDI_MESTYP" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="EDI_MESCOD" CHECKTABLE="ZBC_IDOC_CFG" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="EDI_MESCOD" ROUTPUTLEN="000000" HEADLEN="29" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical Message Variant" REPTEXT="Message Variant" SCRTEXT_S="Msg. Var." SCRTEXT_M="Message Variant" SCRTEXT_L="Message Variant" DOMNAME3L="EDI_MESCOD" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" DDLANGUAGE="E" POSITION="0005" KEYFLAG="X" ROLLNAME="EDI_MESFCT" CHECKTABLE="ZBC_IDOC_CFG" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="EDI_MESFCT" ROUTPUTLEN="000000" HEADLEN="28" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical message function" REPTEXT="Message function" SCRTEXT_S="Msg.funct." SCRTEXT_M="Mess. function" SCRTEXT_L="Message function" DOMNAME3L="EDI_MESFCT" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATKL" DDLANGUAGE="E" POSITION="0006" ROLLNAME="MATKL" ADMINFIELD="0" INTTYPE="C" INTLEN="000018" DOMNAME="MATKL" ROUTPUTLEN="000000" MEMORYID="MKL" LOGFLAG="X" HEADLEN="11" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000009" OUTPUTLEN="000009" DECIMALS="000000" ENTITYTAB="T023" MASK="  CHARE" MASKLEN="0000" DDTEXT="Material Group" REPTEXT="Matl Group" SCRTEXT_S="Matl Group" SCRTEXT_M="Material Group" SCRTEXT_L="Material Group" DOMNAME3L="MATKL" SHLPORIGIN="D" SHLPNAME="S_WBWG" SHLPFIELD="MATKL" DEPTH="00" COMPTYPE="E" DEFFDNAME="MATL_GROUP" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATNR_CONV" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZBC_MATNR_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="08" SCRLEN2="13" SCRLEN3="25" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Material conversion logic" REPTEXT="Material conversion logic" SCRTEXT_S="Mat conv" SCRTEXT_M="Material conv" SCRTEXT_L="Material conversion logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="CUST_CONV" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZBC_CUST_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="09" SCRLEN2="13" SCRLEN3="25" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Customer conversion logic" REPTEXT="Customer conversion logic" SCRTEXT_S="Cust conv" SCRTEXT_M="Custcode conv" SCRTEXT_L="Customer conversion logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="UOM_CONV" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZBC_UOM_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="UOM conversion logic" REPTEXT="UOM conversion logic" SCRTEXT_S="UOM conv" SCRTEXT_M="UOM conversion" SCRTEXT_L="UOM conversion logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DUPE_CHECK" DDLANGUAGE="E" POSITION="0010" ROLLNAME="ZBC_DUPE_CHECK" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="10" SCRLEN2="15" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Duplicate check logic" REPTEXT="Duplicate check logic" SCRTEXT_S="Dup check" SCRTEXT_M="Duplicate check" SCRTEXT_L="Duplicate check logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="EDI_OUT_PORT" DDLANGUAGE="E" POSITION="0011" ROLLNAME="EDIPRCVPOR" CHECKTABLE="EDIPORT" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PVPORT" ROUTPUTLEN="000000" MEMORYID="POR" HEADLEN="00" SCRLEN1="09" SCRLEN2="13" SCRLEN3="13" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="EDIPORT" MASK="  CHARE" MASKLEN="0000" DDTEXT="Receiver port" SCRTEXT_S="Rec.port" SCRTEXT_M="Receiver port" SCRTEXT_L="Receiver port" DOMNAME3L="EDI_PVPORT" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="CUST_CONV" FORTABLE="&apos;KUNNR&apos;" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="CUST_CONV" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="CUST_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DUPE_CHECK" FORTABLE="&apos;DUPLICATE&apos;" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DUPE_CHECK" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="DUPE_CHECK" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="EDI_OUT_PORT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MANDT" CHECKTABLE="EDIPORT" CHECKFIELD="MANDT" PRIMPOS="0001" DOMNAME="MANDT" DATATYPE="CLNT" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="EDI_OUT_PORT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="EDI_OUT_PORT" CHECKTABLE="EDIPORT" CHECKFIELD="PORT" PRIMPOS="0002" DOMNAME="EDI_PVPORT" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATNR_CONV" FORTABLE="&apos;MATNR&apos;" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATNR_CONV" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MATNR_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MANDT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MANDT" PRIMPOS="0001" DOMNAME="MANDT" DATATYPE="CLNT" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="DIRECT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="DIRECT" PRIMPOS="0002" DOMNAME="EDI_DIRECT" DATATYPE="CHAR" LENG="000001"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESTYP" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESTYP" PRIMPOS="0003" DOMNAME="EDI_MESTYP" DATATYPE="CHAR" LENG="000030"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESCOD" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESCOD" PRIMPOS="0004" DOMNAME="EDI_MESCOD" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESFCT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESFCT" PRIMPOS="0005" DOMNAME="EDI_MESFCT" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MANDT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MANDT" PRIMPOS="0001" DOMNAME="MANDT" DATATYPE="CLNT" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="DIRECT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="DIRECT" PRIMPOS="0002" DOMNAME="EDI_DIRECT" DATATYPE="CHAR" LENG="000001"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESTYP" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESTYP" PRIMPOS="0003" DOMNAME="EDI_MESTYP" DATATYPE="CHAR" LENG="000030"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESCOD" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESCOD" PRIMPOS="0004" DOMNAME="EDI_MESCOD" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESFCT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESFCT" PRIMPOS="0005" DOMNAME="EDI_MESFCT" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MANDT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MANDT" PRIMPOS="0001" DOMNAME="MANDT" DATATYPE="CLNT" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="DIRECT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="DIRECT" PRIMPOS="0002" DOMNAME="EDI_DIRECT" DATATYPE="CHAR" LENG="000001"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESTYP" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESTYP" PRIMPOS="0003" DOMNAME="EDI_MESTYP" DATATYPE="CHAR" LENG="000030"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESCOD" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESCOD" PRIMPOS="0004" DOMNAME="EDI_MESCOD" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="MESFCT" CHECKTABLE="ZBC_IDOC_CFG" CHECKFIELD="MESFCT" PRIMPOS="0005" DOMNAME="EDI_MESFCT" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="UOM_CONV" FORTABLE="&apos;UOM&apos;" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="UOM_CONV" FORTABLE="ZBC_IDOC_OPTIONS" FORKEY="UOM_CONV" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="CUST_CONV" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="REF" CARD="CN" CHECKFLAG="X" CARDLEFT="C"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DUPE_CHECK" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="REF" CARD="CN" CHECKFLAG="X" CARDLEFT="C"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="EDI_OUT_PORT" DDLANGUAGE="E" CHECKTABLE="EDIPORT" FRKART="REF" CARD="CN" CARDLEFT="C"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATNR_CONV" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="REF" CARD="CN" CHECKFLAG="X" CARDLEFT="C"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESCOD" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_CFG" FRKART="KEY" CARD="1" CARDLEFT="1"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESFCT" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_CFG" FRKART="KEY" CARD="1" CARDLEFT="1"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MESTYP" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_CFG" FRKART="KEY" CARD="1" CARDLEFT="1"/>
  <dd08v TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="UOM_CONV" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="REF" CARD="CN" CHECKFLAG="X" CARDLEFT="C"/>
 </TABL>
 <TABL TABNAME="ZBC_IDOC_LOGIC" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="IDoc framework Configurable logic options" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150603" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="2">
  <dd09l TABNAME="ZBC_IDOC_LOGIC" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150603" BUFALLOW="X"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC" FIELDNAME="LOGIC_TYPE" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_TYPE" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZBC_IDOC_LOGIC_TYPE" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc logic type" REPTEXT="IDoc logic type" SCRTEXT_S="Type" SCRTEXT_M="Logic type" SCRTEXT_L="IDoc logic type" DOMNAME3L="ZBC_IDOC_LOGIC_TYPE" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC" FIELDNAME="LOGIC_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_CONFIG" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" NOTNULL="X" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Configurable logic for IDoc processing" REPTEXT="IDoc configurable logic" SCRTEXT_S="Logic" SCRTEXT_M="IDoc logic" SCRTEXT_L="IDoc configurable logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
 </TABL>
 <TABL TABNAME="ZBC_IDOC_LOGIC_T" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Text table of ZBC_IDOC_LOGIC" AUTHCLASS="00" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150604" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="2">
  <dd09l TABNAME="ZBC_IDOC_LOGIC_T" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150604" UEBERSETZ="X" BUFALLOW="X"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_TYPE" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_TYPE" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZBC_IDOC_LOGIC_TYPE" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc logic type" REPTEXT="IDoc logic type" SCRTEXT_S="Type" SCRTEXT_M="Logic type" SCRTEXT_L="IDoc logic type" DOMNAME3L="ZBC_IDOC_LOGIC_TYPE" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_CONFIG" CHECKTABLE="ZBC_IDOC_LOGIC" ADMINFIELD="0" INTTYPE="C" INTLEN="000030" NOTNULL="X" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" DTELMASTER="E" DATATYPE="CHAR" LENG="000015" OUTPUTLEN="000015" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Configurable logic for IDoc processing" REPTEXT="IDoc configurable logic" SCRTEXT_S="Logic" SCRTEXT_M="IDoc logic" SCRTEXT_L="IDoc configurable logic" DOMNAME3L="ZBC_IDOC_LOGIC_CONFIG" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LANGU" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="SPRAS" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" NOTNULL="X" DOMNAME="SPRAS" ROUTPUTLEN="000000" MEMORYID="SPR" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="LANG" LENG="000001" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" ENTITYTAB="T002" CONVEXIT="ISOLA" MASK="  LANGE" MASKLEN="0000" DDTEXT="Language Key" REPTEXT="Language" SCRTEXT_S="Language" SCRTEXT_M="Language" SCRTEXT_L="Language Key" DOMNAME3L="SPRAS" SHLPORIGIN="D" SHLPNAME="H_T002" SHLPFIELD="SPRAS" DEPTH="00" COMPTYPE="E" DEFFDNAME="LANGU" LANGUFLAG="X" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd03p TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="DESCRIPTION" DDLANGUAGE="E" POSITION="0004" ROLLNAME="LTEXT80" ADMINFIELD="0" INTTYPE="C" INTLEN="000160" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="CHAR" LENG="000080" OUTPUTLEN="000080" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Long text 80 characters" SCRTEXT_S="Long text" SCRTEXT_M="Long text" SCRTEXT_L="Long text" DOMNAME3L="TEXT80" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00"/>
  <dd05m TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_NAME" FORTABLE="ZBC_IDOC_LOGIC_T" FORKEY="LOGIC_TYPE" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_NAME" FORTABLE="ZBC_IDOC_LOGIC_T" FORKEY="LOGIC_NAME" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd05m TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_TYPE" FORTABLE="ZBC_IDOC_LOGIC_T" FORKEY="LOGIC_TYPE" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_TYPE" PRIMPOS="0001" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" LENG="000010"/>
  <dd05m TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_TYPE" FORTABLE="ZBC_IDOC_LOGIC_T" FORKEY="LOGIC_NAME" CHECKTABLE="ZBC_IDOC_LOGIC" CHECKFIELD="LOGIC_NAME" PRIMPOS="0002" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" LENG="000015"/>
  <dd08v TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_NAME" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="TEXT" CARD="CN" CARDLEFT="1"/>
  <dd08v TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="LOGIC_TYPE" DDLANGUAGE="E" CHECKTABLE="ZBC_IDOC_LOGIC" FRKART="TEXT" CARD="CN" CARDLEFT="1"/>
 </TABL>
 <VIEW VIEWNAME="ZBC_V_IDOC_CFG" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="E" AGGTYPE="V" AUTHCLASS="00" ROOTTAB="ZBC_IDOC_CFG" AS4USER="ENGSWEEY" AS4DATE="20140429" AS4TIME="145041" DDTEXT="Maintenance view for ZBC_V_IDOC_CFG" VIEWCLASS="C" CUSTOMAUTH="A" GLOBALFLAG="X">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd26v VIEWNAME="ZBC_V_IDOC_CFG" TABNAME="ZBC_IDOC_CFG" TABPOS="0001" FORTABNAME="ZBC_IDOC_CFG"/>
  <dd26v VIEWNAME="ZBC_V_IDOC_CFG" TABNAME="ZBC_IDOC_OPTIONS" TABPOS="0002" FORTABNAME="ZBC_IDOC_CFG" FORFIELD="MESCOD" FORDIR="I"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0001" DDLANGUAGE="E" VIEWFIELD="MANDT" TABNAME="ZBC_IDOC_CFG" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0002" DDLANGUAGE="E" VIEWFIELD="DIRECT" TABNAME="ZBC_IDOC_CFG" FIELDNAME="DIRECT" KEYFLAG="X" ROLLNAME="EDI_DIRECT" ROLLNAMEVI="EDI_DIRECT" RDONLY="S" DOMNAME="EDI_DIRECT" DATATYPE="CHAR" FLENGTH="000001" SHLPORIGIN="F" INTTYPE="C" INTLEN="000002" HEADLEN="08" SCRLEN1="10" SCRLEN2="00" SCRLEN3="00" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" DDTEXT="Direction for IDoc" REPTEXT="Directn" SCRTEXT_S="Direction"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0003" DDLANGUAGE="E" VIEWFIELD="MESTYP" TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESTYP" KEYFLAG="X" ROLLNAME="EDI_MESTYP" ROLLNAMEVI="EDI_MESTYP" RDONLY="S" MEMORYID="MES" DOMNAME="EDI_MESTYP" DATATYPE="CHAR" FLENGTH="000030" CHECKTABLE="EDMSG" SHLPORIGIN="P" ENTITYTAB="EDMSG" INTTYPE="C" INTLEN="000060" HEADLEN="30" SCRLEN1="10" SCRLEN2="14" SCRLEN3="18" OUTPUTLEN="000030" DECIMALS="000000" DDTEXT="Message Type" REPTEXT="Message Type" SCRTEXT_S="Messg.Type" SCRTEXT_M="Message Type" SCRTEXT_L="Message Type"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0004" DDLANGUAGE="E" VIEWFIELD="MESCOD" TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESCOD" KEYFLAG="X" ROLLNAME="EDI_MESCOD" ROLLNAMEVI="EDI_MESCOD" RDONLY="S" DOMNAME="EDI_MESCOD" DATATYPE="CHAR" FLENGTH="000003" INTTYPE="C" INTLEN="000006" HEADLEN="29" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Logical Message Variant" REPTEXT="Message Variant" SCRTEXT_S="Msg. Var." SCRTEXT_M="Message Variant" SCRTEXT_L="Message Variant"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0005" DDLANGUAGE="E" VIEWFIELD="MESFCT" TABNAME="ZBC_IDOC_CFG" FIELDNAME="MESFCT" KEYFLAG="X" ROLLNAME="EDI_MESFCT" ROLLNAMEVI="EDI_MESFCT" RDONLY="S" DOMNAME="EDI_MESFCT" DATATYPE="CHAR" FLENGTH="000003" INTTYPE="C" INTLEN="000006" HEADLEN="28" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Logical message function" REPTEXT="Message function" SCRTEXT_S="Msg.funct." SCRTEXT_M="Mess. function" SCRTEXT_L="Message function"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0006" DDLANGUAGE="E" VIEWFIELD="MATKL" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATKL" ROLLNAME="MATKL" ROLLNAMEVI="MATKL" MEMORYID="MKL" DOMNAME="MATKL" DATATYPE="CHAR" FLENGTH="000009" SHLPORIGIN="D" SHLPNAME="S_WBWG" SHLPFIELD="MATKL" ENTITYTAB="T023" INTTYPE="C" INTLEN="000018" LOGFLAG="X" HEADLEN="11" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000009" DECIMALS="000000" DDTEXT="Material Group" REPTEXT="Matl Group" SCRTEXT_S="Matl Group" SCRTEXT_M="Material Group" SCRTEXT_L="Material Group"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0007" DDLANGUAGE="E" VIEWFIELD="MATNR_CONV" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="MATNR_CONV" ROLLNAME="ZBC_MATNR_CONV" ROLLNAMEVI="ZBC_MATNR_CONV" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" FLENGTH="000015" CHECKTABLE="ZBC_IDOC_LOGIC" SHLPORIGIN="P" INTTYPE="C" INTLEN="000030" HEADLEN="50" SCRLEN1="08" SCRLEN2="13" SCRLEN3="25" OUTPUTLEN="000015" DECIMALS="000000" DDTEXT="Material conversion logic" REPTEXT="Material conversion logic" SCRTEXT_S="Mat conv" SCRTEXT_M="Material conv" SCRTEXT_L="Material conversion logic"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0008" DDLANGUAGE="E" VIEWFIELD="CUST_CONV" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="CUST_CONV" ROLLNAME="ZBC_CUST_CONV" ROLLNAMEVI="ZBC_CUST_CONV" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" FLENGTH="000015" CHECKTABLE="ZBC_IDOC_LOGIC" SHLPORIGIN="P" INTTYPE="C" INTLEN="000030" HEADLEN="25" SCRLEN1="09" SCRLEN2="13" SCRLEN3="25" OUTPUTLEN="000015" DECIMALS="000000" DDTEXT="Customer conversion logic" REPTEXT="Customer conversion logic" SCRTEXT_S="Cust conv" SCRTEXT_M="Custcode conv" SCRTEXT_L="Customer conversion logic"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0009" DDLANGUAGE="E" VIEWFIELD="UOM_CONV" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="UOM_CONV" ROLLNAME="ZBC_UOM_CONV" ROLLNAMEVI="ZBC_UOM_CONV" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" FLENGTH="000015" CHECKTABLE="ZBC_IDOC_LOGIC" SHLPORIGIN="P" INTTYPE="C" INTLEN="000030" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000015" DECIMALS="000000" DDTEXT="UOM conversion logic" REPTEXT="UOM conversion logic" SCRTEXT_S="UOM conv" SCRTEXT_M="UOM conversion" SCRTEXT_L="UOM conversion logic"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0010" DDLANGUAGE="E" VIEWFIELD="DUPE_CHECK" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="DUPE_CHECK" ROLLNAME="ZBC_DUPE_CHECK" ROLLNAMEVI="ZBC_DUPE_CHECK" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" FLENGTH="000015" CHECKTABLE="ZBC_IDOC_LOGIC" SHLPORIGIN="P" INTTYPE="C" INTLEN="000030" HEADLEN="21" SCRLEN1="10" SCRLEN2="15" SCRLEN3="21" OUTPUTLEN="000015" DECIMALS="000000" DDTEXT="Duplicate check logic" REPTEXT="Duplicate check logic" SCRTEXT_S="Dup check" SCRTEXT_M="Duplicate check" SCRTEXT_L="Duplicate check logic"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_CFG" OBJPOS="0011" DDLANGUAGE="E" VIEWFIELD="EDI_OUT_PORT" TABNAME="ZBC_IDOC_OPTIONS" FIELDNAME="EDI_OUT_PORT" ROLLNAME="EDIPRCVPOR" ROLLNAMEVI="EDIPRCVPOR" MEMORYID="POR" DOMNAME="EDI_PVPORT" DATATYPE="CHAR" FLENGTH="000010" CHECKTABLE="EDIPORT" SHLPORIGIN="P" ENTITYTAB="EDIPORT" INTTYPE="C" INTLEN="000020" HEADLEN="00" SCRLEN1="09" SCRLEN2="13" SCRLEN3="13" OUTPUTLEN="000010" DECIMALS="000000" DDTEXT="Receiver port" SCRTEXT_S="Rec.port" SCRTEXT_M="Receiver port" SCRTEXT_L="Receiver port"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_CFG" LTAB="ZBC_IDOC_CFG" LFIELD="MANDT" OPERATOR="EQ" RTAB="ZBC_IDOC_OPTIONS" RFIELD="MANDT" SOURCE="F" FRKTAB="ZBC_IDOC_OPTIONS" FRKFIELD="MESCOD" FRKDIR="I"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_CFG" LTAB="ZBC_IDOC_CFG" LFIELD="DIRECT" OPERATOR="EQ" RTAB="ZBC_IDOC_OPTIONS" RFIELD="DIRECT" SOURCE="F" FRKTAB="ZBC_IDOC_OPTIONS" FRKFIELD="MESCOD" FRKDIR="I"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_CFG" LTAB="ZBC_IDOC_CFG" LFIELD="MESTYP" OPERATOR="EQ" RTAB="ZBC_IDOC_OPTIONS" RFIELD="MESTYP" SOURCE="F" FRKTAB="ZBC_IDOC_OPTIONS" FRKFIELD="MESCOD" FRKDIR="I"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_CFG" LTAB="ZBC_IDOC_CFG" LFIELD="MESCOD" OPERATOR="EQ" RTAB="ZBC_IDOC_OPTIONS" RFIELD="MESCOD" SOURCE="F" FRKTAB="ZBC_IDOC_OPTIONS" FRKFIELD="MESCOD" FRKDIR="I"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_CFG" LTAB="ZBC_IDOC_CFG" LFIELD="MESFCT" OPERATOR="EQ" RTAB="ZBC_IDOC_OPTIONS" RFIELD="MESFCT" SOURCE="F" FRKTAB="ZBC_IDOC_OPTIONS" FRKFIELD="MESCOD" FRKDIR="I"/>
 </VIEW>
 <VIEW VIEWNAME="ZBC_V_IDOC_LOGIC" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="E" AGGTYPE="V" AUTHCLASS="00" ROOTTAB="ZBC_IDOC_LOGIC" AS4USER="ENGSWEEY" AS4DATE="20131028" AS4TIME="150605" DDTEXT="Maintenance view for ZBC_IDOC_LOGIC &amp; ZBC_IDOC_LOGIC_T" VIEWCLASS="C" CUSTOMAUTH="C" GLOBALFLAG="X">
  <dd09l AS4VERS="0000" SCHFELDANZ="000" AS4DATE="00000000" AS4TIME="000000"/>
  <dd26v VIEWNAME="ZBC_V_IDOC_LOGIC" TABNAME="ZBC_IDOC_LOGIC" TABPOS="0001" FORTABNAME="ZBC_IDOC_LOGIC"/>
  <dd26v VIEWNAME="ZBC_V_IDOC_LOGIC" TABNAME="ZBC_IDOC_LOGIC_T" TABPOS="0002" FORTABNAME="ZBC_IDOC_LOGIC" FORFIELD="LOGIC_NAME" FORDIR="I"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_LOGIC" OBJPOS="0001" DDLANGUAGE="E" VIEWFIELD="LOGIC_TYPE" TABNAME="ZBC_IDOC_LOGIC" FIELDNAME="LOGIC_TYPE" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_TYPE" ROLLNAMEVI="ZBC_IDOC_LOGIC_TYPE" DOMNAME="ZBC_IDOC_LOGIC_TYPE" DATATYPE="CHAR" FLENGTH="000010" SHLPORIGIN="F" INTTYPE="C" INTLEN="000020" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000010" DECIMALS="000000" VALEXI="X" DDTEXT="IDoc logic type" REPTEXT="IDoc logic type" SCRTEXT_S="Type" SCRTEXT_M="Logic type" SCRTEXT_L="IDoc logic type"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_LOGIC" OBJPOS="0002" DDLANGUAGE="E" VIEWFIELD="LOGIC_NAME" TABNAME="ZBC_IDOC_LOGIC" FIELDNAME="LOGIC_NAME" KEYFLAG="X" ROLLNAME="ZBC_IDOC_LOGIC_CONFIG" ROLLNAMEVI="ZBC_IDOC_LOGIC_CONFIG" DOMNAME="ZBC_IDOC_LOGIC_CONFIG" DATATYPE="CHAR" FLENGTH="000015" INTTYPE="C" INTLEN="000030" HEADLEN="23" SCRLEN1="10" SCRLEN2="15" SCRLEN3="23" OUTPUTLEN="000015" DECIMALS="000000" DDTEXT="Configurable logic for IDoc processing" REPTEXT="IDoc configurable logic" SCRTEXT_S="Logic" SCRTEXT_M="IDoc logic" SCRTEXT_L="IDoc configurable logic"/>
  <dd27p VIEWNAME="ZBC_V_IDOC_LOGIC" OBJPOS="0003" DDLANGUAGE="E" VIEWFIELD="DESCRIPTION" TABNAME="ZBC_IDOC_LOGIC_T" FIELDNAME="DESCRIPTION" ROLLNAME="LTEXT80" ROLLNAMEVI="LTEXT80" DOMNAME="TEXT80" DATATYPE="CHAR" FLENGTH="000080" INTTYPE="C" INTLEN="000160" HEADLEN="00" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000080" DECIMALS="000000" LOWERCASE="X" DDTEXT="Long text 80 characters" SCRTEXT_S="Long text" SCRTEXT_M="Long text" SCRTEXT_L="Long text"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_LOGIC" LTAB="ZBC_IDOC_LOGIC" LFIELD="LOGIC_TYPE" OPERATOR="EQ" RTAB="ZBC_IDOC_LOGIC_T" RFIELD="LOGIC_TYPE" SOURCE="F" FRKTAB="ZBC_IDOC_LOGIC_T" FRKFIELD="LOGIC_NAME" FRKDIR="I"/>
  <dd28j VIEWNAME="ZBC_V_IDOC_LOGIC" LTAB="ZBC_IDOC_LOGIC" LFIELD="LOGIC_NAME" OPERATOR="EQ" RTAB="ZBC_IDOC_LOGIC_T" RFIELD="LOGIC_NAME" SOURCE="F" FRKTAB="ZBC_IDOC_LOGIC_T" FRKFIELD="LOGIC_NAME" FRKDIR="I"/>
 </VIEW>
 <CLAS CLSNAME="ZCX_IDOC_FM_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc FM processing error" UUID="51E4CD1F8FBD0B10E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_IDOC_FM_ERROR definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_FM_ERROR
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_FM_ERROR type SOTR_CONC value &apos;51E61F4416D305D0E10080000AD00C21&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_FM_ERROR
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_FM_ERROR
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_FM_ERROR" CMPNAME="ZCX_IDOC_FM_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" ATTDECLTYP="2" ATTVALUE="&apos;51E61F4416D305D0E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="702" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073752" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073752" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073752" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073752" STATUS="R" VERSION="0002" LENGTH="255" TEXT="IDoc FM processing error"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_FM_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028"/>
  <method CLSNAME="ZCX_IDOC_FM_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_FM_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_FM_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_FM_ERROR .
 ENDIF.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" UUID="5220B5049B7F0B60E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDON="20131028" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_IDOC_GENERIC_PROCESS_ERROR definition
  public
  inheriting from CX_STATIC_CHECK
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_GENERIC_PROCESS_ERROR
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_GENERIC_PROCESS_ERROR type SOTR_CONC value &apos;5220BB8FC0870B80E10080000AD00C21&apos;. &quot;#EC NOTEXT
  data MSGTY type SY-MSGTY read-only .
  data MSG type STRING read-only .
  data MSGID type SY-MSGID read-only .
  data MSGNO type SY-MSGNO read-only .
  data MSGV1 type SY-MSGV1 read-only .
  data MSGV2 type SY-MSGV2 read-only .
  data MSGV3 type SY-MSGV3 read-only .
  data MSGV4 type SY-MSGV4 read-only .

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional
      !MSGTY type SY-MSGTY optional
      !MSG type STRING optional
      !MSGID type SY-MSGID optional
      !MSGNO type SY-MSGNO optional
      !MSGV1 type SY-MSGV1 optional
      !MSGV2 type SY-MSGV2 optional
      !MSGV3 type SY-MSGV3 optional
      !MSGV4 type SY-MSGV4 optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_GENERIC_PROCESS_ERROR
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_GENERIC_PROCESS_ERROR
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSG" VERSION="1" LANGU="E" DESCRIPT="Error Message" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDBY="ENGSWEEY" CHANGEDON="20131211" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGID" VERSION="1" LANGU="E" DESCRIPT="Message Class" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGID" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGNO" VERSION="1" LANGU="E" DESCRIPT="Message Number" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGNO" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGTY" VERSION="1" LANGU="E" DESCRIPT="Message Type" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGTY" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGV1" VERSION="1" LANGU="E" DESCRIPT="Message Variable" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGV1" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGV2" VERSION="1" LANGU="E" DESCRIPT="Message Variable" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGV2" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGV3" VERSION="1" LANGU="E" DESCRIPT="Message Variable" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGV3" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="MSGV4" VERSION="1" LANGU="E" DESCRIPT="Message Variable" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" ATTDECLTYP="0" ATTRDONLY="X" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SY-MSGV4" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDBY="ENGSWEEY" CHANGEDON="20131028" ATTDECLTYP="2" ATTVALUE="&apos;5220BB8FC0870B80E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130902062822" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130902062822" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130902062822" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130902062822" STATUS="R" VERSION="0002" LENGTH="255" TEXT="&apos;&amp;MSG&amp;&apos;"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDON="20131028"/>
  <method CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDON="20131028" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDBY="ENGSWEEY" CHANGEDON="20131211" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDBY="ENGSWEEY" CHANGEDON="20131211" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGTY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGTY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130902" CHANGEDBY="ENGSWEEY" CHANGEDON="20131211" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGNO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGNO" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV1" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV1" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV2" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV3" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV3" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20131211" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV4" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_GENERIC_PROCESS_ERROR .
 ENDIF.
me-&gt;MSGTY = MSGTY .
me-&gt;MSG = MSG .
me-&gt;MSGID = MSGID .
me-&gt;MSGNO = MSGNO .
me-&gt;MSGV1 = MSGV1 .
me-&gt;MSGV2 = MSGV2 .
me-&gt;MSGV3 = MSGV3 .
me-&gt;MSGV4 = MSGV4 .
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Preprocessing error" UUID="51E4A4EBF9000BF0E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_IDOC_PREPROCESS_ERROR definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_PREPROCESS_ERROR
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_PREPROCESS_ERROR type SOTR_CONC value &apos;51E4A51EF9000BF0E10080000AD00C21&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_PREPROCESS_ERROR
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_PREPROCESS_ERROR
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" CMPNAME="ZCX_IDOC_PREPROCESS_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" ATTDECLTYP="2" ATTVALUE="&apos;51E4A51EF9000BF0E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="702" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717074029" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717074029" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717074029" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717074029" STATUS="R" VERSION="0002" LENGTH="255" TEXT="IDoc framework preprocessing error"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028"/>
  <method CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_PREPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_PREPROCESS_ERROR .
 ENDIF.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Postprocessing error" UUID="5331C664324A0D30E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR">
  <publicSection>class ZCX_IDOC_POSTPROCESS_ERROR definition
  public
  inheriting from ZCX_IDOC_GENERIC_PROCESS_ERROR
  final
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_POSTPROCESS_ERROR
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_POSTPROCESS_ERROR type SOTR_CONC value &apos;53317D8D45CB0C60E10080000AD00C21&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional
      !MSGTY type SY-MSGTY optional
      !MSG type STRING optional
      !MSGID type SY-MSGID optional
      !MSGNO type SY-MSGNO optional
      !MSGV1 type SY-MSGV1 optional
      !MSGV2 type SY-MSGV2 optional
      !MSGV3 type SY-MSGV3 optional
      !MSGV4 type SY-MSGV4 optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_POSTPROCESS_ERROR
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_POSTPROCESS_ERROR
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;53317D8D45CB0C60E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="702" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20140326062543" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20140326062543" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20140326062543" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20140326062543" STATUS="R" VERSION="0002" LENGTH="255" TEXT="IDoc framework postprocessing error"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" REFCLSNAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
  <method CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGTY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGTY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGNO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGNO" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV1" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV1" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV2" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV3" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV3" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_POSTPROCESS_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="MSGV4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-MSGV4" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
MSGTY = MSGTY
MSG = MSG
MSGID = MSGID
MSGNO = MSGNO
MSGV1 = MSGV1
MSGV2 = MSGV2
MSGV3 = MSGV3
MSGV4 = MSGV4
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_POSTPROCESS_ERROR .
 ENDIF.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_IDOC_VALIDATION_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc validation error" UUID="51E61EB70C1C0900E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_IDOC_VALIDATION_ERROR definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_VALIDATION_ERROR
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_VALIDATION_ERROR type SOTR_CONC value &apos;51E4CCB98FBD0B10E10080000AD00C21&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_VALIDATION_ERROR
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_VALIDATION_ERROR
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_VALIDATION_ERROR" CMPNAME="ZCX_IDOC_VALIDATION_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" ATTDECLTYP="2" ATTVALUE="&apos;51E4CCB98FBD0B10E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="702" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073353" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073353" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073353" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073353" STATUS="R" VERSION="0002" LENGTH="255" TEXT="IDoc validation error occured"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_VALIDATION_ERROR" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028"/>
  <method CLSNAME="ZCX_IDOC_VALIDATION_ERROR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_VALIDATION_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_VALIDATION_ERROR" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_VALIDATION_ERROR .
 ENDIF.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_WRONG_FUNCTION_CALLED" VERSION="1" LANGU="E" DESCRIPT="Exception WRONG_FUNCTION_CALLED" UUID="51E60F170C1C0900E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_WRONG_FUNCTION_CALLED definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.
*&quot;* public components of class ZCX_WRONG_FUNCTION_CALLED
*&quot;* do not include other source files here!!!

  constants ZCX_WRONG_FUNCTION_CALLED type SOTR_CONC value &apos;51E61E5E0C1C0900E10080000AD00C21&apos;. &quot;#EC NOTEXT

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_WRONG_FUNCTION_CALLED
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_WRONG_FUNCTION_CALLED
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_WRONG_FUNCTION_CALLED" CMPNAME="ZCX_WRONG_FUNCTION_CALLED" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" ATTDECLTYP="2" ATTVALUE="&apos;51E61E5E0C1C0900E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" R3RELEASE="702" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073203" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073203" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20130717073203" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20130717073203" STATUS="R" VERSION="0002" LENGTH="255" TEXT="Wrong IDoc Function called"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_WRONG_FUNCTION_CALLED" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028"/>
  <method CLSNAME="ZCX_WRONG_FUNCTION_CALLED" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="20131028" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_WRONG_FUNCTION_CALLED" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_WRONG_FUNCTION_CALLED" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDBY="ENGSWEEY" CHANGEDON="20130717" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_WRONG_FUNCTION_CALLED .
 ENDIF.
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" UUID="5354B2FC79181060E10080000AD00C21" CATEGORY="40" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="CX_STATIC_CHECK">
  <publicSection>class ZCX_IDOC_DATA_NOT_FOR_SEND definition
  public
  inheriting from CX_STATIC_CHECK
  final
  create public .

public section.
*&quot;* public components of class ZCX_IDOC_DATA_NOT_FOR_SEND
*&quot;* do not include other source files here!!!

  constants ZCX_IDOC_DATA_NOT_FOR_SEND type SOTR_CONC value &apos;53550E88D1BD0D40E10080000AD00C21&apos;. &quot;#EC NOTEXT
  data MSG type STRING .

  methods CONSTRUCTOR
    importing
      !TEXTID like TEXTID optional
      !PREVIOUS like PREVIOUS optional
      !MSG type STRING optional .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCX_IDOC_DATA_NOT_FOR_SEND
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCX_IDOC_DATA_NOT_FOR_SEND
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="MSG" VERSION="1" LANGU="E" DESCRIPT="Message" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" ATTDECLTYP="2" ATTVALUE="&apos;53550E88D1BD0D40E10080000AD00C21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="SOTR_CONC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " LOCKED="X" TYPESRC_LENG="0 ">
   <sotr PAKET="$TMP" CREA_LAN="E" TRALA_TYPE="1" CREA_NAME="ENGSWEEY" CREA_TSTUT="20140422032439" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20140422032439" LST_IMPORT="00000000" TRALA_VEC="00000000000000000000" CATGY_VEC="00000000000000000000" OBJID_VEC="08000000000000000000">
    <sotrText LANGU="E" LFD_NUM="0001" FLAG_CNTXT="X" CREA_NAME="ENGSWEEY" CREA_TSTUT="20140422032439" CHAN_NAME="ENGSWEEY" CHAN_TSTUT="20140422032439" STATUS="R" VERSION="0002" LENGTH="255" TEXT="&apos;&amp;MSG&amp;&apos;"/>
   </sotr>
  </attribute>
  <inheritance CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" REFCLSNAME="CX_STATIC_CHECK" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
  <method CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" MTDTYPE="2" MTDDECLTYP="0" LOCKED="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="CONSTRUCTOR" SCONAME="TEXTID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="TEXTID" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="CONSTRUCTOR" SCONAME="PREVIOUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="0" TYPE="PREVIOUS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCX_IDOC_DATA_NOT_FOR_SEND" CMPNAME="CONSTRUCTOR" SCONAME="MSG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <source>method CONSTRUCTOR.
CALL METHOD SUPER-&gt;CONSTRUCTOR
EXPORTING
TEXTID = TEXTID
PREVIOUS = PREVIOUS
.
 IF textid IS INITIAL.
   me-&gt;textid = ZCX_IDOC_DATA_NOT_FOR_SEND .
 ENDIF.
me-&gt;MSG = MSG .
endmethod.</source>
   <methodDocumentation/>
   <methodDocumentation/>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_BASE" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Base object" UUID="53317D5A45CB0C60E10080000AD00C21" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130717" CHANGEDON="00000000" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" MSG_ID="AD" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <publicSection>class ZCL_IDOC_BASE definition
  public
  abstract
  create public .

public section.
*&quot;* public components of class ZCL_IDOC_BASE
*&quot;* do not include other source files here!!!

  constants C_STATUS_IN_ERR type EDI_STATUS value &apos;51&apos;. &quot;#EC NOTEXT
  constants C_STATUS_IN_SUCC type EDI_STATUS value &apos;53&apos;. &quot;#EC NOTEXT
  constants C_WF_RESULT_ERR type WF_RESULT value &apos;99999&apos;. &quot;#EC NOTEXT
  constants C_WF_PARAM_SUCC type WFVARIABLE value &apos;Processed_IDOCs&apos;. &quot;#EC NOTEXT
  constants C_WF_PARAM_ERR type WFVARIABLE value &apos;Error_IDOCs&apos;. &quot;#EC NOTEXT
  constants C_WF_PARAM_APPOBJ type WFVARIABLE value &apos;Appl_Objects&apos;. &quot;#EC NOTEXT
  constants C_WF_PARAM_APPOBJTYPE type WFVARIABLE value &apos;Appl_Object_Type&apos;. &quot;#EC NOTEXT
  constants C_MSG_TYPE_ABORT type BAPI_MTYPE value &apos;A&apos;. &quot;#EC NOTEXT
  constants C_MSG_TYPE_ERROR type BAPI_MTYPE value &apos;E&apos;. &quot;#EC NOTEXT
  constants C_MSG_TYPE_INFO type BAPI_MTYPE value &apos;I&apos;. &quot;#EC NOTEXT
  constants C_MSG_TYPE_WARNING type BAPI_MTYPE value &apos;W&apos;. &quot;#EC NOTEXT
  constants C_MSG_TYPE_SUCCESS type BAPI_MTYPE value &apos;S&apos;. &quot;#EC NOTEXT

  class-methods GET_INSTANCE
    importing
      !IV_DIRECTION type EDI_DIRECT
      !IV_MESTYP type EDI_MESTYP
      !IV_MESCOD type EDI_MESCOD
      !IV_MESFCT type EDI_MESFCT
    returning
      value(RO_INTERFACE) type ref to ZCL_IDOC_BASE
    raising
      CX_SY_CREATE_OBJECT_ERROR .
  class-methods FREE_INSTANCE .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCL_IDOC_BASE
*&quot;* do not include other source files here!!!

  data O_BUFFER type ref to ZCL_IDOC_DB_BUFFER .
  data S_IDOC_OPTIONS type ZBC_IDOC_OPTIONS .

  methods SEND_EMAIL
    importing
      !IS_EMAIL_DOC type SODOCCHGI1
      !IT_CONTENTS type SRM_T_SOLISTI1
      !IV_DO_COMMIT type XFELD optional
    changing
      !CT_RECEIVERS type SOMLRECI1_T .
  methods SET_PROCESSING_OPTIONS
    importing
      !IS_IDOC_OPTIONS type ZBC_IDOC_OPTIONS .
  methods CONVERT_MATERIAL_WITH_EINA
    importing
      !IV_VENDOR type EINA-LIFNR
      !IV_EXT_MATERIAL type EINA-IDNLF
      !IV_PURCH_ORG type EINE-EKORG optional
      !IV_PLANT type EINE-WERKS optional
    returning
      value(RV_MATNR) type EINA-MATNR .
  methods CONVERT_MAT_WITH_MARC_MARA
    importing
      !IV_EXT_MATERIAL type MARA-BISMT
      !IV_MATERIAL_GROUP type MARA-MATKL optional
      !IV_PLANT type MARC-WERKS optional
    returning
      value(RV_MATNR) type MARA-MATNR .
  methods CONVERT_EXT_MATERIAL_WITH_EINA
    importing
      !IV_MATNR type EINA-MATNR
    returning
      value(RV_EXT_MATERIAL) type EINA-IDNLF .
  methods CONVERT_EXT_MATERIAL_WITH_MARA
    importing
      !IV_MATNR type MARA-MATNR
    returning
      value(RV_EXT_MATERIAL) type MARA-BISMT .
  methods CONVERT_UOM_ISO_TO_SAP
    importing
      !IV_ISOUOM type T006-ISOCODE
    returning
      value(RV_SAPUOM) type T006-MSEHI .
  methods CONVERT_UOM_SAP_TO_ISO
    importing
      !IV_SAPUOM type T006-MSEHI
      !IV_CUNIT_CONVERSION type XFELD optional
    returning
      value(RV_ISOUOM) type T006-ISOCODE .
  methods CONVERT_BATCH_WITH_MCHA
    importing
      !IV_MATNR type MCHA-MATNR
      !IV_WERKS type MCHA-WERKS
      !IV_EXT_BATCH type MCHA-LICHA
    returning
      value(RV_CHARG) type MCHA-CHARG .
  methods CONVERT_EXT_BATCH_WITH_MCHA
    importing
      !IV_MATNR type MCHA-MATNR
      !IV_WERKS type MCHA-WERKS
      !IV_CHARG type MCHA-CHARG
    returning
      value(RV_EXT_BATCH) type MCHA-LICHA .
  methods CONVERT_SERIAL_WITH_EQUI
    importing
      !IV_MATNR type EQUI-MATNR
      !IV_EXT_SERIAL type EQUI-SERGE
    returning
      value(RV_SERNR) type EQUI-SERNR .
  methods CONVERT_EXT_SERIAL_WITH_EQUI
    importing
      !IV_MATNR type EQUI-MATNR
      !IV_SERNR type EQUI-SERNR
    returning
      value(RV_EXT_SERIAL) type EQUI-SERGE .
  methods POPULATE_X_STRUCTURE
    importing
      !IS_STRUC type DATA
    changing
      !CS_STRUC_X type DATA .</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_BASE
*&quot;* do not include other source files here!!!

  class-data O_INTERFACE type ref to ZCL_IDOC_BASE .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_MSG_TYPE_ABORT" VERSION="1" LANGU="E" DESCRIPT="Message type: S Success, E Error, W Warning, I Info, A Abort" EXPOSURE="2" STATE="1" EDITORDER="8 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;A&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_MTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_MSG_TYPE_ERROR" VERSION="1" LANGU="E" DESCRIPT="Message type: S Success, E Error, W Warning, I Info, A Abort" EXPOSURE="2" STATE="1" EDITORDER="9 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;E&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_MTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_MSG_TYPE_INFO" VERSION="1" LANGU="E" DESCRIPT="Message type: S Success, E Error, W Warning, I Info, A Abort" EXPOSURE="2" STATE="1" EDITORDER="10 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;I&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_MTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_MSG_TYPE_SUCCESS" VERSION="1" LANGU="E" DESCRIPT="Message type: S Success, E Error, W Warning, I Info, A Abort" EXPOSURE="2" STATE="1" EDITORDER="12 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;S&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_MTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_MSG_TYPE_WARNING" VERSION="1" LANGU="E" DESCRIPT="Message type: S Success, E Error, W Warning, I Info, A Abort" EXPOSURE="2" STATE="1" EDITORDER="11 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;W&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_MTYPE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_STATUS_IN_ERR" VERSION="1" LANGU="E" DESCRIPT="Status of IDoc" EXPOSURE="2" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;51&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_STATUS_IN_SUCC" VERSION="1" LANGU="E" DESCRIPT="Status of IDoc" EXPOSURE="2" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;53&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_WF_PARAM_APPOBJ" VERSION="1" LANGU="E" DESCRIPT="Name of Output Parameter of Workflow Method" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;Appl_Objects&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WFVARIABLE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_WF_PARAM_APPOBJTYPE" VERSION="1" LANGU="E" DESCRIPT="Name of Output Parameter of Workflow Method" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;Appl_Object_Type&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WFVARIABLE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_WF_PARAM_ERR" VERSION="1" LANGU="E" DESCRIPT="Name of Output Parameter of Workflow Method" EXPOSURE="2" STATE="1" EDITORDER="5 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;Error_IDOCs&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WFVARIABLE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_WF_PARAM_SUCC" VERSION="1" LANGU="E" DESCRIPT="Name of Output Parameter of Workflow Method" EXPOSURE="2" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;Processed_IDOCs&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WFVARIABLE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="C_WF_RESULT_ERR" VERSION="1" LANGU="E" DESCRIPT="Final value of method" EXPOSURE="2" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;99999&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WF_RESULT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="O_BUFFER" VERSION="1" LANGU="E" DESCRIPT="Singleton for buffering IDoc DB data" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_IDOC_DB_BUFFER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="O_INTERFACE" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Base object" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_IDOC_BASE" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_BASE" CMPNAME="S_IDOC_OPTIONS" VERSION="1" LANGU="E" DESCRIPT="IDoc framework processing options" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBC_IDOC_OPTIONS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_BATCH_WITH_MCHA" VERSION="1" LANGU="E" DESCRIPT="Convert batch number using MCHA (Vendor Batch)" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_BATCH_WITH_MCHA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_BATCH_WITH_MCHA" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_BATCH_WITH_MCHA" SCONAME="IV_EXT_BATCH" VERSION="1" LANGU="E" DESCRIPT="Vendor Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-LICHA"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_BATCH_WITH_MCHA" SCONAME="RV_CHARG" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MCHA-CHARG"/>
   <source>method CONVERT_BATCH_WITH_MCHA.

  rv_charg = me-&gt;o_buffer-&gt;get_batch_from_mcha( iv_matnr     = iv_matnr
                                                iv_werks     = iv_werks
                                                iv_ext_batch = iv_ext_batch ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_BATCH_WITH_MCHA" VERSION="1" LANGU="E" DESCRIPT="Convert external batch number using MCHA" EXPOSURE="1" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_BATCH_WITH_MCHA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_BATCH_WITH_MCHA" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_BATCH_WITH_MCHA" SCONAME="IV_CHARG" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-CHARG"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_BATCH_WITH_MCHA" SCONAME="RV_EXT_BATCH" VERSION="1" LANGU="E" DESCRIPT="Vendor Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MCHA-LICHA"/>
   <source>method CONVERT_EXT_BATCH_WITH_MCHA.

  rv_ext_batch = me-&gt;o_buffer-&gt;get_ext_batch_from_mcha( iv_matnr        = iv_matnr
                                                        iv_werks        = iv_werks
                                                        iv_charg        = iv_charg ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_EINA" VERSION="1" LANGU="E" DESCRIPT="Convert external material number using EINA" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_EINA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_EINA" SCONAME="RV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Material Number Used by Vendor" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EINA-IDNLF"/>
   <source>method CONVERT_EXT_MATERIAL_WITH_EINA.

* Retrieve external material no from Purchasing Info Record
  rv_ext_material = me-&gt;o_buffer-&gt;get_ext_material_from_eina( iv_matnr ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_MARA" VERSION="1" LANGU="E" DESCRIPT="Convert external material number using MARA" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_MARA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_MATERIAL_WITH_MARA" SCONAME="RV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <source>method CONVERT_EXT_MATERIAL_WITH_MARA.

* Retrieve external material no from MARA Old Material No
  rv_ext_material = me-&gt;o_buffer-&gt;get_ext_material_from_mara( iv_matnr ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_SERIAL_WITH_EQUI" VERSION="1" LANGU="E" DESCRIPT="Convert external serial using EQUI" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_SERIAL_WITH_EQUI" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_SERIAL_WITH_EQUI" SCONAME="IV_SERNR" VERSION="1" LANGU="E" DESCRIPT="Serial Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-SERNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_EXT_SERIAL_WITH_EQUI" SCONAME="RV_EXT_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Manufacturer serial number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EQUI-SERGE"/>
   <source>method CONVERT_EXT_SERIAL_WITH_EQUI.

  rv_ext_serial = me-&gt;o_buffer-&gt;get_ext_serial_from_equi( iv_matnr         = iv_matnr
                                                          iv_sernr         = iv_sernr ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" VERSION="1" LANGU="E" DESCRIPT="Convert material number using EINA" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" SCONAME="IV_VENDOR" VERSION="1" LANGU="E" DESCRIPT="Vendor Account Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-LIFNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Material Number Used by Vendor" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-IDNLF"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" SCONAME="IV_PURCH_ORG" VERSION="1" LANGU="E" DESCRIPT="Purchasing Organization" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINE-EKORG" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" SCONAME="IV_PLANT" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINE-WERKS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MATERIAL_WITH_EINA" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EINA-MATNR"/>
   <source>method CONVERT_MATERIAL_WITH_EINA.

  IF iv_purch_org IS SUPPLIED AND iv_plant IS SUPPLIED.
*   Retrieve SAP material no from Purchasing Info Record with Purch Org &amp; Plant
    rv_matnr = me-&gt;o_buffer-&gt;get_material_from_eina_eine( iv_vendor       = iv_vendor
                                                          iv_ext_material = iv_ext_material
                                                          iv_purch_org    = iv_purch_org
                                                          iv_plant        = iv_plant ).

  ELSE.
*   Retrieve SAP material no from Purchasing Info Record
    rv_matnr = me-&gt;o_buffer-&gt;get_material_from_eina( iv_vendor       = iv_vendor
                                                     iv_ext_material = iv_ext_material ).
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MAT_WITH_MARC_MARA" VERSION="1" LANGU="E" DESCRIPT="Convert material number using MARC &amp; MARA" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MAT_WITH_MARC_MARA" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MAT_WITH_MARC_MARA" SCONAME="IV_MATERIAL_GROUP" VERSION="1" LANGU="E" DESCRIPT="Material Group" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATKL" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MAT_WITH_MARC_MARA" SCONAME="IV_PLANT" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARC-WERKS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_MAT_WITH_MARC_MARA" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <source>method CONVERT_MAT_WITH_MARC_MARA.

  IF iv_plant IS SUPPLIED.
*   Retrieve SAP material no from Material Master via Old Material Number with Plant
    IF iv_material_group IS SUPPLIED.
      rv_matnr = me-&gt;o_buffer-&gt;get_material_from_marc_bygroup( iv_plant           = iv_plant
                                                               iv_ext_material    = iv_ext_material
                                                               iv_material_group  = iv_material_group ).
    ELSE.
      rv_matnr = me-&gt;o_buffer-&gt;get_material_from_marc( iv_plant        = iv_plant
                                                       iv_ext_material = iv_ext_material ).
    ENDIF.
  ELSE.
*   Retrieve SAP material no from Material Master via Old Material Number
    IF iv_material_group IS SUPPLIED.
      rv_matnr = me-&gt;o_buffer-&gt;get_material_from_mara_bygroup( iv_ext_material    = iv_ext_material
                                                               iv_material_group  = iv_material_group ).
    ELSE.
      rv_matnr = me-&gt;o_buffer-&gt;get_material_from_mara( iv_ext_material ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_SERIAL_WITH_EQUI" VERSION="1" LANGU="E" DESCRIPT="Convert serial using EQUI (Manufacture Serial)" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_SERIAL_WITH_EQUI" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_SERIAL_WITH_EQUI" SCONAME="IV_EXT_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Manufacturer serial number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-SERGE"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_SERIAL_WITH_EQUI" SCONAME="RV_SERNR" VERSION="1" LANGU="E" DESCRIPT="Serial Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EQUI-SERNR"/>
   <source>method CONVERT_SERIAL_WITH_EQUI.

  rv_sernr = me-&gt;o_buffer-&gt;get_serial_from_equi( iv_matnr      = iv_matnr
                                                 iv_ext_serial = iv_ext_serial ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_ISO_TO_SAP" VERSION="1" LANGU="E" DESCRIPT="Convert UOM from ISO code to SAP code" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_ISO_TO_SAP" SCONAME="IV_ISOUOM" VERSION="1" LANGU="E" DESCRIPT="ISO code for unit of measurement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="T006-ISOCODE"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_ISO_TO_SAP" SCONAME="RV_SAPUOM" VERSION="1" LANGU="E" DESCRIPT="Unit of Measurement" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="T006-MSEHI"/>
   <source>method CONVERT_UOM_ISO_TO_SAP.

  SELECT msehi FROM t006 UP TO 1 ROWS
         INTO rv_sapuom
         WHERE isocode = iv_isouom.
  ENDSELECT.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_SAP_TO_ISO" VERSION="1" LANGU="E" DESCRIPT="Convert UOM from SAP code to ISO code" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_SAP_TO_ISO" SCONAME="IV_SAPUOM" VERSION="1" LANGU="E" DESCRIPT="Unit of Measurement" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="T006-MSEHI"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_SAP_TO_ISO" SCONAME="IV_CUNIT_CONVERSION" VERSION="1" LANGU="E" DESCRIPT="X = Convert input with CUNIT" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="CONVERT_UOM_SAP_TO_ISO" SCONAME="RV_ISOUOM" VERSION="1" LANGU="E" DESCRIPT="ISO code for unit of measurement" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="T006-ISOCODE"/>
   <source>method CONVERT_UOM_SAP_TO_ISO.

  DATA:
    lv_msehi TYPE t006-msehi.

  IF iv_cunit_conversion = &apos;X&apos;.
    CALL FUNCTION &apos;CONVERSION_EXIT_CUNIT_INPUT&apos;
      EXPORTING
        input          = iv_sapuom
      IMPORTING
        output         = lv_msehi
      EXCEPTIONS
        unit_not_found = 1
        OTHERS         = 2.
    IF sy-subrc &lt;&gt; 0.
      lv_msehi = iv_sapuom.
    ENDIF.
  ELSE.
    lv_msehi = iv_sapuom.
  ENDIF.

  SELECT SINGLE isocode FROM t006
         INTO rv_isouom
         WHERE msehi = lv_msehi.
* Return input value if unit not found
  IF sy-subrc &lt;&gt; 0.
    rv_isouom = iv_sapuom.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="FREE_INSTANCE" VERSION="1" LANGU="E" DESCRIPT="Free the active instance to allow GC" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <source>method FREE_INSTANCE.

  FREE o_interface.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" DESCRIPT="Return new or active instance of the IDoc Framework object" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="IV_DIRECTION" VERSION="1" LANGU="E" DESCRIPT="IDoc Direction" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_DIRECT"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="IV_MESTYP" VERSION="1" LANGU="E" DESCRIPT="Message Type" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_MESTYP"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="IV_MESCOD" VERSION="1" LANGU="E" DESCRIPT="Logical Message Variant" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_MESCOD"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="IV_MESFCT" VERSION="1" LANGU="E" DESCRIPT="Logical message function" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_MESFCT"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="RO_INTERFACE" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Base object" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_IDOC_BASE"/>
   <exception CLSNAME="ZCL_IDOC_BASE" CMPNAME="GET_INSTANCE" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="E" DESCRIPT="System Exception Creating Object" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>METHOD get_instance.

  DATA:
    lv_classname    TYPE string,
    ls_idoc_options TYPE zbc_idoc_options.

  IF o_interface IS NOT BOUND.

    SELECT SINGLE idoc_class FROM zbc_idoc_cfg
           INTO lv_classname
           WHERE direct   = iv_direction
             AND mestyp   = iv_mestyp
             AND mescod   = iv_mescod
             AND mesfct   = iv_mesfct.

    CREATE OBJECT o_interface TYPE (lv_classname).

    SELECT SINGLE * FROM zbc_idoc_options
           INTO ls_idoc_options
           WHERE direct   = iv_direction
             AND mestyp   = iv_mestyp
             AND mescod   = iv_mescod
             AND mesfct   = iv_mesfct.
    IF sy-subrc = 0.
      o_interface-&gt;set_processing_options( ls_idoc_options ).
    ENDIF.

  ENDIF.
  ro_interface = o_interface.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="POPULATE_X_STRUCTURE" VERSION="1" LANGU="E" DESCRIPT="Populate X in corresponding X structure" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="POPULATE_X_STRUCTURE" SCONAME="IS_STRUC" VERSION="1" LANGU="E" DESCRIPT="Input structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="POPULATE_X_STRUCTURE" SCONAME="CS_STRUC_X" VERSION="1" LANGU="E" DESCRIPT="Corresponding X structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <source>method POPULATE_X_STRUCTURE.

  DATA:
    lo_struct_descr     TYPE REF TO cl_abap_structdescr,
    lo_struct_descr_x   TYPE REF TO cl_abap_structdescr,
    ls_component        LIKE LINE OF lo_struct_descr-&gt;components,
    ls_component_x      LIKE LINE OF lo_struct_descr_x-&gt;components,
    lv_position         TYPE sy-tabix,
    lv_position_x       TYPE sy-tabix.
  FIELD-SYMBOLS:
    &lt;lfs_fieldvalue&gt;    TYPE any,
    &lt;lfs_fieldvalue_x&gt;  TYPE any.

  lo_struct_descr   ?= cl_abap_typedescr=&gt;describe_by_data( is_struc ).
  lo_struct_descr_x ?= cl_abap_typedescr=&gt;describe_by_data( cs_struc_x ).

* Loop through every field of the input structure
  LOOP AT lo_struct_descr-&gt;components INTO ls_component.
    lv_position = sy-tabix.
    ASSIGN COMPONENT lv_position OF STRUCTURE is_struc TO &lt;lfs_fieldvalue&gt;.
    IF sy-subrc = 0 AND &lt;lfs_fieldvalue&gt; IS NOT INITIAL.
*     If the field is populated, find the position of the field in the corresponding X structure
      READ TABLE lo_struct_descr_x-&gt;components INTO ls_component_x INDEX lv_position.
      IF sy-subrc = 0 AND ls_component-name = ls_component_x-name.
*       If the fields in both structures are in the same position
        lv_position_x = lv_position.
      ELSE.
*       If the positions are different, then find where the position is in the X structure
        READ TABLE lo_struct_descr_x-&gt;components INTO ls_component_x
                                                 WITH TABLE KEY name = ls_component-name.
        IF sy-subrc = 0.
          lv_position_x = sy-tabix.
        ENDIF.
      ENDIF.

*     If position in X structure is found, then populate it with X
      IF lv_position_x IS NOT INITIAL.
        ASSIGN COMPONENT lv_position_x OF STRUCTURE cs_struc_x TO &lt;lfs_fieldvalue_x&gt;.
        IF sy-subrc = 0.
          &lt;lfs_fieldvalue_x&gt; = &apos;X&apos;.
        ENDIF.
      ENDIF.

      CLEAR: lv_position, lv_position_x.
      UNASSIGN: &lt;lfs_fieldvalue&gt;, &lt;lfs_fieldvalue_x&gt;.
    ENDIF.
  ENDLOOP.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="SEND_EMAIL" VERSION="1" LANGU="E" DESCRIPT="Send Email using SAPConnect" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="SEND_EMAIL" SCONAME="IS_EMAIL_DOC" VERSION="1" LANGU="E" DESCRIPT="Data of an object which can be changed" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SODOCCHGI1"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="SEND_EMAIL" SCONAME="IT_CONTENTS" VERSION="1" LANGU="E" DESCRIPT="Table for solistil" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SRM_T_SOLISTI1"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="SEND_EMAIL" SCONAME="IV_DO_COMMIT" VERSION="1" LANGU="E" DESCRIPT="X - Commit work" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="SEND_EMAIL" SCONAME="CT_RECEIVERS" VERSION="1" LANGU="E" DESCRIPT="Table Category for SOMLRECI1 (API Recipient List)" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SOMLRECI1_T"/>
   <source>method SEND_EMAIL.

  CALL FUNCTION &apos;SO_NEW_DOCUMENT_SEND_API1&apos;
    EXPORTING
      document_data              = is_email_doc
    TABLES
      object_content             = it_contents
      receivers                  = ct_receivers
    EXCEPTIONS
      too_many_receivers         = 1
      document_not_sent          = 2
      document_type_not_exist    = 3
      operation_no_authorization = 4
      parameter_error            = 5
      x_error                    = 6
      enqueue_error              = 7
      OTHERS                     = 8.
  IF sy-subrc = 0 AND iv_do_commit = &apos;X&apos;.
    COMMIT WORK.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_BASE" CMPNAME="SET_PROCESSING_OPTIONS" VERSION="1" LANGU="E" DESCRIPT="Set the processing options in instance attribute" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_BASE" CMPNAME="SET_PROCESSING_OPTIONS" SCONAME="IS_IDOC_OPTIONS" VERSION="1" LANGU="E" DESCRIPT="IDoc framework processing options" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZBC_IDOC_OPTIONS"/>
   <source>METHOD set_processing_options.

  me-&gt;s_idoc_options = is_idoc_options.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_DB_BUFFER" VERSION="1" LANGU="E" DESCRIPT="Singleton for buffering IDoc DB data" UUID="53317D6045CB0C60E10080000AD00C21" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20130909" CHANGEDON="00000000" CHGDANYON="00000000" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 ">
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_EINA_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="10 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="160 " TYPESRC="BEGIN OF ty_eina_lookup ,

          lifnr TYPE eina-lifnr,

          idnlf TYPE eina-idnlf,

          matnr TYPE eina-matnr,

        END OF ty_eina_lookup

"/>
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_EINE_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="12 " SRCCOLUMN1="4 " SRCROW2="18 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="228 " TYPESRC="BEGIN OF ty_eine_lookup ,

          lifnr TYPE eina-lifnr,

          idnlf TYPE eina-idnlf,

          ekorg TYPE eine-ekorg,

          werks TYPE eine-werks,

          matnr TYPE eina-matnr,

        END OF ty_eine_lookup

"/>
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_MARA_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="4 " SRCROW2="24 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="160 " TYPESRC="BEGIN OF ty_mara_lookup ,

          matkl TYPE mara-matkl,

          bismt TYPE mara-bismt,

          matnr TYPE mara-matnr,

        END OF ty_mara_lookup

"/>
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_MARC_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="26 " SRCCOLUMN1="4 " SRCROW2="31 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="194 " TYPESRC="BEGIN OF ty_marc_lookup ,

          werks TYPE marc-werks,

          matkl TYPE mara-matkl,

          bismt TYPE mara-bismt,

          matnr TYPE mara-matnr,

        END OF ty_marc_lookup

"/>
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_MCHA_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="33 " SRCCOLUMN1="4 " SRCROW2="38 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="194 " TYPESRC="BEGIN OF ty_mcha_lookup ,

          matnr TYPE mcha-matnr,

          werks TYPE mcha-werks,

          licha TYPE mcha-licha,

          charg TYPE mcha-charg,

        END OF ty_mcha_lookup

"/>
  <types CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="TY_EQUI_LOOKUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="40 " SRCCOLUMN1="4 " SRCROW2="44 " SRCCOLUMN2="28 " R3RELEASE="702" TYPESRC_LENG="160 " TYPESRC="BEGIN OF ty_equi_lookup ,

          matnr TYPE equi-matnr,

          serge TYPE equi-serge,

          sernr TYPE equi-sernr,

        END OF ty_equi_lookup

"/>
  <publicSection>class ZCL_IDOC_DB_BUFFER definition
  public
  final
  create private .

public section.
*&quot;* public components of class ZCL_IDOC_DB_BUFFER
*&quot;* do not include other source files here!!!

  class-methods GET_INSTANCE
    returning
      value(RO_BUFFER) type ref to ZCL_IDOC_DB_BUFFER
    raising
      CX_SY_CREATE_OBJECT_ERROR .
  methods GET_MATERIAL_FROM_EINA_EINE
    importing
      !IV_VENDOR type EINA-LIFNR
      !IV_EXT_MATERIAL type EINA-IDNLF
      !IV_PURCH_ORG type EINE-EKORG
      !IV_PLANT type EINE-WERKS optional
    returning
      value(RV_MATNR) type EINA-MATNR .
  methods GET_MATERIAL_FROM_EINA
    importing
      !IV_VENDOR type EINA-LIFNR
      !IV_EXT_MATERIAL type EINA-IDNLF
    returning
      value(RV_MATNR) type EINA-MATNR .
  methods GET_MATERIAL_FROM_MARA_BYGROUP
    importing
      !IV_EXT_MATERIAL type MARA-BISMT
      !IV_MATERIAL_GROUP type MARA-MATKL
    returning
      value(RV_MATNR) type MARA-MATNR .
  methods GET_MATERIAL_FROM_MARA
    importing
      !IV_EXT_MATERIAL type MARA-BISMT
    returning
      value(RV_MATNR) type MARA-MATNR .
  methods GET_MATERIAL_FROM_MARC_BYGROUP
    importing
      !IV_PLANT type MARC-WERKS
      !IV_EXT_MATERIAL type MARA-BISMT
      !IV_MATERIAL_GROUP type MARA-MATKL
    returning
      value(RV_MATNR) type MARA-MATNR .
  methods GET_MATERIAL_FROM_MARC
    importing
      !IV_PLANT type MARC-WERKS
      !IV_EXT_MATERIAL type MARA-BISMT
    returning
      value(RV_MATNR) type MARA-MATNR .
  methods GET_EXT_MATERIAL_FROM_EINA
    importing
      !IV_MATNR type EINA-MATNR
    returning
      value(RV_EXT_MATERIAL) type EINA-IDNLF .
  methods GET_EXT_MATERIAL_FROM_MARA
    importing
      !IV_MATNR type MARA-MATNR
    returning
      value(RV_EXT_MATERIAL) type MARA-BISMT .
  methods GET_BATCH_FROM_MCHA
    importing
      !IV_MATNR type MCHA-MATNR
      !IV_WERKS type MCHA-WERKS
      !IV_EXT_BATCH type MCHA-LICHA
    returning
      value(RV_CHARG) type MCHA-CHARG .
  methods GET_EXT_BATCH_FROM_MCHA
    importing
      !IV_MATNR type MCHA-MATNR
      !IV_WERKS type MCHA-WERKS
      !IV_CHARG type MCHA-CHARG
    returning
      value(RV_EXT_BATCH) type MCHA-LICHA .
  methods GET_SERIAL_FROM_EQUI
    importing
      !IV_MATNR type EQUI-MATNR
      !IV_EXT_SERIAL type EQUI-SERGE
    returning
      value(RV_SERNR) type EQUI-SERNR .
  methods GET_EXT_SERIAL_FROM_EQUI
    importing
      !IV_MATNR type EQUI-MATNR
      !IV_SERNR type EQUI-SERNR
    returning
      value(RV_EXT_SERIAL) type EQUI-SERGE .
  type-pools ABAP .
  methods RETURN_FIELDVALUE_DYNAMICALLY
    importing
      !IS_STRUC type DATA
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_MARA
    importing
      !IV_MATNR type MARA-MATNR
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_MARC
    importing
      !IV_MATNR type MARC-MATNR
      !IV_WERKS type MARC-WERKS
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_MVKE
    importing
      !IV_MATNR type MVKE-MATNR
      !IV_VKORG type MVKE-VKORG
      !IV_VTWEG type MVKE-VTWEG
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_KNA1
    importing
      !IV_KUNNR type KNA1-KUNNR
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_KNB1
    importing
      !IV_KUNNR type KNB1-KUNNR
      !IV_BUKRS type KNB1-BUKRS
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods LOOKUP_KNVV
    importing
      !IV_KUNNR type KNVV-KUNNR
      !IV_VKORG type KNVV-VKORG
      !IV_VTWEG type KNVV-VTWEG
      !IV_SPART type KNVV-SPART
      !IV_FIELDNAME type ABAP_COMPDESCR-NAME
    exporting
      !EV_FIELDVALUE type ANY
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .</publicSection>
  <protectedSection>PROTECTED SECTION.
*&quot;* protected components of class ZCL_IDOC_DB_BUFFER
*&quot;* do not include other source files here!!!</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_DB_BUFFER
*&quot;* do not include other source files here!!!

  types:
    BEGIN OF ty_eina_lookup ,
          lifnr TYPE eina-lifnr,
          idnlf TYPE eina-idnlf,
          matnr TYPE eina-matnr,
        END OF ty_eina_lookup .
  types:
    BEGIN OF ty_eine_lookup ,
          lifnr TYPE eina-lifnr,
          idnlf TYPE eina-idnlf,
          ekorg TYPE eine-ekorg,
          werks TYPE eine-werks,
          matnr TYPE eina-matnr,
        END OF ty_eine_lookup .
  types:
    BEGIN OF ty_mara_lookup ,
          matkl TYPE mara-matkl,
          bismt TYPE mara-bismt,
          matnr TYPE mara-matnr,
        END OF ty_mara_lookup .
  types:
    BEGIN OF ty_marc_lookup ,
          werks TYPE marc-werks,
          matkl TYPE mara-matkl,
          bismt TYPE mara-bismt,
          matnr TYPE mara-matnr,
        END OF ty_marc_lookup .
  types:
    BEGIN OF ty_mcha_lookup ,
          matnr TYPE mcha-matnr,
          werks TYPE mcha-werks,
          licha TYPE mcha-licha,
          charg TYPE mcha-charg,
        END OF ty_mcha_lookup .
  types:
    BEGIN OF ty_equi_lookup ,
          matnr TYPE equi-matnr,
          serge TYPE equi-serge,
          sernr TYPE equi-sernr,
        END OF ty_equi_lookup .

  class-data O_BUFFER type ref to ZCL_IDOC_DB_BUFFER .
  data:
    t_eina_to_material TYPE SORTED TABLE OF ty_eina_lookup WITH UNIQUE KEY lifnr idnlf .
  data:
    t_eine_to_material TYPE SORTED TABLE OF ty_eine_lookup WITH UNIQUE KEY lifnr idnlf ekorg werks.
  data:
    t_eina_to_ext_material TYPE SORTED TABLE OF ty_eina_lookup WITH UNIQUE KEY matnr .
  data:
    t_mara_to_material TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY bismt .
  data:
    t_mara_to_material_by_group TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY matkl bismt .
  data:
    t_marc_to_material TYPE SORTED TABLE OF ty_marc_lookup WITH UNIQUE KEY werks bismt .
  data:
    t_marc_to_material_by_group TYPE SORTED TABLE OF ty_marc_lookup WITH UNIQUE KEY werks matkl bismt .
  data:
    t_mara_to_ext_material TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY matnr .
  data:
    t_equi_to_serial TYPE SORTED TABLE OF ty_equi_lookup WITH UNIQUE KEY matnr serge .
  data:
    t_equi_to_ext_serial TYPE SORTED TABLE OF ty_equi_lookup WITH UNIQUE KEY matnr sernr .
  data:
    t_mcha_to_batch TYPE SORTED TABLE OF ty_mcha_lookup WITH UNIQUE KEY matnr werks licha .
  data:
    t_mcha_to_ext_batch TYPE SORTED TABLE OF ty_mcha_lookup WITH UNIQUE KEY matnr werks charg .
  data:
    T_MARA TYPE SORTED TABLE OF mara WITH UNIQUE KEY matnr .
  data:
    T_MARC TYPE SORTED TABLE OF marc WITH UNIQUE KEY matnr werks .
  data:
    T_MVKE TYPE SORTED TABLE OF mvke WITH UNIQUE KEY matnr vkorg vtweg .
  data:
    T_KNA1 TYPE SORTED TABLE OF kna1 WITH UNIQUE KEY kunnr .
  data:
    T_KNB1 TYPE SORTED TABLE OF knb1 WITH UNIQUE KEY kunnr bukrs .
  data:
    T_KNVV TYPE SORTED TABLE OF knvv WITH UNIQUE KEY kunnr vkorg vtweg spart .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <typeUsage CLSNAME="ZCL_IDOC_DB_BUFFER" TYPEGROUP="ABAP" VERSION="1" TPUTYPE="0" IMPLICIT="X"/>
  <forwardDeclaration>ABAP</forwardDeclaration>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="O_BUFFER" VERSION="1" LANGU="E" DESCRIPT="Singleton for buffering IDoc DB data" EXPOSURE="0" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZCL_IDOC_DB_BUFFER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_EINA_TO_EXT_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="52 " SRCCOLUMN1="4 " SRCROW2="52 " SRCCOLUMN2="83 " R3RELEASE="702" TYPESRC_LENG="82 " TYPESRC="t_eina_to_ext_material TYPE SORTED TABLE OF ty_eina_lookup WITH UNIQUE KEY matnr

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_EINA_TO_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="48 " SRCCOLUMN1="4 " SRCROW2="48 " SRCCOLUMN2="85 " R3RELEASE="702" TYPESRC_LENG="84 " TYPESRC="t_eina_to_material TYPE SORTED TABLE OF ty_eina_lookup WITH UNIQUE KEY lifnr idnlf

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_EINE_TO_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="50 " SRCCOLUMN1="4 " SRCROW2="50 " SRCCOLUMN2="97 " R3RELEASE="702" TYPESRC_LENG="96 " TYPESRC="t_eine_to_material TYPE SORTED TABLE OF ty_eine_lookup WITH UNIQUE KEY lifnr idnlf ekorg werks

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_EQUI_TO_EXT_SERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="12 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="66 " SRCCOLUMN1="4 " SRCROW2="66 " SRCCOLUMN2="87 " R3RELEASE="702" TYPESRC_LENG="86 " TYPESRC="t_equi_to_ext_serial TYPE SORTED TABLE OF ty_equi_lookup WITH UNIQUE KEY matnr sernr

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_EQUI_TO_SERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="11 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="64 " SRCCOLUMN1="4 " SRCROW2="64 " SRCCOLUMN2="83 " R3RELEASE="702" TYPESRC_LENG="82 " TYPESRC="t_equi_to_serial TYPE SORTED TABLE OF ty_equi_lookup WITH UNIQUE KEY matnr serge

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_KNA1" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="18 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="78 " SRCCOLUMN1="4 " SRCROW2="78 " SRCCOLUMN2="57 " R3RELEASE="702" TYPESRC_LENG="56 " TYPESRC="T_KNA1 TYPE SORTED TABLE OF kna1 WITH UNIQUE KEY kunnr

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_KNB1" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="19 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="80 " SRCCOLUMN1="4 " SRCROW2="80 " SRCCOLUMN2="63 " R3RELEASE="702" TYPESRC_LENG="62 " TYPESRC="T_KNB1 TYPE SORTED TABLE OF knb1 WITH UNIQUE KEY kunnr bukrs

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_KNVV" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="20 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="82 " SRCCOLUMN1="4 " SRCROW2="82 " SRCCOLUMN2="75 " R3RELEASE="702" TYPESRC_LENG="74 " TYPESRC="T_KNVV TYPE SORTED TABLE OF knvv WITH UNIQUE KEY kunnr vkorg vtweg spart

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="15 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="72 " SRCCOLUMN1="4 " SRCROW2="72 " SRCCOLUMN2="57 " R3RELEASE="702" TYPESRC_LENG="56 " TYPESRC="T_MARA TYPE SORTED TABLE OF mara WITH UNIQUE KEY matnr

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARA_TO_EXT_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="9 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="62 " SRCCOLUMN1="4 " SRCROW2="62 " SRCCOLUMN2="83 " R3RELEASE="702" TYPESRC_LENG="82 " TYPESRC="t_mara_to_ext_material TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY matnr

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARA_TO_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="54 " SRCCOLUMN1="4 " SRCROW2="54 " SRCCOLUMN2="79 " R3RELEASE="702" TYPESRC_LENG="78 " TYPESRC="t_mara_to_material TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY bismt

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARA_TO_MATERIAL_BY_GROUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="56 " SRCCOLUMN1="4 " SRCROW2="56 " SRCCOLUMN2="94 " R3RELEASE="702" TYPESRC_LENG="93 " TYPESRC="t_mara_to_material_by_group TYPE SORTED TABLE OF ty_mara_lookup WITH UNIQUE KEY matkl bismt

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARC" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="16 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="74 " SRCCOLUMN1="4 " SRCROW2="74 " SRCCOLUMN2="63 " R3RELEASE="702" TYPESRC_LENG="62 " TYPESRC="T_MARC TYPE SORTED TABLE OF marc WITH UNIQUE KEY matnr werks

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARC_TO_MATERIAL" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="58 " SRCCOLUMN1="4 " SRCROW2="58 " SRCCOLUMN2="85 " R3RELEASE="702" TYPESRC_LENG="84 " TYPESRC="t_marc_to_material TYPE SORTED TABLE OF ty_marc_lookup WITH UNIQUE KEY werks bismt

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MARC_TO_MATERIAL_BY_GROUP" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="8 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="60 " SRCCOLUMN1="4 " SRCROW2="60 " SRCCOLUMN2="100 " R3RELEASE="702" TYPESRC_LENG="99 " TYPESRC="t_marc_to_material_by_group TYPE SORTED TABLE OF ty_marc_lookup WITH UNIQUE KEY werks matkl bismt

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MCHA_TO_BATCH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="13 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="68 " SRCCOLUMN1="4 " SRCROW2="68 " SRCCOLUMN2="88 " R3RELEASE="702" TYPESRC_LENG="87 " TYPESRC="t_mcha_to_batch TYPE SORTED TABLE OF ty_mcha_lookup WITH UNIQUE KEY matnr werks licha

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MCHA_TO_EXT_BATCH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="14 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="70 " SRCCOLUMN1="4 " SRCROW2="70 " SRCCOLUMN2="92 " R3RELEASE="702" TYPESRC_LENG="91 " TYPESRC="t_mcha_to_ext_batch TYPE SORTED TABLE OF ty_mcha_lookup WITH UNIQUE KEY matnr werks charg

"/>
  <attribute CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="T_MVKE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="17 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="76 " SRCCOLUMN1="4 " SRCROW2="76 " SRCCOLUMN2="69 " R3RELEASE="702" TYPESRC_LENG="68 " TYPESRC="T_MVKE TYPE SORTED TABLE OF mvke WITH UNIQUE KEY matnr vkorg vtweg

"/>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_BATCH_FROM_MCHA" VERSION="1" LANGU="E" DESCRIPT="Get batch number using MCHA (Vendor Batch)" EXPOSURE="2" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_BATCH_FROM_MCHA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_BATCH_FROM_MCHA" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_BATCH_FROM_MCHA" SCONAME="IV_EXT_BATCH" VERSION="1" LANGU="E" DESCRIPT="Vendor Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-LICHA"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_BATCH_FROM_MCHA" SCONAME="RV_CHARG" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MCHA-CHARG"/>
   <source>method GET_BATCH_FROM_MCHA.

  DATA:
    ls_mcha LIKE LINE OF me-&gt;t_mcha_to_batch.

  ls_mcha-matnr = iv_matnr.
  ls_mcha-werks = iv_werks.
  ls_mcha-licha = iv_ext_batch.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mcha_to_batch FROM ls_mcha
             INTO ls_mcha
             TRANSPORTING charg.
  IF sy-subrc = 0.
    rv_charg = ls_mcha-charg.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT charg FROM mcha UP TO 1 ROWS
           INTO ls_mcha-charg
           WHERE matnr = ls_mcha-matnr
             AND werks = ls_mcha-werks
             AND licha = ls_mcha-licha.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_charg = ls_mcha-charg.
      INSERT ls_mcha INTO TABLE me-&gt;t_mcha_to_batch.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_BATCH_FROM_MCHA" VERSION="1" LANGU="E" DESCRIPT="Get external batch number using MCHA" EXPOSURE="2" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_BATCH_FROM_MCHA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_BATCH_FROM_MCHA" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_BATCH_FROM_MCHA" SCONAME="IV_CHARG" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-CHARG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_BATCH_FROM_MCHA" SCONAME="RV_EXT_BATCH" VERSION="1" LANGU="E" DESCRIPT="Vendor Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MCHA-LICHA"/>
   <source>method GET_EXT_BATCH_FROM_MCHA.

  DATA:
    ls_mcha LIKE LINE OF me-&gt;t_mcha_to_ext_batch.

  ls_mcha-matnr = iv_matnr.
  ls_mcha-werks = iv_werks.
  ls_mcha-charg = iv_charg.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mcha_to_ext_batch FROM ls_mcha
             INTO ls_mcha
             TRANSPORTING licha.
  IF sy-subrc = 0.
    rv_ext_batch = ls_mcha-licha.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE licha FROM mcha
            INTO ls_mcha-licha
            WHERE matnr = ls_mcha-matnr
              AND werks = ls_mcha-werks
              AND charg = ls_mcha-charg.
    IF sy-subrc = 0.
      rv_ext_batch = ls_mcha-licha.
      INSERT ls_mcha INTO TABLE me-&gt;t_mcha_to_ext_batch.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_EINA" VERSION="1" LANGU="E" DESCRIPT="Get external material number using EINA" EXPOSURE="2" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_EINA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_EINA" SCONAME="RV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Material Number Used by Vendor" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EINA-IDNLF"/>
   <source>method GET_EXT_MATERIAL_FROM_EINA.

  DATA:
    ls_eina LIKE LINE OF me-&gt;t_eina_to_ext_material.

  ls_eina-matnr = iv_matnr.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_eina_to_ext_material FROM ls_eina
             INTO ls_eina
             TRANSPORTING idnlf.
  IF sy-subrc = 0.
    rv_ext_material = ls_eina-idnlf.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT idnlf FROM eina UP TO 1 ROWS
                 INTO ls_eina-idnlf
                 WHERE matnr = ls_eina-matnr.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_ext_material = ls_eina-idnlf.
      INSERT ls_eina INTO TABLE me-&gt;t_eina_to_ext_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_MARA" VERSION="1" LANGU="E" DESCRIPT="Get external material number using MARA" EXPOSURE="2" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_MARA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_MATERIAL_FROM_MARA" SCONAME="RV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <source>method GET_EXT_MATERIAL_FROM_MARA.

  DATA:
    ls_mara LIKE LINE OF me-&gt;t_mara_to_ext_material.

  ls_mara-matnr = iv_matnr.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mara_to_ext_material FROM ls_mara
             INTO ls_mara
             TRANSPORTING bismt.
  IF sy-subrc = 0.
    rv_ext_material = ls_mara-bismt.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE bismt FROM mara
            INTO ls_mara-bismt
            WHERE matnr = ls_mara-matnr.
    IF sy-subrc = 0.
      rv_ext_material = ls_mara-bismt.
      INSERT ls_mara INTO TABLE me-&gt;t_mara_to_ext_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_SERIAL_FROM_EQUI" VERSION="1" LANGU="E" DESCRIPT="Get external serial using EQUI" EXPOSURE="2" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_SERIAL_FROM_EQUI" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_SERIAL_FROM_EQUI" SCONAME="IV_SERNR" VERSION="1" LANGU="E" DESCRIPT="Serial Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-SERNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_EXT_SERIAL_FROM_EQUI" SCONAME="RV_EXT_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Manufacturer serial number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EQUI-SERGE"/>
   <source>method GET_EXT_SERIAL_FROM_EQUI.

  DATA:
    ls_equi LIKE LINE OF me-&gt;t_equi_to_ext_serial.

  ls_equi-matnr = iv_matnr.
  ls_equi-sernr = iv_sernr.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_equi_to_ext_serial FROM ls_equi
             INTO ls_equi
             TRANSPORTING serge.
  IF sy-subrc = 0.
    rv_ext_serial = ls_equi-serge.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT serge FROM equi UP TO 1 ROWS
            INTO ls_equi-serge
            WHERE sernr = ls_equi-sernr
              AND matnr = ls_equi-matnr.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_ext_serial = ls_equi-serge.
      INSERT ls_equi INTO TABLE me-&gt;t_equi_to_ext_serial.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_INSTANCE" VERSION="1" LANGU="E" DESCRIPT="Return singleton instance of the IDoc buffer object" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_INSTANCE" SCONAME="RO_BUFFER" VERSION="1" LANGU="E" DESCRIPT="Singleton for buffering IDoc DB data" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZCL_IDOC_DB_BUFFER"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_INSTANCE" SCONAME="CX_SY_CREATE_OBJECT_ERROR" VERSION="1" LANGU="E" DESCRIPT="System Exception Creating Object" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method GET_INSTANCE.

* Create singleton so that in any single session, only
* one instance of class exists
  IF o_buffer IS NOT BOUND.
    CREATE OBJECT o_buffer TYPE ZCL_IDOC_DB_BUFFER.
  ENDIF.
  ro_buffer = o_buffer.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA" VERSION="1" LANGU="E" DESCRIPT="Get material number using EINA" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA" SCONAME="IV_VENDOR" VERSION="1" LANGU="E" DESCRIPT="Vendor Account Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-LIFNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Material Number Used by Vendor" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-IDNLF"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EINA-MATNR"/>
   <source>method GET_MATERIAL_FROM_EINA.

  DATA:
    ls_eina LIKE LINE OF me-&gt;t_eina_to_material.

  ls_eina-lifnr = iv_vendor.
  ls_eina-idnlf = iv_ext_material.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_eina_to_material FROM ls_eina
             INTO ls_eina
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_eina-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT matnr FROM eina UP TO 1 ROWS
                 INTO ls_eina-matnr
                 WHERE lifnr = ls_eina-lifnr
                   AND idnlf = ls_eina-idnlf
                   AND loekz = space.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_matnr = ls_eina-matnr.
      INSERT ls_eina INTO TABLE me-&gt;t_eina_to_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" VERSION="1" LANGU="E" DESCRIPT="Get material number using EINA join EINE" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" SCONAME="IV_VENDOR" VERSION="1" LANGU="E" DESCRIPT="Vendor Account Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-LIFNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Material Number Used by Vendor" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINA-IDNLF"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" SCONAME="IV_PURCH_ORG" VERSION="1" LANGU="E" DESCRIPT="Purchasing Organization" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINE-EKORG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" SCONAME="IV_PLANT" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EINE-WERKS" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_EINA_EINE" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EINA-MATNR"/>
   <source>method GET_MATERIAL_FROM_EINA_EINE.

  DATA:
    ls_eine LIKE LINE OF me-&gt;t_eine_to_material.

  ls_eine-lifnr = iv_vendor.
  ls_eine-idnlf = iv_ext_material.
  ls_eine-ekorg = iv_purch_org.
  ls_eine-werks = iv_plant.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_eine_to_material FROM ls_eine
             INTO ls_eine
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_eine-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    IF iv_plant IS SUPPLIED.
      SELECT eina~matnr UP TO 1 ROWS
                   FROM eina
                   JOIN eine
                     ON eina~infnr = eine~infnr
                   INTO ls_eine-matnr
                   WHERE eina~lifnr = ls_eine-lifnr
                     AND eina~idnlf = ls_eine-idnlf
                     AND eina~loekz = space
                     AND eine~ekorg = iv_purch_org
                     AND eine~werks = iv_plant
                     AND eine~loekz = space.
      ENDSELECT.
    ELSE.
      SELECT eina~matnr UP TO 1 ROWS
                   FROM eina
                   JOIN eine
                     ON eina~infnr = eine~infnr
                   INTO ls_eine-matnr
                   WHERE eina~lifnr = ls_eine-lifnr
                     AND eina~idnlf = ls_eine-idnlf
                     AND eina~loekz = space
                     AND eine~ekorg = iv_purch_org
                     AND eine~loekz = space.
      ENDSELECT.
    ENDIF.

    IF sy-subrc = 0.
      rv_matnr = ls_eine-matnr.
      INSERT ls_eine INTO TABLE me-&gt;t_eine_to_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA" VERSION="1" LANGU="E" DESCRIPT="Get material number using MARA" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <source>method GET_MATERIAL_FROM_MARA.

  DATA:
    ls_mara LIKE LINE OF me-&gt;t_mara_to_material.

  ls_mara-bismt = iv_ext_material.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mara_to_material FROM ls_mara
             INTO ls_mara
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_mara-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT matnr FROM mara UP TO 1 ROWS
                 INTO ls_mara-matnr
                 WHERE bismt = ls_mara-bismt
                   AND lvorm = space.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_matnr = ls_mara-matnr.
      INSERT ls_mara INTO TABLE me-&gt;t_mara_to_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA_BYGROUP" VERSION="1" LANGU="E" DESCRIPT="Get material number using MARA by Material Group" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA_BYGROUP" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA_BYGROUP" SCONAME="IV_MATERIAL_GROUP" VERSION="1" LANGU="E" DESCRIPT="Material Group" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATKL"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARA_BYGROUP" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <source>method GET_MATERIAL_FROM_MARA_BYGROUP.

  DATA:
    ls_mara LIKE LINE OF me-&gt;t_mara_to_material_by_group.

  ls_mara-matkl = iv_material_group.
  ls_mara-bismt = iv_ext_material.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mara_to_material_by_group FROM ls_mara
             INTO ls_mara
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_mara-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT matnr FROM mara UP TO 1 ROWS
                 INTO ls_mara-matnr
                 WHERE bismt = ls_mara-bismt
                   AND matkl = ls_mara-matkl
                   AND lvorm = space.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_matnr = ls_mara-matnr.
      INSERT ls_mara INTO TABLE me-&gt;t_mara_to_material_by_group.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC" VERSION="1" LANGU="E" DESCRIPT="Get material number using MARC" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC" SCONAME="IV_PLANT" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARC-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <source>method GET_MATERIAL_FROM_MARC.

  DATA:
    ls_marc LIKE LINE OF me-&gt;t_marc_to_material.

  ls_marc-werks = iv_plant.
  ls_marc-bismt = iv_ext_material.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_marc_to_material FROM ls_marc
             INTO ls_marc
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_marc-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT mara~matnr UP TO 1 ROWS
                 FROM mara
                 JOIN marc
                   ON mara~matnr = marc~matnr
                 INTO ls_marc-matnr
                 WHERE mara~bismt = ls_marc-bismt
                   AND marc~werks = ls_marc-werks
                   AND mara~lvorm = space
                   AND marc~lvorm = space.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_matnr = ls_marc-matnr.
      INSERT ls_marc INTO TABLE me-&gt;t_marc_to_material.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC_BYGROUP" VERSION="1" LANGU="E" DESCRIPT="Get material number using MARC by Material Group" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC_BYGROUP" SCONAME="IV_PLANT" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARC-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC_BYGROUP" SCONAME="IV_EXT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Old material number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-BISMT"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC_BYGROUP" SCONAME="IV_MATERIAL_GROUP" VERSION="1" LANGU="E" DESCRIPT="Material Group" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATKL"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_MATERIAL_FROM_MARC_BYGROUP" SCONAME="RV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <source>method GET_MATERIAL_FROM_MARC_BYGROUP.

  DATA:
    ls_marc LIKE LINE OF me-&gt;t_marc_to_material_by_group.

  ls_marc-werks = iv_plant.
  ls_marc-matkl = iv_material_group.
  ls_marc-bismt = iv_ext_material.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_marc_to_material_by_group FROM ls_marc
             INTO ls_marc
             TRANSPORTING matnr.
  IF sy-subrc = 0.
    rv_matnr = ls_marc-matnr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT mara~matnr UP TO 1 ROWS
                 FROM mara
                 JOIN marc
                   ON mara~matnr = marc~matnr
                 INTO ls_marc-matnr
                 WHERE mara~bismt = ls_marc-bismt
                   AND mara~matkl = ls_marc-matkl
                   AND marc~werks = ls_marc-werks
                   AND mara~lvorm = space
                   AND marc~lvorm = space.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_matnr = ls_marc-matnr.
      INSERT ls_marc INTO TABLE me-&gt;t_marc_to_material_by_group.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_SERIAL_FROM_EQUI" VERSION="1" LANGU="E" DESCRIPT="Get serial using EQUI (Manufacture Serial)" EXPOSURE="2" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_SERIAL_FROM_EQUI" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_SERIAL_FROM_EQUI" SCONAME="IV_EXT_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Manufacturer serial number" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EQUI-SERGE"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="GET_SERIAL_FROM_EQUI" SCONAME="RV_SERNR" VERSION="1" LANGU="E" DESCRIPT="Serial Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EQUI-SERNR"/>
   <source>method GET_SERIAL_FROM_EQUI.

  DATA:
    ls_equi LIKE LINE OF me-&gt;t_equi_to_serial.

  ls_equi-matnr = iv_matnr.
  ls_equi-serge = iv_ext_serial.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_equi_to_serial FROM ls_equi
             INTO ls_equi
             TRANSPORTING sernr.
  IF sy-subrc = 0.
    rv_sernr = ls_equi-sernr.
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT sernr FROM equi UP TO 1 ROWS
            INTO ls_equi-sernr
            WHERE serge = ls_equi-serge
              AND matnr = ls_equi-matnr.
    ENDSELECT.
    IF sy-subrc = 0.
      rv_sernr = ls_equi-sernr.
      INSERT ls_equi INTO TABLE me-&gt;t_equi_to_serial.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNA1" VERSION="1" LANGU="E" DESCRIPT="Lookup field in KNA1" EXPOSURE="2" STATE="1" EDITORDER="19 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNA1" SCONAME="IV_KUNNR" VERSION="1" LANGU="E" DESCRIPT="Customer Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNA1-KUNNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNA1" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNA1" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNA1" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_KNA1.

  DATA:
    ls_kna1 LIKE LINE OF me-&gt;t_kna1.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_kna1 INTO ls_kna1
                        WITH KEY kunnr = iv_kunnr.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_kna1
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM kna1 INTO ls_kna1
                    WHERE kunnr = iv_kunnr.
    IF sy-subrc = 0.
      INSERT ls_kna1 INTO TABLE me-&gt;t_kna1.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_kna1
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" VERSION="1" LANGU="E" DESCRIPT="Lookup field in KNB1" EXPOSURE="2" STATE="1" EDITORDER="20 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" SCONAME="IV_KUNNR" VERSION="1" LANGU="E" DESCRIPT="Customer Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNB1-KUNNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" SCONAME="IV_BUKRS" VERSION="1" LANGU="E" DESCRIPT="Company Code" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNB1-BUKRS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNB1" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_KNB1.

  DATA:
    ls_knb1 LIKE LINE OF me-&gt;t_knb1.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_knb1 INTO ls_knb1
                        WITH KEY kunnr = iv_kunnr
                                 bukrs = iv_bukrs.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_knb1
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM knb1 INTO ls_knb1
                    WHERE kunnr = iv_kunnr
                      AND bukrs = iv_bukrs.
    IF sy-subrc = 0.
      INSERT ls_knb1 INTO TABLE me-&gt;t_knb1.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_knb1
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" VERSION="1" LANGU="E" DESCRIPT="Lookup field in KNVV" EXPOSURE="2" STATE="1" EDITORDER="21 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="IV_KUNNR" VERSION="1" LANGU="E" DESCRIPT="Customer Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNVV-KUNNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="IV_VKORG" VERSION="1" LANGU="E" DESCRIPT="Sales Organization" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNVV-VKORG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="IV_VTWEG" VERSION="1" LANGU="E" DESCRIPT="Distribution Channel" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNVV-VTWEG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="IV_SPART" VERSION="1" LANGU="E" DESCRIPT="Division" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="KNVV-SPART"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_KNVV" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_KNVV.

  DATA:
    ls_knvv LIKE LINE OF me-&gt;t_knvv.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_knvv INTO ls_knvv
                        WITH KEY kunnr = iv_kunnr
                                 vkorg = iv_vkorg
                                 vtweg = iv_vtweg
                                 spart = iv_spart.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_knvv
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM knvv INTO ls_knvv
                    WHERE kunnr = iv_kunnr
                      AND vkorg = iv_vkorg
                      AND vtweg = iv_vtweg
                      AND spart = iv_spart.
    IF sy-subrc = 0.
      INSERT ls_knvv INTO TABLE me-&gt;t_knvv.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_knvv
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARA" VERSION="1" LANGU="E" DESCRIPT="Lookup field in MARA" EXPOSURE="2" STATE="1" EDITORDER="16 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARA" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARA-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARA" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARA" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARA" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_MARA.

  DATA:
    ls_mara LIKE LINE OF me-&gt;t_mara.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mara INTO ls_mara
                        WITH KEY matnr = iv_matnr.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_mara
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM mara INTO ls_mara
                    WHERE matnr = iv_matnr.
    IF sy-subrc = 0.
      INSERT ls_mara INTO TABLE me-&gt;t_mara.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_mara
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" VERSION="1" LANGU="E" DESCRIPT="Lookup field in MARC" EXPOSURE="2" STATE="1" EDITORDER="17 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARC-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MARC-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MARC" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_MARC.

  DATA:
    ls_marc LIKE LINE OF me-&gt;t_marc.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_marc INTO ls_marc
                        WITH KEY matnr = iv_matnr
                                 werks = iv_werks.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_marc
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM marc INTO ls_marc
                    WHERE matnr = iv_matnr
                      AND werks = iv_werks.
    IF sy-subrc = 0.
      INSERT ls_marc INTO TABLE me-&gt;t_marc.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_marc
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" VERSION="1" LANGU="E" DESCRIPT="Lookup field in MVKE" EXPOSURE="2" STATE="1" EDITORDER="18 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MVKE-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="IV_VKORG" VERSION="1" LANGU="E" DESCRIPT="Sales Organization" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MVKE-VKORG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="IV_VTWEG" VERSION="1" LANGU="E" DESCRIPT="Distribution Channel" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MVKE-VTWEG"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="LOOKUP_MVKE" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method LOOKUP_MVKE.

  DATA:
    ls_mvke LIKE LINE OF me-&gt;t_mvke.

  CLEAR: ev_fieldvalue.

* First, read from runtime buffered internal table
  READ TABLE me-&gt;t_mvke INTO ls_mvke
                        WITH KEY matnr = iv_matnr
                                 vkorg = iv_vkorg
                                 vtweg = iv_vtweg.
  IF sy-subrc = 0.
    me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_mvke
                                                 iv_fieldname  = iv_fieldname
                                       IMPORTING ev_fieldvalue = ev_fieldvalue ).
  ELSE.
*   If not found, then read from database, and populate into
*   buffered table for subsequent reads
    SELECT SINGLE * FROM mvke INTO ls_mvke
                    WHERE matnr = iv_matnr
                      AND vkorg = iv_vkorg
                      AND vtweg = iv_vtweg.
    IF sy-subrc = 0.
      INSERT ls_mvke INTO TABLE me-&gt;t_mvke.
      me-&gt;return_fieldvalue_dynamically( EXPORTING is_struc      = ls_mvke
                                                   iv_fieldname  = iv_fieldname
                                         IMPORTING ev_fieldvalue = ev_fieldvalue ).
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="RETURN_FIELDVALUE_DYNAMICALLY" VERSION="1" LANGU="E" DESCRIPT="Dynamically return field of a structure (with RTTS)" EXPOSURE="2" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="RETURN_FIELDVALUE_DYNAMICALLY" SCONAME="IS_STRUC" VERSION="1" LANGU="E" DESCRIPT="Generic Structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="DATA"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="RETURN_FIELDVALUE_DYNAMICALLY" SCONAME="IV_FIELDNAME" VERSION="1" LANGU="E" DESCRIPT="Field name" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_COMPDESCR-NAME"/>
   <parameter CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="RETURN_FIELDVALUE_DYNAMICALLY" SCONAME="EV_FIELDVALUE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <exception CLSNAME="ZCL_IDOC_DB_BUFFER" CMPNAME="RETURN_FIELDVALUE_DYNAMICALLY" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method RETURN_FIELDVALUE_DYNAMICALLY.

  DATA:
    lo_struct_descr   TYPE REF TO cl_abap_structdescr,
    lv_position       TYPE sy-tabix,
    lv_error_msg      TYPE string.
  FIELD-SYMBOLS:
    &lt;lfs_fieldvalue&gt;  TYPE any.

  CLEAR ev_fieldvalue.

  lo_struct_descr ?= cl_abap_typedescr=&gt;describe_by_data( is_struc ).
  READ TABLE lo_struct_descr-&gt;components TRANSPORTING NO FIELDS WITH KEY name = iv_fieldname.
  IF sy-subrc = 0.
    lv_position = sy-tabix.
  ELSE.
*   No field &amp; in structure
    MESSAGE ID &apos;AD&apos; TYPE &apos;E&apos; NUMBER &apos;010&apos;
         WITH &apos;No field&apos; iv_fieldname &apos;in structure&apos;
         INTO lv_error_msg.
    RAISE EXCEPTION TYPE ZCX_IDOC_GENERIC_PROCESS_ERROR
      EXPORTING
        msg = lv_error_msg.
  ENDIF.

  ASSIGN COMPONENT lv_position OF STRUCTURE is_struc TO &lt;lfs_fieldvalue&gt;.
  IF sy-subrc = 0.
    ev_fieldvalue = &lt;lfs_fieldvalue&gt;.
  ELSE.
*   Error dynamically assigning field &amp; at position &amp; of structure
    MESSAGE ID &apos;AD&apos; TYPE &apos;E&apos; NUMBER &apos;010&apos;
         WITH &apos;Error dynamically assigning field&apos; iv_fieldname &apos;at position&apos; lv_position
         INTO lv_error_msg.
    RAISE EXCEPTION TYPE ZCX_IDOC_GENERIC_PROCESS_ERROR
      EXPORTING
        msg = lv_error_msg.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_INPUT" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Inbound object" UUID="53317D6645CB0C60E10080000AD00C21" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" MSG_ID="AD" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_IDOC_BASE">
  <types CLSNAME="ZCL_IDOC_INPUT" CMPNAME="TY_VENDOR_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table of vendor serial numbers" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140519" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="36 " R3RELEASE="702" TYPESRC_LENG="210 " TYPESRC="BEGIN OF ty_vendor_serial_items ,

          ebelp TYPE ekpo-ebelp,

          matnr TYPE equi-matnr,

          serge TYPE equi-serge,

          sernr TYPE equi-sernr,

        END OF ty_vendor_serial_items

"/>
  <types CLSNAME="ZCL_IDOC_INPUT" CMPNAME="TY_T_VENDOR_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_VENDOR_SERIAL_ITEMS" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="4 " SRCROW2="13 " SRCCOLUMN2="73 " R3RELEASE="702" TYPESRC_LENG="72 " TYPESRC="ty_t_vendor_serial_items TYPE STANDARD TABLE OF ty_vendor_serial_items

"/>
  <publicSection>class ZCL_IDOC_INPUT definition
  public
  inheriting from ZCL_IDOC_BASE
  abstract
  create public .

public section.
*&quot;* public components of class ZCL_IDOC_INPUT
*&quot;* do not include other source files here!!!

  methods EXECUTE_INBOUND
    importing
      !IV_INPUT_METHOD type BDWFAP_PAR-INPUTMETHD
      !IV_MASS_PROCESSING type BDWFAP_PAR-MASS_PROC
    exporting
      !EV_WORKFLOW_RESULT type BDWF_PARAM-RESULT
      !EV_APPLICATION_VARIABLE type BDWF_PARAM-APPL_VAR
      !EV_IN_UPDATE_TASK type BDWFAP_PAR-UPDATETASK
      !EV_CALL_TRANSACTION_DONE type BDWFAP_PAR-CALLTRANS
    changing
      !CT_IDOC_CONTRL type EDIDC_TT
      !CT_IDOC_DATA type EDIDD_TT
      !CT_IDOC_STATUS type BDTIDOCSTA
      !CT_RETURN_VARIABLES type BDTWFRETVA
      !CT_SERIALIZATION_INFO type BDTI_SER
    raising
      ZCX_WRONG_FUNCTION_CALLED .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCL_IDOC_INPUT
*&quot;* do not include other source files here!!!

  types:
    BEGIN OF ty_vendor_serial_items ,
          ebelp TYPE ekpo-ebelp,
          matnr TYPE equi-matnr,
          serge TYPE equi-serge,
          sernr TYPE equi-sernr,
        END OF ty_vendor_serial_items .
  types:
    ty_t_vendor_serial_items TYPE STANDARD TABLE OF ty_vendor_serial_items .

  data V_INPUT_METHOD type BDWFAP_PAR-INPUTMETHD .
  data V_MASS_PROCESSING type BDWFAP_PAR-MASS_PROC .
  data V_WORKFLOW_RESULT type BDWF_PARAM-RESULT .
  data V_APPLICATION_VARIABLE type BDWF_PARAM-APPL_VAR .
  data V_IN_UPDATE_TASK type BDWFAP_PAR-UPDATETASK .
  data V_CALL_TRANSACTION_DONE type BDWFAP_PAR-CALLTRANS .
  data REF_IDOC_CONTRL type ref to EDIDC_TT .
  data REF_IDOC_DATA type ref to EDIDD_TT .
  data REF_IDOC_STATUS type ref to BDTIDOCSTA .
  data REF_RETURN_VARIABLES type ref to BDTWFRETVA .
  data REF_SERIALIZATION_INFO type ref to BDTI_SER .
  data S_EDIDC type EDIDC .
  data V_COMMIT_IDOC_FM type XFELD .
  data:
    T_EXTENSION TYPE STANDARD TABLE OF E1BPPAREX .
  data T_VENDOR_SERIAL type TY_T_VENDOR_SERIAL_ITEMS .

  methods INIT .
  methods VALIDATION_CHECK
    raising
      ZCX_IDOC_VALIDATION_ERROR .
  methods UPDATE_LOGS
    importing
      !IV_STATUS type EDI_STATUS .
  methods APPEND_IDOC_STATUS
    importing
      !IV_STATUS type EDI_STATUS
      !IV_MSGTY type SYMSGTY
      !IV_MSGID type MSGID
      !IV_MSGNO type ANY
      !IV_MSGV1 type ANY optional
      !IV_MSGV2 type ANY optional
      !IV_MSGV3 type ANY optional
      !IV_MSGV4 type ANY optional
      !IV_SEGNUM type IDOCSSGNUM optional
      !IV_SEGFLD type ANY optional
      !IV_LOGNO type EDI_ALOG optional .
  methods SET_RETVAR_WF_ERROR .
  methods POPULATE_DEFAULT_FIELDS
    importing
      !IS_INPUT type ANY
      !IV_DEFAULT_VALUE type CHAR1 default &apos;/&apos;
    changing
      !CS_OUTPUT type ANY .
  methods SET_COMMIT_FLAG
    importing
      !IV_COMMIT type XFELD .
  methods CREATE_BATCH
    importing
      !IV_MATNR type MCHB-MATNR
      !IV_WERKS type MCHB-WERKS
      !IV_CHARG type MCHB-CHARG
      !IV_LGORT type MCHB-LGORT optional
      !IV_VENDOR_BATCH type MCHA-LICHA optional
      !IV_EXPIRY_DATE type MCHA-VFDAT optional
      !IV_BATCH_ATTR type BAPIBATCHATT optional
      !IV_COMMIT type XFELD default &apos;X&apos;
    returning
      value(RV_SUBRC) type SY-SUBRC .
  methods CREATE_SERIAL
    exporting
      !EV_SUBRC type SY-SUBRC
    changing
      !CT_VENDOR_SERIAL type TY_T_VENDOR_SERIAL_ITEMS .
  methods CREATE_CLASSIFICATION
    importing
      !IV_OBJKEY type BAPI1003_KEY-OBJECT
      !IV_OBJTABLE type BAPI1003_KEY-OBJECTTABLE
      !IV_CLASSNUM type BAPI1003_KEY-CLASSNUM
      !IV_CLASSTYPE type BAPI1003_KEY-CLASSTYPE
      !IV_COMMIT type XFELD default &apos;X&apos;
    returning
      value(RV_SUBRC) type SY-SUBRC .
  methods EXTRACT_EXTENSION_DATA
    importing
      !IV_SORT type XFELD optional .
  methods PROCESS_BAPI_RETURN
    raising
      ZCX_IDOC_FM_ERROR .
  methods PROCESS_IDOC_FM
  abstract
    raising
      ZCX_WRONG_FUNCTION_CALLED
      ZCX_IDOC_FM_ERROR .
  methods PREPROCESS
  abstract
    raising
      ZCX_IDOC_PREPROCESS_ERROR .
  methods POSTPROCESS
  abstract
    raising
      ZCX_IDOC_POSTPROCESS_ERROR .</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_INPUT
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="REF_IDOC_CONTRL" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDC (IDoc Control Record)" EXPOSURE="1" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="EDIDC_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="REF_IDOC_DATA" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDD (IDoc Data Records)" EXPOSURE="1" STATE="1" EDITORDER="8 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="EDIDD_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="REF_IDOC_STATUS" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDIDOCSTAT" EXPOSURE="1" STATE="1" EDITORDER="9 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="BDTIDOCSTA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="REF_RETURN_VARIABLES" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDWFRETVAR" EXPOSURE="1" STATE="1" EDITORDER="10 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="BDTWFRETVA" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="REF_SERIALIZATION_INFO" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDI_SER" EXPOSURE="1" STATE="1" EDITORDER="11 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="BDTI_SER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="S_EDIDC" VERSION="1" LANGU="E" DESCRIPT="Control record (IDoc)" EXPOSURE="1" STATE="1" EDITORDER="12 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDIDC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="T_EXTENSION" VERSION="1" LANGU="E" DESCRIPT="Table of BAPI extension data" EXPOSURE="1" STATE="1" EDITORDER="14 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140519" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="29 " SRCCOLUMN1="4 " SRCROW2="29 " SRCCOLUMN2="47 " R3RELEASE="702" TYPESRC_LENG="46 " TYPESRC="T_EXTENSION TYPE STANDARD TABLE OF E1BPPAREX

"/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="T_VENDOR_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_VENDOR_SERIAL_ITEMS" EXPOSURE="1" STATE="1" EDITORDER="15 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_VENDOR_SERIAL_ITEMS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_APPLICATION_VARIABLE" VERSION="1" LANGU="E" DESCRIPT="Variable to be used by application as required" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWF_PARAM-APPL_VAR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_CALL_TRANSACTION_DONE" VERSION="1" LANGU="E" DESCRIPT="Flag: Application has actually performed call transaction" EXPOSURE="1" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWFAP_PAR-CALLTRANS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_COMMIT_IDOC_FM" VERSION="1" LANGU="E" DESCRIPT="&apos;X&apos; Commit after IDoc FM processing" EXPOSURE="1" STATE="1" EDITORDER="13 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="XFELD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_INPUT_METHOD" VERSION="1" LANGU="E" DESCRIPT="Inbound method for the IDoc inbound function module" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWFAP_PAR-INPUTMETHD" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_IN_UPDATE_TASK" VERSION="1" LANGU="E" DESCRIPT="Flag: Application has triggered update task" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWFAP_PAR-UPDATETASK" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_MASS_PROCESSING" VERSION="1" LANGU="E" DESCRIPT="Flag: Mass processing" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWFAP_PAR-MASS_PROC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT" CMPNAME="V_WORKFLOW_RESULT" VERSION="1" LANGU="E" DESCRIPT="Final value of method" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BDWF_PARAM-RESULT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_IDOC_INPUT" REFCLSNAME="ZCL_IDOC_BASE" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" VERSION="1" LANGU="E" DESCRIPT="Append entry to IDoc status table" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_STATUS" VERSION="1" LANGU="E" DESCRIPT="Status of IDoc" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_STATUS"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGTY" VERSION="1" LANGU="E" DESCRIPT="Message Type" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGID" VERSION="1" LANGU="E" DESCRIPT="Message identification" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MSGID"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGNO" VERSION="1" LANGU="E" DESCRIPT="System Message Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGV1" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGV2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGV3" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_MSGV4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_SEGNUM" VERSION="1" LANGU="E" DESCRIPT="Number of SAP segment" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="IDOCSSGNUM" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_SEGFLD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140519" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="APPEND_IDOC_STATUS" SCONAME="IV_LOGNO" VERSION="1" LANGU="E" DESCRIPT="Application Log" CMPTYPE="1" MTDTYPE="0" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140519" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_ALOG" PAROPTIONL="X"/>
   <source>method APPEND_IDOC_STATUS.

  DATA:
    ls_edids LIKE LINE OF me-&gt;ref_idoc_status-&gt;*.

  ls_edids-docnum   = me-&gt;s_edidc-docnum.
  ls_edids-status   = iv_status.
  ls_edids-msgty    = iv_msgty.
  ls_edids-msgid    = iv_msgid.
  ls_edids-msgno    = iv_msgno.
  ls_edids-msgv1    = iv_msgv1.
  ls_edids-msgv2    = iv_msgv2.
  ls_edids-msgv3    = iv_msgv3.
  ls_edids-msgv4    = iv_msgv4.
  ls_edids-segnum   = iv_segnum.
  ls_edids-segfld   = iv_segfld.
  ls_edids-appl_log = iv_logno.
  APPEND ls_edids TO me-&gt;ref_idoc_status-&gt;*.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" VERSION="1" LANGU="E" DESCRIPT="Create internal batch for vendor batch" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_MATNR" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHB-MATNR"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_WERKS" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHB-WERKS"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_CHARG" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHB-CHARG"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_LGORT" VERSION="1" LANGU="E" DESCRIPT="Storage Location" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHB-LGORT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_VENDOR_BATCH" VERSION="1" LANGU="E" DESCRIPT="Vendor Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-LICHA" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_EXPIRY_DATE" VERSION="1" LANGU="E" DESCRIPT="Shelf Life Expiration or Best-Before Date" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MCHA-VFDAT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_BATCH_ATTR" VERSION="1" LANGU="E" DESCRIPT="BAPI Transfer Structure Batch Attribute" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIBATCHATT" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="IV_COMMIT" VERSION="1" LANGU="E" DESCRIPT="&apos;X&apos; Commit" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PARVALUE="&apos;X&apos;"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_BATCH" SCONAME="RV_SUBRC" VERSION="1" LANGU="E" DESCRIPT="0 = Success" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>method CREATE_BATCH.

  DATA:
    ls_batchatt  TYPE bapibatchatt,
    lt_bapiret   TYPE STANDARD TABLE OF bapiret2.
  FIELD-SYMBOLS:
    &lt;lfs_bapiret&gt;  LIKE LINE OF lt_bapiret.

* Populate values passed by optional parameters
  ls_batchatt            = iv_batch_attr.
  ls_batchatt-expirydate = iv_expiry_date.
  ls_batchatt-vendrbatch = iv_vendor_batch.

  CALL FUNCTION &apos;BAPI_BATCH_CREATE&apos;
    EXPORTING
      material             = iv_matnr
      batch                = iv_charg
      plant                = iv_werks
      batchattributes      = ls_batchatt
      batchstoragelocation = iv_lgort        &quot;Optional
    TABLES
      return               = lt_bapiret.

* Rollback if there is abort message
  READ TABLE lt_bapiret TRANSPORTING NO FIELDS
                        WITH KEY type = c_msg_type_abort.
  IF sy-subrc = 0.
    CALL FUNCTION &apos;BAPI_TRANSACTION_ROLLBACK&apos;.
  ENDIF.
* Populate IDoc error if failure during Batch creation and set RC = 4
  LOOP AT lt_bapiret ASSIGNING &lt;lfs_bapiret&gt; WHERE type = c_msg_type_error
                                                OR type = c_msg_type_abort.
    me-&gt;append_idoc_status( iv_status = c_status_in_err
                            iv_msgty  = c_msg_type_error
                            iv_msgid  = &lt;lfs_bapiret&gt;-id
                            iv_msgno  = &lt;lfs_bapiret&gt;-number
                            iv_msgv1  = &lt;lfs_bapiret&gt;-message_v1
                            iv_msgv2  = &lt;lfs_bapiret&gt;-message_v2
                            iv_msgv3  = &lt;lfs_bapiret&gt;-message_v3
                            iv_msgv4  = &lt;lfs_bapiret&gt;-message_v4 ).
  ENDLOOP.
  IF sy-subrc = 0.
    rv_subrc = 4.
  ELSEIF iv_commit = &apos;X&apos;.
    CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;.
    SET UPDATE TASK LOCAL. &quot;Set back LUW to local update after commit
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" VERSION="1" LANGU="E" DESCRIPT="Create classification" EXPOSURE="1" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="IV_OBJKEY" VERSION="1" LANGU="E" DESCRIPT="Material Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPI1003_KEY-OBJECT"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="IV_OBJTABLE" VERSION="1" LANGU="E" DESCRIPT="Plant" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPI1003_KEY-OBJECTTABLE"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="IV_CLASSNUM" VERSION="1" LANGU="E" DESCRIPT="Batch Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPI1003_KEY-CLASSNUM"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="IV_CLASSTYPE" VERSION="1" LANGU="E" DESCRIPT="Storage Location" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPI1003_KEY-CLASSTYPE"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="IV_COMMIT" VERSION="1" LANGU="E" DESCRIPT="&apos;X&apos; Commit" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PARVALUE="&apos;X&apos;"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_CLASSIFICATION" SCONAME="RV_SUBRC" VERSION="1" LANGU="E" DESCRIPT="0 = Success" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>method CREATE_CLASSIFICATION.

  DATA:
    lt_num        TYPE STANDARD TABLE OF bapi1003_alloc_values_num,
    lt_char       TYPE STANDARD TABLE OF bapi1003_alloc_values_char,
    lt_curr       TYPE STANDARD TABLE OF bapi1003_alloc_values_curr,
    lt_bapiret    TYPE STANDARD TABLE OF bapiret2.
  FIELD-SYMBOLS:
    &lt;lfs_bapiret&gt;  LIKE LINE OF lt_bapiret.

  CALL FUNCTION &apos;BAPI_OBJCL_CHANGE&apos;
    EXPORTING
      objectkey          = iv_objkey
      objecttable        = iv_objtable
      classnum           = iv_classnum
      classtype          = iv_classtype
    TABLES
      allocvaluesnumnew  = lt_num
      allocvaluescharnew = lt_char
      allocvaluescurrnew = lt_curr
      return             = lt_bapiret.

* Rollback if there is abort message
  READ TABLE lt_bapiret TRANSPORTING NO FIELDS
                        WITH KEY type = c_msg_type_abort.
  IF sy-subrc = 0.
    CALL FUNCTION &apos;BAPI_TRANSACTION_ROLLBACK&apos;.
  ENDIF.
* Populate IDoc error if failure during classification creation and set RC = 4
  LOOP AT lt_bapiret ASSIGNING &lt;lfs_bapiret&gt; WHERE type = c_msg_type_error
                                                OR type = c_msg_type_abort.
    me-&gt;append_idoc_status( iv_status = c_status_in_err
                            iv_msgty  = c_msg_type_error
                            iv_msgid  = &lt;lfs_bapiret&gt;-id
                            iv_msgno  = &lt;lfs_bapiret&gt;-number
                            iv_msgv1  = &lt;lfs_bapiret&gt;-message_v1
                            iv_msgv2  = &lt;lfs_bapiret&gt;-message_v2
                            iv_msgv3  = &lt;lfs_bapiret&gt;-message_v3
                            iv_msgv4  = &lt;lfs_bapiret&gt;-message_v4 ).
  ENDLOOP.
  IF sy-subrc = 0.
*   Error creating classification for object &amp; &amp; &amp; &amp;
    me-&gt;append_idoc_status( iv_status = c_status_in_err
                            iv_msgty  = c_msg_type_error
                            iv_msgid  = &apos;AD&apos;
                            iv_msgno  = &apos;010&apos;
							iv_msgv1  = &apos;Error creating classification for object&apos;
                            iv_msgv2  = iv_objkey
                            iv_msgv3  = iv_objtable
                            iv_msgv4  = iv_classnum ).
    rv_subrc = 4.
  ELSEIF iv_commit = &apos;X&apos;.
    CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;.
    SET UPDATE TASK LOCAL. &quot;Set back LUW to local update after commit
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Create internal serial for vendor serial" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_SERIAL" SCONAME="EV_SUBRC" VERSION="1" LANGU="E" DESCRIPT="0 = Success" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="CREATE_SERIAL" SCONAME="CT_VENDOR_SERIAL" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_VENDOR_SERIAL_ITEMS" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_T_VENDOR_SERIAL_ITEMS"/>
   <source>method CREATE_SERIAL.

  DATA:
    lt_serial_objects TYPE itob_object_tab,
    ls_serial_object  LIKE LINE OF lt_serial_objects.

  FIELD-SYMBOLS:
    &lt;lfs_vendor_serial&gt; LIKE LINE OF ct_vendor_serial.

  LOOP AT ct_vendor_serial ASSIGNING &lt;lfs_vendor_serial&gt;.
    ls_serial_object-eqtyp = &apos;S&apos;.       &quot;Customer equipment
    ls_serial_object-serge = &lt;lfs_vendor_serial&gt;-serge.
    ls_serial_object-matnr = &lt;lfs_vendor_serial&gt;-matnr.
    APPEND ls_serial_object TO lt_serial_objects.
  ENDLOOP.

  CALL FUNCTION &apos;ITOB_SERIALNO_CREATE&apos;
    EXPORTING
      i_convert_full_equi = &apos;X&apos;
      i_commit_work       = &apos;S&apos;     &quot;Synchronous commit
    CHANGING
      c_object_tab        = lt_serial_objects
    EXCEPTIONS
      not_successful      = 1
      OTHERS              = 2.
  IF sy-subrc = 0.
*   Update the created serial numbers into the table
    SORT lt_serial_objects BY matnr serge.
    LOOP AT ct_vendor_serial ASSIGNING &lt;lfs_vendor_serial&gt;.
      READ TABLE lt_serial_objects INTO ls_serial_object
                                   WITH KEY matnr = &lt;lfs_vendor_serial&gt;-matnr
                                            serge = &lt;lfs_vendor_serial&gt;-serge
                                   BINARY SEARCH.
      IF sy-subrc = 0.
        &lt;lfs_vendor_serial&gt;-sernr = ls_serial_object-sernr.
      ENDIF.
    ENDLOOP.
    ev_subrc = 0.
    SET UPDATE TASK LOCAL. &quot;Set back LUW to local update after commit
  ELSE.
*   Populate IDoc error if failure during serial creation and set RC = 4
    me-&gt;append_idoc_status( iv_status = c_status_in_err
                            iv_msgty  = c_msg_type_error
                            iv_msgid  = sy-msgid
                            iv_msgno  = sy-msgno
                            iv_msgv1  = sy-msgv1
                            iv_msgv2  = sy-msgv2
                            iv_msgv3  = sy-msgv3
                            iv_msgv4  = sy-msgv4 ).
    ev_subrc = 4.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" VERSION="1" LANGU="E" DESCRIPT="Execute inbound processing for IDoc" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="IV_INPUT_METHOD" VERSION="1" LANGU="E" DESCRIPT="Inbound method for the IDoc inbound function module" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWFAP_PAR-INPUTMETHD"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="IV_MASS_PROCESSING" VERSION="1" LANGU="E" DESCRIPT="Flag: Mass processing" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWFAP_PAR-MASS_PROC"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="EV_WORKFLOW_RESULT" VERSION="1" LANGU="E" DESCRIPT="Final value of method" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWF_PARAM-RESULT"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="EV_APPLICATION_VARIABLE" VERSION="1" LANGU="E" DESCRIPT="Variable to be used by application as required" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWF_PARAM-APPL_VAR"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="EV_IN_UPDATE_TASK" VERSION="1" LANGU="E" DESCRIPT="Flag: Application has triggered update task" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWFAP_PAR-UPDATETASK"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="EV_CALL_TRANSACTION_DONE" VERSION="1" LANGU="E" DESCRIPT="Flag: Application has actually performed call transaction" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BDWFAP_PAR-CALLTRANS"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="CT_IDOC_CONTRL" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDC (IDoc Control Record)" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC_TT"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="CT_IDOC_DATA" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDD (IDoc Data Records)" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDD_TT"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="CT_IDOC_STATUS" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDIDOCSTAT" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="BDTIDOCSTA"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="CT_RETURN_VARIABLES" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDWFRETVAR" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="BDTWFRETVA"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="CT_SERIALIZATION_INFO" VERSION="1" LANGU="E" DESCRIPT="Table Type for BDI_SER" CMPTYPE="1" MTDTYPE="0" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="BDTI_SER"/>
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXECUTE_INBOUND" SCONAME="ZCX_WRONG_FUNCTION_CALLED" VERSION="1" LANGU="E" DESCRIPT="Exception WRONG_FUNCTION_CALLED" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method EXECUTE_INBOUND.

* Set attributes from importing &amp; changing parameters
  me-&gt;v_input_method          = iv_input_method.
  me-&gt;v_mass_processing       = iv_mass_processing.
* Store data reference to tables to avoid copy cost
  GET REFERENCE OF ct_idoc_contrl         INTO me-&gt;ref_idoc_contrl.
  GET REFERENCE OF ct_idoc_data           INTO me-&gt;ref_idoc_data.
  GET REFERENCE OF ct_idoc_status         INTO me-&gt;ref_idoc_status.
  GET REFERENCE OF ct_return_variables    INTO me-&gt;ref_return_variables.
  GET REFERENCE OF ct_serialization_info  INTO me-&gt;ref_serialization_info.

  TRY .
      me-&gt;init( ).

      me-&gt;validation_check( ).

      me-&gt;preprocess( ).

      me-&gt;process_idoc_fm( ).

      me-&gt;postprocess( ).

      me-&gt;update_logs( c_status_in_succ ).

    CATCH ZCX_IDOC_VALIDATION_ERROR ZCX_IDOC_PREPROCESS_ERROR.
      me-&gt;update_logs( c_status_in_err ).
*     For validation and preprocess error, need to additionally set the exporting parameters
      me-&gt;set_retvar_wf_error( ).

    CATCH ZCX_IDOC_FM_ERROR ZCX_IDOC_POSTPROCESS_ERROR.
      me-&gt;update_logs( c_status_in_err ).

  ENDTRY.

* Update exporting parameters
* Changing parameters do not need direct updating as they are modified by reference
  ev_workflow_result        = me-&gt;v_workflow_result.
  ev_application_variable   = me-&gt;v_application_variable.
  ev_in_update_task         = me-&gt;v_in_update_task.
  ev_call_transaction_done  = me-&gt;v_call_transaction_done.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXTRACT_EXTENSION_DATA" VERSION="1" LANGU="E" DESCRIPT="Extract and store extension data from E1BPPAREX in table" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="EXTRACT_EXTENSION_DATA" SCONAME="IV_SORT" VERSION="1" LANGU="E" DESCRIPT="X = Sort" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD" PAROPTIONL="X"/>
   <source>method EXTRACT_EXTENSION_DATA.

  DATA:
    ls_extension LIKE LINE OF me-&gt;t_extension.
  FIELD-SYMBOLS:
    &lt;lfs_edidd&gt;  LIKE LINE OF me-&gt;ref_idoc_data-&gt;*.

* Get the initial line where the Extension segment starts for looping later
* Can&apos;t do binary search because the IDoc data table is not sorted by segment name
  READ TABLE me-&gt;ref_idoc_data-&gt;* TRANSPORTING NO FIELDS
                                  WITH KEY segnam = &apos;E1BPPAREX&apos;.
  IF sy-subrc = 0.
    LOOP AT me-&gt;ref_idoc_data-&gt;* ASSIGNING &lt;lfs_edidd&gt; FROM sy-tabix.
      CASE &lt;lfs_edidd&gt;-segnam.
        WHEN &apos;E1BPPAREX&apos;.
          ls_extension = &lt;lfs_edidd&gt;-sdata.
          APPEND ls_extension TO me-&gt;t_extension.
        WHEN OTHERS.
          EXIT. &quot;Exit the loop once finish processing the Extension segments
      ENDCASE.
    ENDLOOP.
  ENDIF.

  IF iv_sort = &apos;X&apos;.
    SORT me-&gt;t_extension.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="INIT" VERSION="1" LANGU="E" DESCRIPT="Interface initialization" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <source>method INIT.

  READ TABLE me-&gt;ref_idoc_contrl-&gt;* INTO me-&gt;s_edidc INDEX 1.

* Get the new/active singleton for the buffer object
  me-&gt;o_buffer = ZCL_IDOC_DB_BUFFER=&gt;get_instance( ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POPULATE_DEFAULT_FIELDS" VERSION="1" LANGU="E" DESCRIPT="Populate fields marked with / with default values" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POPULATE_DEFAULT_FIELDS" SCONAME="IS_INPUT" VERSION="1" LANGU="E" DESCRIPT="Address type 1 distribution BAPI structure" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POPULATE_DEFAULT_FIELDS" SCONAME="IV_DEFAULT_VALUE" VERSION="1" LANGU="E" DESCRIPT="Single-Character Indicator" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR1" PARVALUE="&apos;/&apos;"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POPULATE_DEFAULT_FIELDS" SCONAME="CS_OUTPUT" VERSION="1" LANGU="E" DESCRIPT="BAPI Reference Structure for Addresses (Org./Company)" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <source>method POPULATE_DEFAULT_FIELDS.

  DATA:
    lo_struct_chg         TYPE REF TO cl_abap_structdescr,
    ls_component_chg      LIKE LINE OF lo_struct_chg-&gt;components.
  FIELD-SYMBOLS:
    &lt;lfs_fieldvalue_in&gt;   TYPE any,
    &lt;lfs_fieldvalue_chg&gt;  TYPE any.

* Get the structure of the output parameter
  lo_struct_chg ?= cl_abap_typedescr=&gt;describe_by_data( cs_output ).

* Loop through all the fields of the output structure
  LOOP AT lo_struct_chg-&gt;components INTO ls_component_chg.
    ASSIGN COMPONENT sy-tabix OF STRUCTURE cs_output TO &lt;lfs_fieldvalue_chg&gt;.
*   If the field is populated with default indicator, then get the default value from the
*   corresponding field of the input structure
    IF sy-subrc = 0 AND &lt;lfs_fieldvalue_chg&gt; = iv_default_value.
      ASSIGN COMPONENT ls_component_chg-name OF STRUCTURE is_input TO &lt;lfs_fieldvalue_in&gt;.
      IF sy-subrc = 0.
        &lt;lfs_fieldvalue_chg&gt; = &lt;lfs_fieldvalue_in&gt;.
      ENDIF.
    ENDIF.
  ENDLOOP.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POSTPROCESS" VERSION="1" LANGU="E" DESCRIPT="Abstract - Postprocessing" EXPOSURE="1" STATE="1" EDITORDER="15 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POSTPROCESS" SCONAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Postprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PREPROCESS" VERSION="1" LANGU="E" DESCRIPT="Abstract - Preprocessing" EXPOSURE="1" STATE="1" EDITORDER="14 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PREPROCESS" SCONAME="ZCX_IDOC_PREPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Preprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_BAPI_RETURN" VERSION="1" LANGU="E" DESCRIPT="Process return messages for BAPI based FMs" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_BAPI_RETURN" SCONAME="ZCX_IDOC_FM_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc FM processing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method PROCESS_BAPI_RETURN.

* Case 1 - Abort message, rollback then raise exception
  READ TABLE me-&gt;ref_idoc_status-&gt;* TRANSPORTING NO FIELDS
                                    WITH KEY msgty = c_msg_type_abort.
  IF sy-subrc = 0.
    CALL FUNCTION &apos;BAPI_TRANSACTION_ROLLBACK&apos;.
    RAISE EXCEPTION TYPE ZCX_IDOC_FM_ERROR.
  ENDIF.

* Case 2 - Error message, raise exception to skip further processing
  READ TABLE me-&gt;ref_idoc_status-&gt;* TRANSPORTING NO FIELDS
                                    WITH KEY status = c_status_in_err.
  IF sy-subrc = 0.
    RAISE EXCEPTION TYPE ZCX_IDOC_FM_ERROR.
  ENDIF.

* Case 3 - No errors and Commit is required
  IF me-&gt;v_commit_idoc_fm = &apos;X&apos;.
    CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;.
    SET UPDATE TASK LOCAL. &quot;Set back LUW to local update after commit
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_IDOC_FM" VERSION="1" LANGU="E" DESCRIPT="Abstract - Process via IDoc Function Module" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_IDOC_FM" SCONAME="ZCX_WRONG_FUNCTION_CALLED" VERSION="1" LANGU="E" DESCRIPT="Exception WRONG_FUNCTION_CALLED" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_IDOC_FM" SCONAME="ZCX_IDOC_FM_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc FM processing error" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="SET_COMMIT_FLAG" VERSION="1" LANGU="E" DESCRIPT="Set &apos;X&apos; to force Commit after IDoc processing" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="SET_COMMIT_FLAG" SCONAME="IV_COMMIT" VERSION="1" LANGU="E" DESCRIPT="&apos;X&apos; = Commit" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="XFELD"/>
   <source>method SET_COMMIT_FLAG.

  me-&gt;v_commit_idoc_fm = iv_commit.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="SET_RETVAR_WF_ERROR" VERSION="1" LANGU="E" DESCRIPT="Set the WF and RetVar to error" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <source>method SET_RETVAR_WF_ERROR.

  DATA:
    ls_retvar LIKE LINE OF me-&gt;ref_return_variables-&gt;*.

  me-&gt;v_workflow_result = c_wf_result_err.

  ls_retvar-wf_param   = c_wf_param_err.
  ls_retvar-doc_number = me-&gt;s_edidc-docnum.
  APPEND ls_retvar TO me-&gt;ref_return_variables-&gt;*.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="UPDATE_LOGS" VERSION="1" LANGU="E" DESCRIPT="Update processing logs" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT" CMPNAME="UPDATE_LOGS" SCONAME="IV_STATUS" VERSION="1" LANGU="E" DESCRIPT="53 - Success, 51 - Error" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_STATUS"/>
   <source>method UPDATE_LOGS.

* Update custom log tables

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="VALIDATION_CHECK" VERSION="1" LANGU="E" DESCRIPT="Validation check (duplicates, etc)" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_INPUT" CMPNAME="VALIDATION_CHECK" SCONAME="ZCX_IDOC_VALIDATION_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc validation error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method VALIDATION_CHECK.

* Code validation checks here

endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_INPUT_SO" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Inbound Sales Order" UUID="53317D6C45CB0C60E10080000AD00C21" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" MSG_ID="AD" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_IDOC_INPUT">
  <types CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="TY_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table of serial-managed material items" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="4 " SRCROW2="9 " SRCCOLUMN2="25 " R3RELEASE="702" TYPESRC_LENG="123 " TYPESRC="BEGIN OF ty_serial_items,

          posnr TYPE vbap-posnr,

          sernr TYPE equi-sernr,

    END OF ty_serial_items

"/>
  <types CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="TY_T_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_SERIAL_ITEMS" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="4 " SRCROW2="11 " SRCCOLUMN2="59 " R3RELEASE="702" TYPESRC_LENG="58 " TYPESRC="ty_t_serial_items TYPE STANDARD TABLE OF ty_serial_items

"/>
  <types CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="TY_CAM_PARTNERS" VERSION="1" LANGU="E" DESCRIPT="Table of partners" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDBY="ENGSWEEY" CHANGEDON="20140326" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="4 " SRCROW2="17 " SRCCOLUMN2="25 " R3RELEASE="702" TYPESRC_LENG="192 " TYPESRC="BEGIN OF ty_cam_partners,

      addr_link   TYPE e1bpparnr-addr_link,

      partn_role  TYPE e1bpparnr-partn_role,

      partn_numb  TYPE e1bpparnr-partn_numb,

    END OF ty_cam_partners

"/>
  <types CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="TY_T_CAM_PARTNERS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_CAM_PARTNERS (sorted)" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" TYPTYPE="4" SRCROW1="19 " SRCCOLUMN1="4 " SRCROW2="19 " SRCCOLUMN2="83 " R3RELEASE="702" TYPESRC_LENG="82 " TYPESRC="ty_t_cam_partners TYPE SORTED TABLE OF ty_cam_partners WITH UNIQUE KEY addr_link

"/>
  <publicSection>class ZCL_IDOC_INPUT_SO definition
  public
  inheriting from ZCL_IDOC_INPUT
  create public .

public section.
*&quot;* public components of class ZCL_IDOC_INPUT_SO
*&quot;* do not include other source files here!!!</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCL_IDOC_INPUT_SO
*&quot;* do not include other source files here!!!

  types:
    BEGIN OF ty_serial_items,
          posnr TYPE vbap-posnr,
          sernr TYPE equi-sernr,
    END OF ty_serial_items .
  types:
    ty_t_serial_items TYPE STANDARD TABLE OF ty_serial_items .
  types:
    BEGIN OF ty_cam_partners,
      addr_link   TYPE e1bpparnr-addr_link,
      partn_role  TYPE e1bpparnr-partn_role,
      partn_numb  TYPE e1bpparnr-partn_numb,
    END OF ty_cam_partners .
  types:
    ty_t_cam_partners TYPE SORTED TABLE OF ty_cam_partners WITH UNIQUE KEY addr_link .

  data V_EXISTING_VBELN type VBAK-VBELN .
  data V_AUART type VBAK-AUART .
  data T_SERIAL_ITEMS type TY_T_SERIAL_ITEMS .
  data T_CAM_PARTNERS type TY_T_CAM_PARTNERS .

  methods CONVERT_MATERIAL
    importing
      !IS_E1BPSDITM1 type E1BPSDITM1
    changing
      !CS_E1BPSDITM type E1BPSDITM
    raising
      ZCX_IDOC_PREPROCESS_ERROR .
  methods CONVERT_UOM
    changing
      !CS_E1BPSDITM type E1BPSDITM
    raising
      ZCX_IDOC_PREPROCESS_ERROR .
  methods ADD_SERIAL_TO_SO
    importing
      !IV_VBELN type VBAK-VBELN
      !IT_SERIAL_ITEMS type TY_T_SERIAL_ITEMS
    raising
      ZCX_IDOC_POSTPROCESS_ERROR .
  methods UPDATE_PARTNER_ADDRESS
    changing
      !CS_E1BPADR1 type E1BPADR1
      !CS_E1BPADR11 type E1BPADR11 .

  methods POSTPROCESS
    redefinition .
  methods PREPROCESS
    redefinition .
  methods PROCESS_IDOC_FM
    redefinition .
  methods UPDATE_LOGS
    redefinition .</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_INPUT_SO
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="T_CAM_PARTNERS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_CAM_PARTNERS (sorted)" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_CAM_PARTNERS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="T_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_SERIAL_ITEMS" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_T_SERIAL_ITEMS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="V_AUART" VERSION="1" LANGU="E" DESCRIPT="Sales Document Type" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="VBAK-AUART" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="V_EXISTING_VBELN" VERSION="1" LANGU="E" DESCRIPT="Sales Document" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="VBAK-VBELN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_IDOC_INPUT_SO" REFCLSNAME="ZCL_IDOC_INPUT" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000">
   <redefinition CLSNAME="ZCL_IDOC_INPUT_SO" REFCLSNAME="ZCL_IDOC_INPUT" VERSION="1" MTDNAME="POSTPROCESS" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_INPUT_SO" REFCLSNAME="ZCL_IDOC_INPUT" VERSION="1" MTDNAME="PREPROCESS" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_INPUT_SO" REFCLSNAME="ZCL_IDOC_INPUT" VERSION="1" MTDNAME="PROCESS_IDOC_FM" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_INPUT_SO" REFCLSNAME="ZCL_IDOC_INPUT" VERSION="1" MTDNAME="UPDATE_LOGS" EXPOSURE="1"/>
  </inheritance>
  <method CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="ADD_SERIAL_TO_SO" VERSION="1" LANGU="E" DESCRIPT="Add serial numbers to sales order" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="ADD_SERIAL_TO_SO" SCONAME="IV_VBELN" VERSION="1" LANGU="E" DESCRIPT="Sales Document" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="VBAK-VBELN"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="ADD_SERIAL_TO_SO" SCONAME="IT_SERIAL_ITEMS" VERSION="1" LANGU="E" DESCRIPT="Table type of TY_SERIAL_ITEMS" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_T_SERIAL_ITEMS"/>
   <exception CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="ADD_SERIAL_TO_SO" SCONAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>method ADD_SERIAL_TO_SO.

  TYPES:
    BEGIN OF lty_vbap,
      posnr TYPE vbap-posnr,
      matnr TYPE vbap-matnr,
      pstyv TYPE vbap-pstyv,
      werks TYPE vbap-werks,
      kunnr TYPE vbak-kunnr,
      vbtyp TYPE vbak-vbtyp,
      auart TYPE vbak-auart,
    END OF   lty_vbap.

  DATA:
    lv_sernp          TYPE marc-sernp,
    lt_vbap           TYPE STANDARD TABLE OF lty_vbap.
  FIELD-SYMBOLS:
    &lt;lfs_serial_item&gt; LIKE LINE OF it_serial_items,
    &lt;lfs_vbap&gt;        LIKE LINE OF lt_vbap,
    &lt;lfs_edids&gt;       LIKE LINE OF me-&gt;ref_idoc_status-&gt;*.

* Retrieve the values for VBAK/VBAP for subsequent processing
  SELECT vbap~posnr vbap~matnr vbap~pstyv vbap~werks
         vbak~kunnr vbak~vbtyp vbak~auart
          INTO TABLE lt_vbap
          FROM vbak JOIN vbap
            ON vbak~vbeln = vbap~vbeln
          WHERE vbak~vbeln = iv_vbeln.
  IF sy-subrc = 0.
    SORT lt_vbap BY posnr.
  ENDIF.


  LOOP AT it_serial_items ASSIGNING &lt;lfs_serial_item&gt;.
    READ TABLE lt_vbap ASSIGNING &lt;lfs_vbap&gt;
                       WITH KEY posnr = &lt;lfs_serial_item&gt;-posnr
                       BINARY SEARCH.
    IF sy-subrc = 0.
*     Get serial profile from MARC-SERNP
      TRY.
          me-&gt;o_buffer-&gt;lookup_marc( EXPORTING iv_matnr      = &lt;lfs_vbap&gt;-matnr
                                               iv_werks      = &lt;lfs_vbap&gt;-werks
                                               iv_fieldname  = &apos;SERNP&apos;
                                     IMPORTING ev_fieldvalue = lv_sernp ).
        CATCH ZCX_IDOC_GENERIC_PROCESS_ERROR ##no_handler.
      ENDTRY.

*     Add the serial number into the SO
      CALL FUNCTION &apos;SERNR_ADD_TO_AU&apos;
        EXPORTING
          sernr                 = &lt;lfs_serial_item&gt;-sernr
          profile               = lv_sernp
          material              = &lt;lfs_vbap&gt;-matnr
          quantity              = &apos;1&apos;
          document              = iv_vbeln
          item                  = &lt;lfs_vbap&gt;-posnr
          debitor               = &lt;lfs_vbap&gt;-kunnr
          vbtyp                 = &lt;lfs_vbap&gt;-vbtyp
          sd_auart              = &lt;lfs_vbap&gt;-auart
          sd_postyp             = &lt;lfs_vbap&gt;-pstyv
        EXCEPTIONS
          konfigurations_error  = 1
          serialnumber_errors   = 2
          serialnumber_warnings = 3
          no_profile_operation  = 4
          OTHERS                = 5.
      IF sy-subrc &lt;&gt; 0.
*       Change all the previous status to error
        LOOP AT me-&gt;ref_idoc_status-&gt;* ASSIGNING &lt;lfs_edids&gt;.
          &lt;lfs_edids&gt;-status = c_status_in_err.
        ENDLOOP.
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = sy-msgid
                                iv_msgno  = sy-msgno
                                iv_msgv1  = sy-msgv1
                                iv_msgv2  = sy-msgv2
                                iv_msgv3  = sy-msgv3
                                iv_msgv4  = sy-msgv4 ).
        RAISE EXCEPTION TYPE ZCX_IDOC_POSTPROCESS_ERROR.
      ENDIF.
    ENDIF.
  ENDLOOP.

* Commit changes if no exception occurred
  CALL FUNCTION &apos;SERIAL_LISTE_POST_AU&apos;.

  CALL FUNCTION &apos;BAPI_TRANSACTION_COMMIT&apos;.
  SET UPDATE TASK LOCAL. &quot;Set back LUW to local update after commit

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_MATERIAL" VERSION="1" LANGU="E" DESCRIPT="Convert material" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_MATERIAL" SCONAME="IS_E1BPSDITM1" VERSION="1" LANGU="E" DESCRIPT="Communication Fields: Sales and Distribution Document Item" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="E1BPSDITM1"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_MATERIAL" SCONAME="CS_E1BPSDITM" VERSION="1" LANGU="E" DESCRIPT="Communication Fields: Sales and Distribution Document Item" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="E1BPSDITM"/>
   <exception CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_MATERIAL" SCONAME="ZCX_IDOC_PREPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Preprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>METHOD convert_material.

  DATA:
    lv_material     LIKE cs_e1bpsditm-material,
    lv_vendor       TYPE eina-lifnr,
    lv_ext_material TYPE eina-idnlf,
    lv_purch_org    TYPE eine-ekorg,
    ls_extension    LIKE LINE OF me-&gt;t_extension.

  IF cs_e1bpsditm-material IS NOT INITIAL.
    lv_ext_material = cs_e1bpsditm-material.
  ELSEIF is_e1bpsditm1-mat_ext IS NOT INITIAL.
    lv_ext_material = is_e1bpsditm1-mat_ext.
  ENDIF.

  CASE me-&gt;s_idoc_options-matnr_conv.
    WHEN &apos;IN_EINA&apos;.
*     Get Vendor from default VENDOR value mapped in Extension
      READ TABLE me-&gt;t_extension INTO ls_extension
                                 TRANSPORTING valuepart1
                                 WITH KEY structure = &apos;VENDOR&apos;
                                 BINARY SEARCH.
      IF sy-subrc = 0 AND ls_extension-valuepart1 IS NOT INITIAL.
        lv_vendor       = ls_extension-valuepart1.
        lv_material     = me-&gt;convert_material_with_eina( iv_vendor       = lv_vendor
                                                          iv_ext_material = lv_ext_material ).
      ELSE.
*       VENDOR not populated for conversion IN_EINA
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = &apos;AD&apos;
                                iv_msgno  = &apos;010&apos;
                                iv_msgv1  = &apos;VENDOR not populated for conversion&apos;
                                iv_msgv2  = me-&gt;s_idoc_options-matnr_conv ).
        RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
      ENDIF.

    WHEN &apos;IN_EINA_EINE&apos;.
*     Get Vendor from default VENDOR value mapped in Extension
      READ TABLE me-&gt;t_extension INTO ls_extension
                                 TRANSPORTING valuepart1
                                 WITH KEY structure = &apos;VENDOR&apos;
                                 BINARY SEARCH.
      IF sy-subrc = 0 AND ls_extension-valuepart1 IS NOT INITIAL.
        lv_vendor = ls_extension-valuepart1.
      ELSE.
*       VENDOR not populated for conversion IN_EINA_EINE
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = &apos;AD&apos;
                                iv_msgno  = &apos;010&apos;
                                iv_msgv1  = &apos;VENDOR not populated for conversion&apos;
                                iv_msgv2  = me-&gt;s_idoc_options-matnr_conv ).
        RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
      ENDIF.
*     Get Purchasing Org from default PURCH_ORG value mapped in Extension
      READ TABLE me-&gt;t_extension INTO ls_extension
                                 TRANSPORTING valuepart1
                                 WITH KEY structure = &apos;PURCH_ORG&apos;
                                 BINARY SEARCH.
      IF sy-subrc = 0 AND ls_extension-valuepart1 IS NOT INITIAL.
        lv_purch_org = ls_extension-valuepart1.
      ELSE.
*       PURCH_ORG not populated for conversion IN_EINA_EINE
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = &apos;AD&apos;
                                iv_msgno  = &apos;010&apos;
                                iv_msgv1  = &apos;PURCH_ORG not populated for conversion&apos;
                                iv_msgv2  = me-&gt;s_idoc_options-matnr_conv ).
        RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
      ENDIF.
      lv_material     = me-&gt;convert_material_with_eina( iv_vendor       = lv_vendor
                                                        iv_ext_material = lv_ext_material
                                                        iv_purch_org    = lv_purch_org
                                                        iv_plant        = cs_e1bpsditm-plant ).

    WHEN &apos;IN_MARA&apos;.
      lv_material = me-&gt;convert_mat_with_marc_mara( cs_e1bpsditm-material ).

    WHEN &apos;IN_MARA_MG&apos;.
      IF me-&gt;s_idoc_options-matkl IS INITIAL.
*       MATKL not populated for conversion IN_MARA_MG
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = &apos;AD&apos;
                                iv_msgno  = &apos;010&apos;
                                iv_msgv1  = &apos;MATKL not populated for conversion&apos;
                                iv_msgv2  = me-&gt;s_idoc_options-matnr_conv ).
        RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
      ENDIF.
      lv_material = me-&gt;convert_mat_with_marc_mara( iv_ext_material    = cs_e1bpsditm-material
                                                    iv_material_group  = me-&gt;s_idoc_options-matkl ).

    WHEN &apos;IN_MARC_MARA&apos;.
      lv_material = me-&gt;convert_mat_with_marc_mara( iv_plant        = cs_e1bpsditm-plant
                                                    iv_ext_material = cs_e1bpsditm-material ).

    WHEN &apos;IN_MARC_MARA_MG&apos;.
      IF me-&gt;s_idoc_options-matkl IS INITIAL.
*       MATKL not populated for conversion IN_MARC_MARA_MG
        me-&gt;append_idoc_status( iv_status = c_status_in_err
                                iv_msgty  = c_msg_type_error
                                iv_msgid  = &apos;AD&apos;
                                iv_msgno  = &apos;010&apos;
                                iv_msgv1  = &apos;MATKL not populated for conversion&apos;
                                iv_msgv2  = me-&gt;s_idoc_options-matnr_conv ).
        RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
      ENDIF.
      lv_material = me-&gt;convert_mat_with_marc_mara( iv_plant           = cs_e1bpsditm-plant
                                                    iv_ext_material    = cs_e1bpsditm-material
                                                    iv_material_group  = me-&gt;s_idoc_options-matkl ).

  ENDCASE.

* Raise error if the conversion was not successful
  IF lv_material IS INITIAL.
*   Material &amp; does not exist
    me-&gt;append_idoc_status( iv_status = c_status_in_err
                            iv_msgty  = c_msg_type_error
                            iv_msgid  = &apos;M3&apos;
                            iv_msgno  = &apos;238&apos;
                            iv_msgv1  = lv_ext_material ).
  ELSE.
    cs_e1bpsditm-material = lv_material.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_UOM" VERSION="1" LANGU="E" DESCRIPT="Convert UOM" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_UOM" SCONAME="CS_E1BPSDITM" VERSION="1" LANGU="E" DESCRIPT="Communication Fields: Sales and Distribution Document Item" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="E1BPSDITM"/>
   <exception CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="CONVERT_UOM" SCONAME="ZCX_IDOC_PREPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Preprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000"/>
   <source>METHOD convert_uom.

  CASE me-&gt;s_idoc_options-uom_conv.
    WHEN &apos;SAP_2_ISO&apos;.
      cs_e1bpsditm-s_unit_iso = me-&gt;convert_uom_sap_to_iso( cs_e1bpsditm-s_unit_iso ).
    WHEN &apos;SAP_2_ISO_CUNIT&apos;.
      cs_e1bpsditm-s_unit_iso = me-&gt;convert_uom_sap_to_iso( iv_sapuom           = cs_e1bpsditm-s_unit_iso
                                                            iv_cunit_conversion = &apos;X&apos; ).
  ENDCASE.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="POSTPROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method POSTPROCESS.

  DATA:
    lv_vbeln  TYPE vbak-vbeln,
    ls_status LIKE LINE OF me-&gt;ref_idoc_status-&gt;*.

  READ TABLE me-&gt;ref_idoc_status-&gt;*
             INTO ls_status
             WITH KEY msgty  = c_msg_type_success
                      msgid  = &apos;V1&apos;
                      msgno  = &apos;311&apos;.

* Add serial numbers to SO if it is populated
  IF me-&gt;t_serial_items IS NOT INITIAL.
    lv_vbeln = ls_status-msgv2.          &quot;Sales Order number
    me-&gt;add_serial_to_so( iv_vbeln        = lv_vbeln
                          it_serial_items = me-&gt;t_serial_items ).
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PREPROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD preprocess.

  DATA:
    ls_serial                 LIKE LINE OF me-&gt;t_serial_items,
    ls_extension              LIKE LINE OF me-&gt;t_extension,
    ls_cam_partner            LIKE LINE OF me-&gt;t_cam_partners.

  FIELD-SYMBOLS:
    &lt;lfs_edidd&gt;               LIKE LINE OF me-&gt;ref_idoc_data-&gt;*,
    &lt;lfs_e1so_createfromdat2&gt; TYPE e1salesorder_createfromdat2,
    &lt;lfs_e1bpsdhd1&gt;           TYPE e1bpsdhd1,
    &lt;lfs_e1bpsditm&gt;           TYPE e1bpsditm,
    &lt;lfs_e1bpsditm1&gt;          TYPE e1bpsditm1,
    &lt;lfs_e1bpparnr&gt;           TYPE e1bpparnr,
    &lt;lfs_e1bpadr1&gt;            TYPE e1bpadr1,
    &lt;lfs_e1bpadr11&gt;           TYPE e1bpadr11.

* Retrieve all the data populated in the extension segment E1BPPAREX and store in instance attribute
  me-&gt;extract_extension_data( iv_sort = &apos;X&apos; ).

* Default preprocessing from configuration
  LOOP AT me-&gt;ref_idoc_data-&gt;* ASSIGNING &lt;lfs_edidd&gt;.
    CASE &lt;lfs_edidd&gt;-segnam.
      WHEN &apos;E1SALESORDER_CREATEFROMDAT2&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1so_createfromdat2&gt; CASTING.
        IF &lt;lfs_e1so_createfromdat2&gt;-salesdocumentin IS NOT INITIAL.
          me-&gt;v_existing_vbeln = &lt;lfs_e1so_createfromdat2&gt;-salesdocumentin.
        ENDIF.

      WHEN &apos;E1BPSDHD1&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpsdhd1&gt; CASTING.
        me-&gt;v_auart = &lt;lfs_e1bpsdhd1&gt;-doc_type.

      WHEN &apos;E1BPSDITM&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpsditm&gt; CASTING.
        IF me-&gt;s_idoc_options-uom_conv IS NOT INITIAL.
          me-&gt;convert_uom( CHANGING cs_e1bpsditm = &lt;lfs_e1bpsditm&gt; ).
        ENDIF.

      WHEN &apos;E1BPSDITM1&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpsditm1&gt; CASTING.
        IF me-&gt;s_idoc_options-matnr_conv IS NOT INITIAL.
          me-&gt;convert_material( EXPORTING is_e1bpsditm1 = &lt;lfs_e1bpsditm1&gt;
                                CHANGING  cs_e1bpsditm  = &lt;lfs_e1bpsditm&gt; ).
        ENDIF.

      WHEN &apos;E1BPPARNR&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpparnr&gt; CASTING.
*       CAM address used for this partner, add into partner internal table
        IF &lt;lfs_e1bpparnr&gt;-addr_link IS NOT INITIAL.
          ls_cam_partner-addr_link  = &lt;lfs_e1bpparnr&gt;-addr_link.
          ls_cam_partner-partn_role = &lt;lfs_e1bpparnr&gt;-partn_role.
          ls_cam_partner-partn_numb = &lt;lfs_e1bpparnr&gt;-partn_numb.
          INSERT ls_cam_partner INTO TABLE me-&gt;t_cam_partners.
        ENDIF.

      WHEN &apos;E1BPADR1&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpadr1&gt; CASTING.

      WHEN &apos;E1BPADR11&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1bpadr11&gt; CASTING.
*       Retrieve and update default values from customer master
        me-&gt;update_partner_address( CHANGING cs_e1bpadr1  = &lt;lfs_e1bpadr1&gt;
                                             cs_e1bpadr11 = &lt;lfs_e1bpadr11&gt; ).

    ENDCASE.
  ENDLOOP.

* Add serial numbers in extension into serial table for adding to SO in postprocessing
  LOOP AT me-&gt;t_extension INTO ls_extension WHERE structure = &apos;SERIAL&apos;.
    ls_serial-posnr = ls_extension-valuepart1.
    ls_serial-sernr = ls_extension-valuepart2.
    APPEND ls_serial TO me-&gt;t_serial_items.
  ENDLOOP.

  IF me-&gt;t_serial_items IS NOT INITIAL.
*   Commit after BAPI processing so that can insert serial
    me-&gt;set_commit_flag( &apos;X&apos; ).
  ENDIF.

* Raise IDoc error if there are any error message collected
  IF me-&gt;ref_idoc_status-&gt;* IS NOT INITIAL.
    RAISE EXCEPTION TYPE zcx_idoc_preprocess_error.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="PROCESS_IDOC_FM" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method PROCESS_IDOC_FM.

  CALL FUNCTION &apos;IDOC_INPUT_SALESORDER_CREATEFR&apos;
    EXPORTING
      input_method          = me-&gt;v_input_method
      mass_processing       = me-&gt;v_mass_processing
    IMPORTING
      workflow_result       = me-&gt;v_workflow_result
      application_variable  = me-&gt;v_application_variable
      in_update_task        = me-&gt;v_in_update_task
      call_transaction_done = me-&gt;v_call_transaction_done
    TABLES
      idoc_contrl           = me-&gt;ref_idoc_contrl-&gt;*
      idoc_data             = me-&gt;ref_idoc_data-&gt;*
      idoc_status           = me-&gt;ref_idoc_status-&gt;*
      return_variables      = me-&gt;ref_return_variables-&gt;*
      serialization_info    = me-&gt;ref_serialization_info-&gt;*
    EXCEPTIONS
      wrong_function_called = 1
      error_message         = 2.
  CASE sy-subrc.
    WHEN 0.
*     Process return messages from BAPI - rollback, commit or trigger exception
      me-&gt;process_bapi_return( ).

    WHEN 1.
      RAISE EXCEPTION TYPE ZCX_WRONG_FUNCTION_CALLED.

    WHEN 2.
*     Catch and store any error messages that did not propagate through call stack with RAISING
      me-&gt;append_idoc_status( iv_status = c_status_in_err
                              iv_msgty  = c_msg_type_error
                              iv_msgid  = sy-msgid
                              iv_msgno  = sy-msgno
                              iv_msgv1  = sy-msgv1
                              iv_msgv2  = sy-msgv2
                              iv_msgv3  = sy-msgv3
                              iv_msgv4  = sy-msgv4 ).
      me-&gt;set_retvar_wf_error( ).
      RAISE EXCEPTION TYPE ZCX_IDOC_FM_ERROR.
  ENDCASE.

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT" CMPNAME="UPDATE_LOGS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>method UPDATE_LOGS.

  FIELD-SYMBOLS:
    &lt;lfs_edids&gt; LIKE LINE OF me-&gt;ref_idoc_status-&gt;*.

* Filter out some messages returned from BAPI prior to logging
  LOOP AT me-&gt;ref_idoc_status-&gt;* ASSIGNING &lt;lfs_edids&gt;.
    IF ( &lt;lfs_edids&gt;-msgid = &apos;V4&apos; AND &lt;lfs_edids&gt;-msgno = &apos;233&apos; ) OR &quot;&lt;Segment&gt; has been processed successfully
       ( &lt;lfs_edids&gt;-msgid = &apos;V4&apos; AND &lt;lfs_edids&gt;-msgno = &apos;219&apos; ) OR &quot;Sales document &amp;1 was not changed
       ( &lt;lfs_edids&gt;-msgid = &apos;V4&apos; AND &lt;lfs_edids&gt;-msgno = &apos;248&apos; ).   &quot;Error in &amp;1 &amp;2
      DELETE me-&gt;ref_idoc_status-&gt;*.
    ENDIF.
  ENDLOOP.

  super-&gt;update_logs( iv_status ).

endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="UPDATE_PARTNER_ADDRESS" VERSION="1" LANGU="E" DESCRIPT="Update partner address with default values" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="UPDATE_PARTNER_ADDRESS" SCONAME="CS_E1BPADR1" VERSION="1" LANGU="E" DESCRIPT="BAPI Reference Structure for Addresses (Org./Company)" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="E1BPADR1"/>
   <parameter CLSNAME="ZCL_IDOC_INPUT_SO" CMPNAME="UPDATE_PARTNER_ADDRESS" SCONAME="CS_E1BPADR11" VERSION="1" LANGU="E" DESCRIPT="BAPI Reference Structure for Addresses (Org./Company)" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140326" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="E1BPADR11"/>
   <source>method UPDATE_PARTNER_ADDRESS.

  DATA:
    lv_cust_no      TYPE bapi4001_1-objkey,
    ls_cam_partner  LIKE LINE OF me-&gt;t_cam_partners,
    lt_bapiad1vl    TYPE STANDARD TABLE OF bapiad1vl,
    lt_bapiadtel    TYPE STANDARD TABLE OF bapiadtel,
    lt_bapiadfax    TYPE STANDARD TABLE OF bapiadfax,
    lt_bapiadsmtp   TYPE STANDARD TABLE OF bapiadsmtp,
    lt_bapiret2     TYPE STANDARD TABLE OF bapiret2,
    ls_bapiad1vl    LIKE LINE OF lt_bapiad1vl,
    ls_bapiadtel    LIKE LINE OF lt_bapiadtel,
    ls_bapiadfax    LIKE LINE OF lt_bapiadfax,
    ls_bapiadsmtp   LIKE LINE OF lt_bapiadsmtp.

  READ TABLE me-&gt;t_cam_partners INTO ls_cam_partner
                                WITH KEY addr_link = cs_e1bpadr1-addr_no.
  IF sy-subrc = 0.
*   Retrieve existing partner address details from customer master
    lv_cust_no = ls_cam_partner-partn_numb.
    CALL FUNCTION &apos;BAPI_ADDRESSORG_GETDETAIL&apos;
      EXPORTING
        obj_type   = &apos;KNA1&apos;
        obj_id     = lv_cust_no
      TABLES
        bapiad1vl  = lt_bapiad1vl
        bapiadtel  = lt_bapiadtel
        bapiadfax  = lt_bapiadfax
        bapiadsmtp = lt_bapiadsmtp
        return     = lt_bapiret2.
    READ TABLE lt_bapiret2 TRANSPORTING NO FIELDS
                           WITH KEY type = c_msg_type_error.
    IF sy-subrc &lt;&gt; 0.
*     Get default address fields from current record
      LOOP AT lt_bapiad1vl INTO ls_bapiad1vl
                           WHERE from_date &lt;= sy-datum
                             AND to_date   &gt;= sy-datum.
        me-&gt;populate_default_fields( EXPORTING is_input  = ls_bapiad1vl
                                     CHANGING  cs_output = cs_e1bpadr1 ).
        me-&gt;populate_default_fields( EXPORTING is_input  = ls_bapiad1vl
                                     CHANGING  cs_output = cs_e1bpadr11 ).
      ENDLOOP.
*     Get default Telephone 1 number
      IF cs_e1bpadr1-tel1_numbr = &apos;/&apos;.
        LOOP AT lt_bapiadtel INTO ls_bapiadtel WHERE consnumber = &apos;001&apos;.
          cs_e1bpadr1-tel1_numbr = ls_bapiadtel-telephone.
        ENDLOOP.
        IF sy-subrc &lt;&gt; 0.
          CLEAR cs_e1bpadr1-tel1_numbr.
        ENDIF.
      ENDIF.
*     Get default Fax number
      IF cs_e1bpadr1-fax_number = &apos;/&apos;.
        LOOP AT lt_bapiadfax INTO ls_bapiadfax WHERE consnumber = &apos;001&apos;.
          cs_e1bpadr1-fax_number = ls_bapiadfax-fax.
        ENDLOOP.
        IF sy-subrc &lt;&gt; 0.
          CLEAR cs_e1bpadr1-fax_number.
        ENDIF.
      ENDIF.
*     Get default e-mail
      IF cs_e1bpadr11-e_mail = &apos;/&apos;.
        LOOP AT lt_bapiadsmtp INTO ls_bapiadsmtp WHERE consnumber = &apos;001&apos;.
          cs_e1bpadr11-e_mail = ls_bapiadsmtp-e_mail.
        ENDLOOP.
        IF sy-subrc &lt;&gt; 0.
          CLEAR cs_e1bpadr11-e_mail.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDIF.

endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Outbound object" UUID="5352E08D2BBE1090E10080000AD00C21" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" CHGDANYON="00000000" CLSABSTRCT="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_IDOC_BASE">
  <publicSection>class ZCL_IDOC_OUTPUT definition
  public
  inheriting from ZCL_IDOC_BASE
  abstract
  create public .

public section.
*&quot;* public components of class ZCL_IDOC_OUTPUT
*&quot;* do not include other source files here!!!

  constants C_STATUS_OUT_ERR type EDI_STATUS value &apos;20&apos;. &quot;#EC NOTEXT
  constants C_STATUS_OUT_SUCC type EDI_STATUS value &apos;18&apos;. &quot;#EC NOTEXT

  methods EXECUTE_OUTBOUND
    importing
      !IS_OBJECT type NAST
      !IS_EDIDC type EDIDC
    exporting
      !ES_EDIDC type EDIDC
      !EV_OBJ_TYPE type WFAS1-ASGTP
    changing
      !CT_EDIDD type EDIDD_TT
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR
      ZCX_IDOC_DATA_NOT_FOR_SEND .
  methods EXECUTE_OUTBOUND_PORT
    importing
      !IV_DOCNUM type EDIDC-DOCNUM
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCL_IDOC_OUTPUT
*&quot;* do not include other source files here!!!

  data S_NAST type NAST .
  data S_EDIDC type EDIDC .
  data V_OBJ_TYPE type WFAS1-ASGTP .
  data REF_EDIDD type ref to EDIDD_TT .
  data S_EDIDS type EDI_DS .

  methods INIT
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR
      ZCX_IDOC_DATA_NOT_FOR_SEND .
  methods VALIDATION_CHECK
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR
      ZCX_IDOC_DATA_NOT_FOR_SEND .
  methods OPEN_IDOC
    importing
      !IV_DOCNUM type EDIDC-DOCNUM
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods PROCESS_IDOC_FM
  abstract
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR
      ZCX_IDOC_DATA_NOT_FOR_SEND .
  methods PREPROCESS
  abstract
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR
      ZCX_IDOC_DATA_NOT_FOR_SEND .
  methods POSTPROCESS
  abstract
    raising
      ZCX_IDOC_POSTPROCESS_ERROR .
  methods SET_IDOC_STATUS
    importing
      !IV_STATUS type EDI_STATUS
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods ADD_MESSAGE
    importing
      !IV_MSGID type MSGID
      !IV_MSGNO type ANY
      !IV_MSGV1 type ANY optional
      !IV_MSGV2 type ANY optional
      !IV_MSGV3 type ANY optional
      !IV_MSGV4 type ANY optional .
  methods START_ERROR_WORKFLOW
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods CLOSE_IDOC
    raising
      ZCX_IDOC_GENERIC_PROCESS_ERROR .
  methods TRANSMIT_TRFC
    raising
      ZCX_IDOC_POSTPROCESS_ERROR .</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_OUTPUT
*&quot;* do not include other source files here!!!

  data T_EDIDD_TEMP type EDIDD_TT .</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="C_STATUS_OUT_ERR" VERSION="1" LANGU="E" DESCRIPT="Status of IDoc" EXPOSURE="2" STATE="1" EDITORDER="6 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;20&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="C_STATUS_OUT_SUCC" VERSION="1" LANGU="E" DESCRIPT="Status of IDoc" EXPOSURE="2" STATE="1" EDITORDER="7 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" ATTDECLTYP="2" ATTVALUE="&apos;18&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="REF_EDIDD" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDD (IDoc Data Records)" EXPOSURE="1" STATE="1" EDITORDER="4 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="EDIDD_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="S_EDIDC" VERSION="1" LANGU="E" DESCRIPT="Control record (IDoc)" EXPOSURE="1" STATE="1" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDIDC" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="S_EDIDS" VERSION="1" LANGU="E" DESCRIPT="Status record for interface to EDI subsystem" EXPOSURE="1" STATE="1" EDITORDER="5 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_DS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="S_NAST" VERSION="1" LANGU="E" DESCRIPT="Message Status" EXPOSURE="1" STATE="1" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="NAST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="T_EDIDD_TEMP" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDD (IDoc Data Records)" EXPOSURE="0" STATE="1" EDITORDER="8 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDIDD_TT" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="V_OBJ_TYPE" VERSION="1" LANGU="E" DESCRIPT="Workflow: Object type of the link" EXPOSURE="1" STATE="1" EDITORDER="3 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="WFAS1-ASGTP" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " R3RELEASE="702" TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZCL_IDOC_OUTPUT" REFCLSNAME="ZCL_IDOC_BASE" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="Add IDoc status message for outbound port processing" EXPOSURE="1" STATE="1" EDITORDER="10 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" MTDTYPE="0" MTDDECLTYP="0" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGID" VERSION="1" LANGU="E" DESCRIPT="Message identification" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="MSGID"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGNO" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGV1" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGV2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGV3" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="ADD_MESSAGE" SCONAME="IV_MSGV4" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ANY" PAROPTIONL="X"/>
   <source>METHOD add_message.

  me-&gt;s_edids-stamid = iv_msgid.
  me-&gt;s_edids-stamno = iv_msgno.
  me-&gt;s_edids-stapa1 = iv_msgv1.
  me-&gt;s_edids-stapa2 = iv_msgv2.
  me-&gt;s_edids-stapa3 = iv_msgv3.
  me-&gt;s_edids-stapa4 = iv_msgv4.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="CLOSE_IDOC" VERSION="1" LANGU="E" DESCRIPT="Close IDoc after processing" EXPOSURE="1" STATE="1" EDITORDER="12 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="CLOSE_IDOC" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000"/>
   <source>METHOD close_idoc.

  CALL FUNCTION &apos;EDI_DOCUMENT_CLOSE_PROCESS&apos;
    EXPORTING
      document_number     = me-&gt;s_edidc-docnum
    EXCEPTIONS
      document_not_open   = 1
      failure_in_db_write = 2
      parameter_error     = 3
      status_set_missing  = 4
      OTHERS              = 5.
  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
      EXPORTING
        msgty = sy-msgty
        msgid = sy-msgid
        msgno = sy-msgno
        msgv1 = sy-msgv1
        msgv2 = sy-msgv2
        msgv3 = sy-msgv3
        msgv4 = sy-msgv4.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" VERSION="1" LANGU="E" DESCRIPT="Execute outbound processing for IDoc" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="IS_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Message Status" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="NAST"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="IS_EDIDC" VERSION="1" LANGU="E" DESCRIPT="Control record (IDoc)" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="ES_EDIDC" VERSION="1" LANGU="E" DESCRIPT="Control record (IDoc)" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="EV_OBJ_TYPE" VERSION="1" LANGU="E" DESCRIPT="Workflow: Object type of the link" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="WFAS1-ASGTP"/>
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="CT_EDIDD" VERSION="1" LANGU="E" DESCRIPT="Table Type for EDIDD (IDoc Data Records)" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDD_TT"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND" SCONAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>METHOD execute_outbound.

* Set attributes from importing &amp; changing parameters
  me-&gt;s_nast  = is_object.
  me-&gt;s_edidc = is_edidc.
* Store data reference to tables to avoid copy cost
  GET REFERENCE OF ct_edidd INTO me-&gt;ref_edidd.

  me-&gt;init( ).

  me-&gt;validation_check( ).

  me-&gt;preprocess( ).

  me-&gt;process_idoc_fm( ).

  me-&gt;postprocess( ).

* Update exporting parameters
* Changing parameters do not need direct updating as they are modified by reference
  es_edidc    = me-&gt;s_edidc.
  ev_obj_type = me-&gt;v_obj_type.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND_PORT" VERSION="1" LANGU="E" DESCRIPT="Execute outbound processing for IDoc from ABAP Port" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND_PORT" SCONAME="IV_DOCNUM" VERSION="1" LANGU="E" DESCRIPT="IDoc number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC-DOCNUM"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="EXECUTE_OUTBOUND_PORT" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>METHOD execute_outbound_port.

  me-&gt;open_idoc( iv_docnum ).

  TRY .
      me-&gt;postprocess( ).

      me-&gt;transmit_trfc( ).

      me-&gt;set_idoc_status( c_status_out_succ ).

    CATCH zcx_idoc_postprocess_error.
      me-&gt;set_idoc_status( c_status_out_err ).

      me-&gt;start_error_workflow( ).
  ENDTRY.

  me-&gt;close_idoc( ).

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="INIT" VERSION="1" LANGU="E" DESCRIPT="Interface initialization" EXPOSURE="1" STATE="1" EDITORDER="3 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="INIT" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="INIT" SCONAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>method INIT.
endmethod.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="OPEN_IDOC" VERSION="1" LANGU="E" DESCRIPT="Open IDoc for process and retrieve data" EXPOSURE="1" STATE="1" EDITORDER="5 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="OPEN_IDOC" SCONAME="IV_DOCNUM" VERSION="1" LANGU="E" DESCRIPT="IDoc number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC-DOCNUM"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="OPEN_IDOC" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>METHOD open_idoc.

  CALL FUNCTION &apos;EDI_DOCUMENT_OPEN_FOR_PROCESS&apos;
    EXPORTING
      document_number          = iv_docnum
    IMPORTING
      idoc_control             = me-&gt;s_edidc
    EXCEPTIONS
      document_foreign_lock    = 1
      document_not_exist       = 2
      document_number_invalid  = 3
      document_is_already_open = 4
      OTHERS                   = 5.
  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
      EXPORTING
        msgty = sy-msgty
        msgid = sy-msgid
        msgno = sy-msgno
        msgv1 = sy-msgv1
        msgv2 = sy-msgv2
        msgv3 = sy-msgv3
        msgv4 = sy-msgv4.
  ENDIF.

  CALL FUNCTION &apos;EDI_SEGMENTS_GET_ALL&apos;
    EXPORTING
      document_number         = iv_docnum
    TABLES
      idoc_containers         = me-&gt;t_edidd_temp
    EXCEPTIONS
      document_number_invalid = 1
      end_of_document         = 2
      OTHERS                  = 3.
  IF sy-subrc = 0.
    GET REFERENCE OF me-&gt;t_edidd_temp INTO me-&gt;ref_edidd.
  ELSE.
    RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
      EXPORTING
        msgty = sy-msgty
        msgid = sy-msgid
        msgno = sy-msgno
        msgv1 = sy-msgv1
        msgv2 = sy-msgv2
        msgv3 = sy-msgv3
        msgv4 = sy-msgv4.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="POSTPROCESS" VERSION="1" LANGU="E" DESCRIPT="Abstract - Postprocessing" EXPOSURE="1" STATE="1" EDITORDER="8 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="POSTPROCESS" SCONAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Postprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PREPROCESS" VERSION="1" LANGU="E" DESCRIPT="Abstract - Preprocessing" EXPOSURE="1" STATE="1" EDITORDER="7 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PREPROCESS" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PREPROCESS" SCONAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PROCESS_IDOC_FM" VERSION="1" LANGU="E" DESCRIPT="Abstract - Process via IDoc Function Module" EXPOSURE="1" STATE="1" EDITORDER="6 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDABSTRCT="X" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PROCESS_IDOC_FM" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PROCESS_IDOC_FM" SCONAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="SET_IDOC_STATUS" VERSION="1" LANGU="E" DESCRIPT="Set IDoc outbound status" EXPOSURE="1" STATE="1" EDITORDER="9 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="SET_IDOC_STATUS" SCONAME="IV_STATUS" VERSION="1" LANGU="E" DESCRIPT="18 - OK, 20 - Error" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000" PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_STATUS"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="SET_IDOC_STATUS" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>METHOD set_idoc_status.

  me-&gt;s_edids-docnum = me-&gt;s_edidc-docnum.
  me-&gt;s_edids-tabnam = &apos;EDI_DS&apos;.
  me-&gt;s_edids-logdat = sy-datum.
  me-&gt;s_edids-logtim = sy-uzeit.
  me-&gt;s_edids-repid = &apos;ZCL_IDOC_OUTPUT&apos;.
  me-&gt;s_edids-status = iv_status.
  me-&gt;s_edids-stamqu = &apos;SAP&apos;.

  CALL FUNCTION &apos;EDI_DOCUMENT_STATUS_SET&apos;
    EXPORTING
      document_number         = me-&gt;s_edidc-docnum
      idoc_status             = me-&gt;s_edids
    EXCEPTIONS
      document_number_invalid = 1
      other_fields_invalid    = 2
      status_invalid          = 3
      OTHERS                  = 4.
  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
      EXPORTING
        msgty = sy-msgty
        msgid = sy-msgid
        msgno = sy-msgno
        msgv1 = sy-msgv1
        msgv2 = sy-msgv2
        msgv3 = sy-msgv3
        msgv4 = sy-msgv4.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="START_ERROR_WORKFLOW" VERSION="1" LANGU="E" DESCRIPT="Trigger workflow for outbound error handling" EXPOSURE="1" STATE="1" EDITORDER="11 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="START_ERROR_WORKFLOW" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000"/>
   <source>METHOD start_error_workflow.

  CALL FUNCTION &apos;IDOC_ERROR_WORKFLOW_START&apos;
    EXPORTING
      docnum                  = me-&gt;s_edidc-docnum
      eventcode               = &apos;EDIO&apos;        &quot;Outbound, error handling with IDoc
    EXCEPTIONS
      no_entry_in_tede5       = 1
      error_in_start_workflow = 2
      OTHERS                  = 3.
  IF sy-subrc &lt;&gt; 0.
    RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
      EXPORTING
        msgty = sy-msgty
        msgid = sy-msgid
        msgno = sy-msgno
        msgv1 = sy-msgv1
        msgv2 = sy-msgv2
        msgv3 = sy-msgv3
        msgv4 = sy-msgv4.
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="TRANSMIT_TRFC" VERSION="1" LANGU="E" DESCRIPT="Transmit IDoc data via tRFC" EXPOSURE="1" STATE="1" EDITORDER="13 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDBY="ENGSWEEY" CHANGEDON="20140429" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="TRANSMIT_TRFC" SCONAME="ZCX_IDOC_POSTPROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="IDoc Postprocessing error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140429" CHANGEDON="00000000"/>
   <source>METHOD transmit_trfc.

  DATA:
    lv_rfc_dest   TYPE edipoa-logdes,
    lt_trfc_edidc TYPE STANDARD TABLE OF edi_dc40,
    lt_trfc_edidd TYPE STANDARD TABLE OF edi_dd40,
    ls_trfc_edidc LIKE LINE OF lt_trfc_edidc,
    ls_trfc_edidd LIKE LINE OF lt_trfc_edidd,
    ls_edidd      LIKE LINE OF me-&gt;ref_edidd-&gt;*.

  IF me-&gt;s_idoc_options-edi_out_port IS INITIAL.
    me-&gt;add_message( iv_msgid = &apos;AD&apos;
                     iv_msgno = &apos;010&apos;
                     iv_msgv1 = &apos;tRFC port not maintained in ZBC_IDOC_OPTIONS&apos; ).
    RAISE EXCEPTION TYPE zcx_idoc_postprocess_error.
  ELSE.
    MOVE-CORRESPONDING me-&gt;s_edidc TO ls_trfc_edidc.
    ls_trfc_edidc-idoctyp = me-&gt;s_edidc-idoctp.
    APPEND ls_trfc_edidc TO lt_trfc_edidc.

    LOOP AT me-&gt;ref_edidd-&gt;* INTO ls_edidd.
      MOVE-CORRESPONDING ls_edidd TO ls_trfc_edidd.
      APPEND ls_trfc_edidd TO lt_trfc_edidd.
    ENDLOOP.

    SELECT SINGLE logdes INTO lv_rfc_dest
                  FROM edipoa
                  WHERE port = me-&gt;s_idoc_options-edi_out_port.

    CALL FUNCTION &apos;IDOC_INBOUND_ASYNCHRONOUS&apos; IN BACKGROUND TASK
      DESTINATION lv_rfc_dest
      TABLES
        idoc_control_rec_40 = lt_trfc_edidc
        idoc_data_rec_40    = lt_trfc_edidd.

    me-&gt;add_message( iv_msgid = &apos;AD&apos;
                     iv_msgno = &apos;010&apos;
                     iv_msgv1 = &apos;IDoc sent to RFC destination&apos;
                     iv_msgv2 = lv_rfc_dest ).

*    Commit work triggered by calling IDoc framework
  ENDIF.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="VALIDATION_CHECK" VERSION="1" LANGU="E" DESCRIPT="Validation check (duplicates, etc)" EXPOSURE="1" STATE="1" EDITORDER="4 " DISPID="0 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422" MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" R3RELEASE="702" BCMTDCAT="00" BCMTDSYN="0">
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="VALIDATION_CHECK" SCONAME="ZCX_IDOC_GENERIC_PROCESS_ERROR" VERSION="1" LANGU="E" DESCRIPT="Generic IDoc Processing Error" MTDTYPE="0" EDITORDER="1 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <exception CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="VALIDATION_CHECK" SCONAME="ZCX_IDOC_DATA_NOT_FOR_SEND" VERSION="1" LANGU="E" DESCRIPT="Data not relevant for sending" MTDTYPE="0" EDITORDER="2 " AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="00000000"/>
   <source>method VALIDATION_CHECK.
endmethod.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IDOC_OUTPUT_INV" VERSION="1" LANGU="E" DESCRIPT="IDoc Framework Outbound Invoice" UUID="5354C4A979181060E10080000AD00C21" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDON="20140422" CHGDANYON="00000000" CLSCCINCL="X" FIXPT="X" UNICODE="X" R3RELEASE="702" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " REFCLSNAME="ZCL_IDOC_OUTPUT" CHANGEDBY="ENGSWEEY">
  <publicSection>class ZCL_IDOC_OUTPUT_INV definition
  public
  inheriting from ZCL_IDOC_OUTPUT
  create public .

public section.
*&quot;* public components of class ZCL_IDOC_OUTPUT_INV
*&quot;* do not include other source files here!!!</publicSection>
  <protectedSection>protected section.
*&quot;* protected components of class ZCL_IDOC_OUTPUT_INV
*&quot;* do not include other source files here!!!

  methods POSTPROCESS
    redefinition .
  methods PREPROCESS
    redefinition .
  methods PROCESS_IDOC_FM
    redefinition .
  methods VALIDATION_CHECK
    redefinition .</protectedSection>
  <privateSection>private section.
*&quot;* private components of class ZCL_IDOC_OUTPUT_INV
*&quot;* do not include other source files here!!!</privateSection>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <textPool/>
  <classDocumentation/>
  <inheritance CLSNAME="ZCL_IDOC_OUTPUT_INV" REFCLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" STATE="1" AUTHOR="ENGSWEEY" CREATEDON="20140422" CHANGEDBY="ENGSWEEY" CHANGEDON="20140422">
   <redefinition CLSNAME="ZCL_IDOC_OUTPUT_INV" REFCLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" MTDNAME="POSTPROCESS" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_OUTPUT_INV" REFCLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" MTDNAME="PREPROCESS" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_OUTPUT_INV" REFCLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" MTDNAME="PROCESS_IDOC_FM" EXPOSURE="1"/>
   <redefinition CLSNAME="ZCL_IDOC_OUTPUT_INV" REFCLSNAME="ZCL_IDOC_OUTPUT" VERSION="1" MTDNAME="VALIDATION_CHECK" EXPOSURE="1"/>
  </inheritance>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="POSTPROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD postprocess.

  FIELD-SYMBOLS:
    &lt;lfs_edidd&gt; LIKE LINE OF me-&gt;ref_edidd-&gt;*,
    &lt;lfs_e1edk01&gt; TYPE e1edk01.

  LOOP AT me-&gt;ref_edidd-&gt;* ASSIGNING &lt;lfs_edidd&gt;.
    CASE &lt;lfs_edidd&gt;-segnam.
      WHEN &apos;E1EDK01&apos;.
        ASSIGN &lt;lfs_edidd&gt;-sdata TO &lt;lfs_e1edk01&gt; CASTING.
        &lt;lfs_e1edk01&gt;-curcy = &apos;USD&apos;.
      WHEN OTHERS.
    ENDCASE.
  ENDLOOP.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PREPROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD preprocess.



ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="PROCESS_IDOC_FM" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process_idoc_fm.

  DATA:
    lv_error_msg TYPE string.

  CALL FUNCTION &apos;IDOC_OUTPUT_INVOIC&apos;
    EXPORTING
      object                        = me-&gt;s_nast
      control_record_in             = me-&gt;s_edidc
    IMPORTING
      control_record_out            = me-&gt;s_edidc
      object_type                   = me-&gt;v_obj_type
    TABLES
      int_edidd                     = me-&gt;ref_edidd-&gt;*
    EXCEPTIONS
      error_message_received        = 1
      data_not_relevant_for_sending = 2
      OTHERS                        = 3.
  CASE sy-subrc.
    WHEN 0.
*       NOP
    WHEN 2.
      MESSAGE ID sy-msgid TYPE c_msg_type_error NUMBER sy-msgno
           WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4
           INTO lv_error_msg.
      RAISE EXCEPTION TYPE zcx_idoc_data_not_for_send
        EXPORTING
          msg = lv_error_msg.
    WHEN OTHERS.
      RAISE EXCEPTION TYPE zcx_idoc_generic_process_error
        EXPORTING
          msgty = sy-msgty
          msgid = sy-msgid
          msgno = sy-msgno
          msgv1 = sy-msgv1
          msgv2 = sy-msgv2
          msgv3 = sy-msgv3
          msgv4 = sy-msgv4.
  ENDCASE.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
  <method CLSNAME="ZCL_IDOC_OUTPUT" CMPNAME="VALIDATION_CHECK" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " CREATEDON="00000000" CHANGEDON="00000000" MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD validation_check.

* Sample to raise not relevant for send if some criteria is not fulfilled
*  DATA:
*    lv_msg TYPE string.
*
*  RAISE EXCEPTION TYPE zcx_idoc_data_not_for_send
*    EXPORTING
*      msg = lv_msg.

ENDMETHOD.</source>
   <methodDocumentation/>
  </method>
 </CLAS>
 <FUGR AREA="ZBC_FG_IDOC_FW" SPRAS="E" AREAT="IDoc Framework">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZBC_FG_IDOC_FW" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" CNAM="ENGSWEEY" CDAT="20130717" UNAM="ENGSWEEY" UDAT="20140326" VERN="000003" RMAND="100" RLOAD="E" FIXPT="X" SDATE="20140429" STIME="163422" IDATE="20140326" ITIME="142817" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZBC_FG_IDOC_FWTOP.                &quot; Global Data
  INCLUDE LZBC_FG_IDOC_FWUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZBC_FG_IDOC_FWF...                &quot; Subroutines
* INCLUDE LZBC_FG_IDOC_FWO...                &quot; PBO-Modules
* INCLUDE LZBC_FG_IDOC_FWI...                &quot; PAI-Modules
* INCLUDE LZBC_FG_IDOC_FWE...                &quot; Events
* INCLUDE LZBC_FG_IDOC_FWP...                &quot; Local class implement.</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZBC_FG_IDOC_FWTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" CNAM="ENGSWEEY" CDAT="20130717" UNAM="ENGSWEEY" UDAT="20140326" VERN="000003" RMAND="100" FIXPT="X" SDATE="20140326" STIME="142817" IDATE="20140326" ITIME="142817" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZBC_FG_IDOC_FW.               &quot;MESSAGE-ID ..

* INCLUDE LZBC_FG_IDOC_FWD...                &quot; Local class definition</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="Z_IDOC_INPUT_FW" STEXT="Inbound IDoc processing framework">
    <importing PARAMETER="INPUT_METHOD" REFERENCE="X" TYP="BDWFAP_PAR-INPUTMETHD"/>
    <importing PARAMETER="MASS_PROCESSING" REFERENCE="X" TYP="BDWFAP_PAR-MASS_PROC"/>
    <exporting PARAMETER="WORKFLOW_RESULT" REFERENCE="X" TYP="BDWFAP_PAR-RESULT"/>
    <exporting PARAMETER="APPLICATION_VARIABLE" REFERENCE="X" TYP="BDWFAP_PAR-APPL_VAR"/>
    <exporting PARAMETER="IN_UPDATE_TASK" REFERENCE="X" TYP="BDWFAP_PAR-UPDATETASK"/>
    <exporting PARAMETER="CALL_TRANSACTION_DONE" REFERENCE="X" TYP="BDWFAP_PAR-CALLTRANS"/>
    <tables PARAMETER="IDOC_CONTRL" DBSTRUCT="EDIDC"/>
    <tables PARAMETER="IDOC_DATA" DBSTRUCT="EDIDD"/>
    <tables PARAMETER="IDOC_STATUS" DBSTRUCT="BDIDOCSTAT"/>
    <tables PARAMETER="RETURN_VARIABLES" DBSTRUCT="BDWFRETVAR"/>
    <tables PARAMETER="SERIALIZATION_INFO" DBSTRUCT="BDI_SER"/>
    <exceptions EXCEPTION="WRONG_FUNCTION_CALLED"/>
    <documentation PARAMETER="INPUT_METHOD" KIND="P" STEXT="Inbound method for the IDoc inbound function module" INDEX=" 001"/>
    <documentation PARAMETER="MASS_PROCESSING" KIND="P" STEXT="Flag: Mass processing" INDEX=" 002"/>
    <documentation PARAMETER="WORKFLOW_RESULT" KIND="P" STEXT="Final value of method" INDEX=" 003"/>
    <documentation PARAMETER="APPLICATION_VARIABLE" KIND="P" STEXT="Variable to be used by application as required" INDEX=" 004"/>
    <documentation PARAMETER="IN_UPDATE_TASK" KIND="P" STEXT="Flag: Application has triggered update task" INDEX=" 005"/>
    <documentation PARAMETER="CALL_TRANSACTION_DONE" KIND="P" STEXT="Flag: Application has actually performed call transaction" INDEX=" 006"/>
    <documentation PARAMETER="IDOC_CONTRL" KIND="P" STEXT="Control record (IDoc)" INDEX=" 007"/>
    <documentation PARAMETER="IDOC_DATA" KIND="P" STEXT="Data record (IDoc)" INDEX=" 008"/>
    <documentation PARAMETER="IDOC_STATUS" KIND="P" STEXT="ALE IDoc status (subset of all IDoc status fields)" INDEX=" 009"/>
    <documentation PARAMETER="RETURN_VARIABLES" KIND="P" STEXT="Assignment of IDoc or document no. to method parameter" INDEX=" 010"/>
    <documentation PARAMETER="SERIALIZATION_INFO" KIND="P" STEXT="Serialization objects for one/several IDocs" INDEX=" 011"/>
    <documentation PARAMETER="WRONG_FUNCTION_CALLED" KIND="X" INDEX=" 012"/>
    <fm_source_new>************************************************************************
  DATA:
    lo_interface      TYPE REF TO zcl_idoc_input,
    ls_edidc          LIKE LINE OF idoc_contrl,
    ls_edids          LIKE LINE OF idoc_status,
    ls_ret_var        LIKE LINE OF return_variables.

  READ TABLE idoc_contrl INTO ls_edidc INDEX 1.
  TRY.
      lo_interface ?= zcl_idoc_input=&gt;get_instance( iv_direction  = ls_edidc-direct
                                                    iv_mestyp     = ls_edidc-mestyp
                                                    iv_mescod     = ls_edidc-mescod
                                                    iv_mesfct     = ls_edidc-mesfct ).

      lo_interface-&gt;execute_inbound(
        EXPORTING
          iv_input_method          = input_method
          iv_mass_processing       = mass_processing
        IMPORTING
          ev_workflow_result       = workflow_result
          ev_application_variable  = application_variable
          ev_in_update_task        = in_update_task
          ev_call_transaction_done = call_transaction_done
        CHANGING
          ct_idoc_contrl           = idoc_contrl[]
          ct_idoc_data             = idoc_data[]
          ct_idoc_status           = idoc_status[]
          ct_return_variables      = return_variables[]
          ct_serialization_info    = serialization_info[] ).

    CATCH cx_sy_create_object_error.
*     Issue error message
*     010(AD) - Error creating IDoc framework object for &amp; &amp;
      ls_edids-docnum = ls_edidc-docnum.
      ls_edids-status = zcl_idoc_base=&gt;c_status_in_err.
      ls_edids-msgty  = zcl_idoc_base=&gt;c_msg_type_error.
      ls_edids-msgid  = &apos;AD&apos;.
      ls_edids-msgno  = &apos;010&apos;.
      ls_edids-msgv1  = &apos;Error creating IDoc framework object for&apos;.
      ls_edids-msgv2  = ls_edidc-mestyp.
      ls_edids-msgv3  = ls_edidc-mescod.
      ls_edids-msgv4  = ls_edidc-mesfct.
      APPEND ls_edids TO idoc_status.
*     Set output values
      workflow_result       = zcl_idoc_base=&gt;c_wf_result_err.
      ls_ret_var-wf_param   = zcl_idoc_base=&gt;c_wf_param_err.
      ls_ret_var-doc_number = ls_edidc-docnum.
      APPEND ls_ret_var TO return_variables.

    CATCH zcx_wrong_function_called .
      RAISE wrong_function_called.
  ENDTRY.

* Clear the static reference in base class
  zcl_idoc_input=&gt;free_instance( ).</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_IDOC_OUTPUT_FW" STEXT="Outbound IDoc processing framework">
    <importing PARAMETER="OBJECT" REFERENCE="X" TYP="NAST"/>
    <importing PARAMETER="CONTROL_RECORD_IN" REFERENCE="X" TYP="EDIDC"/>
    <exporting PARAMETER="CONTROL_RECORD_OUT" REFERENCE="X" TYP="EDIDC"/>
    <exporting PARAMETER="OBJECT_TYPE" REFERENCE="X" TYP="WFAS1-ASGTP"/>
    <tables PARAMETER="INT_EDIDD" DBSTRUCT="EDIDD"/>
    <exceptions EXCEPTION="ERROR_MESSAGE_RECEIVED"/>
    <exceptions EXCEPTION="DATA_NOT_RELEVANT_FOR_SENDING"/>
    <documentation PARAMETER="OBJECT" KIND="P" STEXT="Message Status" INDEX=" 001"/>
    <documentation PARAMETER="CONTROL_RECORD_IN" KIND="P" STEXT="Control record (IDoc)" INDEX=" 002"/>
    <documentation PARAMETER="CONTROL_RECORD_OUT" KIND="P" STEXT="Control record (IDoc)" INDEX=" 003"/>
    <documentation PARAMETER="OBJECT_TYPE" KIND="P" STEXT="Workflow: Object type of the link" INDEX=" 004"/>
    <documentation PARAMETER="INT_EDIDD" KIND="P" STEXT="Data record (IDoc)" INDEX=" 005"/>
    <documentation PARAMETER="ERROR_MESSAGE_RECEIVED" KIND="X" STEXT="Error during outbound processing" INDEX=" 006"/>
    <documentation PARAMETER="DATA_NOT_RELEVANT_FOR_SENDING" KIND="X" STEXT="Data not relevant" INDEX=" 007"/>
    <fm_source_new>DATA:
    lo_interface    TYPE REF TO zcl_idoc_output,
    lo_excp_error   TYPE REF TO zcx_idoc_generic_process_error,
    lo_excp_nosend  TYPE REF TO zcx_idoc_data_not_for_send,
    lv_msg          TYPE string.

  TRY.
      lo_interface ?= zcl_idoc_output=&gt;get_instance( iv_direction  = control_record_in-direct
                                                     iv_mestyp     = control_record_in-mestyp
                                                     iv_mescod     = control_record_in-mescod
                                                     iv_mesfct     = control_record_in-mesfct ).

      lo_interface-&gt;execute_outbound(
        EXPORTING
          is_object   = object
          is_edidc    = control_record_in
        IMPORTING
          es_edidc    = control_record_out
          ev_obj_type = object_type
        CHANGING
          ct_edidd    = int_edidd[] ).

    CATCH cx_sy_create_object_error.
      MESSAGE ID &apos;AD&apos;
              TYPE zcl_idoc_base=&gt;c_msg_type_error
              NUMBER &apos;010&apos;
              WITH &apos;Error creating IDoc framework object for&apos;
                   control_record_in-mestyp
                   control_record_in-mescod
                   control_record_in-mesfct
              RAISING error_message_received.

*   Output status error - error during processing
    CATCH zcx_idoc_generic_process_error INTO lo_excp_error.
      IF lo_excp_error-&gt;msgid IS NOT INITIAL AND lo_excp_error-&gt;msgno IS NOT INITIAL.
        MESSAGE ID lo_excp_error-&gt;msgid
                TYPE zcl_idoc_base=&gt;c_msg_type_error
                NUMBER lo_excp_error-&gt;msgno
                WITH lo_excp_error-&gt;msgv1
                     lo_excp_error-&gt;msgv2
                     lo_excp_error-&gt;msgv3
                     lo_excp_error-&gt;msgv4
                RAISING error_message_received.
      ELSE.
        lv_msg = lo_excp_error-&gt;get_text( ).
        MESSAGE lv_msg TYPE zcl_idoc_base=&gt;c_msg_type_error RAISING error_message_received.
      ENDIF.

*   Output status success - not relevant for sending
    CATCH zcx_idoc_data_not_for_send INTO lo_excp_nosend.
      lv_msg = lo_excp_nosend-&gt;get_text( ).
      MESSAGE lv_msg TYPE zcl_idoc_base=&gt;c_msg_type_warning RAISING data_not_relevant_for_sending.
  ENDTRY.

* Clear the static reference in base class
  zcl_idoc_output=&gt;free_instance( ).</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="Z_IDOC_OUTPUT_FW_PORT" REMOTE="R" STEXT="Outbound IDoc processing framework - ABAP Port">
    <tables PARAMETER="I_EDIDC" DBSTRUCT="EDIDC"/>
    <documentation PARAMETER="I_EDIDC" KIND="P" STEXT="Control record (IDoc)" INDEX=" 001"/>
    <fm_source_new>DATA:
    lo_interface  TYPE REF TO zcl_idoc_output,
    lo_excp_error TYPE REF TO zcx_idoc_generic_process_error,
    ls_edidc      LIKE LINE OF i_edidc[],
    lv_msg        TYPE string.

  LOOP AT i_edidc[] INTO ls_edidc.
    TRY.
        lo_interface ?= zcl_idoc_output=&gt;get_instance( iv_direction  = ls_edidc-direct
                                                       iv_mestyp     = ls_edidc-mestyp
                                                       iv_mescod     = ls_edidc-mescod
                                                       iv_mesfct     = ls_edidc-mesfct ).

        lo_interface-&gt;execute_outbound_port( ls_edidc-docnum ).

      CATCH cx_sy_create_object_error.
        MESSAGE ID &apos;AD&apos;
                TYPE zcl_idoc_base=&gt;c_msg_type_error
                NUMBER &apos;010&apos;
                WITH &apos;Error creating IDoc framework object for&apos;
                     ls_edidc-mestyp
                     ls_edidc-mescod
                     ls_edidc-mesfct.

*     Error during processing
      CATCH zcx_idoc_generic_process_error INTO lo_excp_error.
        IF lo_excp_error-&gt;msgid IS NOT INITIAL AND lo_excp_error-&gt;msgno IS NOT INITIAL.
          MESSAGE ID lo_excp_error-&gt;msgid
                  TYPE zcl_idoc_base=&gt;c_msg_type_error
                  NUMBER lo_excp_error-&gt;msgno
                  WITH lo_excp_error-&gt;msgv1
                       lo_excp_error-&gt;msgv2
                       lo_excp_error-&gt;msgv3
                       lo_excp_error-&gt;msgv4.
        ELSE.
          lv_msg = lo_excp_error-&gt;get_text( ).
          MESSAGE lv_msg TYPE zcl_idoc_base=&gt;c_msg_type_error.
        ENDIF.
    ENDTRY.

    CLEAR lo_interface.
    zcl_idoc_output=&gt;free_instance( ).
  ENDLOOP.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
</nugget>
